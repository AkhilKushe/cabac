

================================================================
== Vitis HLS Report for 'decode_decision_Pipeline_VITIS_LOOP_53_1'
================================================================
* Date:           Thu Mar 30 10:45:18 2023

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        cabac_top
* Solution:       solution2 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.757 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_53_1  |        ?|        ?|         1|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%state_ivlCurrRange_1_i = alloca i32 1"   --->   Operation 4 'alloca' 'state_ivlCurrRange_1_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%phi_ln59 = alloca i32 1"   --->   Operation 5 'alloca' 'phi_ln59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0_i = alloca i32 1"   --->   Operation 6 'alloca' 'state_bstate_currIdx_0_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0_i = alloca i32 1"   --->   Operation 7 'alloca' 'state_bstate_held_aligned_word_0_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0_i = alloca i32 1"   --->   Operation 8 'alloca' 'state_bstate_n_bits_held_0_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read_1 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1"   --->   Operation 9 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read_2 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read"   --->   Operation 10 'read' 'p_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%bStream1_load_2_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %bStream1_load_2"   --->   Operation 11 'read' 'bStream1_load_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%bStream_load_2_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %bStream_load_2"   --->   Operation 12 'read' 'bStream_load_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%select_ln1076_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %select_ln1076"   --->   Operation 13 'read' 'select_ln1076_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%select_ln1076_2_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %select_ln1076_2"   --->   Operation 14 'read' 'select_ln1076_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %state_bstate_currIdx_read_assign"   --->   Operation 15 'read' 'state_bstate_currIdx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_held_aligned_word_read_assign"   --->   Operation 16 'read' 'state_bstate_held_aligned_word_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_n_bits_held_read_assign"   --->   Operation 17 'read' 'state_bstate_n_bits_held_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %state_bstate_n_bits_held_read, i8 %state_bstate_n_bits_held_0_i"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %state_bstate_held_aligned_word_read, i8 %state_bstate_held_aligned_word_0_i"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %state_bstate_currIdx_read, i32 %state_bstate_currIdx_0_i"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %select_ln1076_2_read, i32 %phi_ln59"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %select_ln1076_read, i32 %state_ivlCurrRange_1_i"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.75>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%state_ivlCurrRange_1_i_load = load i32 %state_ivlCurrRange_1_i"   --->   Operation 24 'load' 'state_ivlCurrRange_1_i_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 25 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp = partselect i24 @_ssdm_op_PartSelect.i24.i32.i32.i32, i32 %state_ivlCurrRange_1_i_load, i32 8, i32 31"   --->   Operation 26 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (2.45ns)   --->   "%icmp_ln1072 = icmp_eq  i24 %tmp, i24 0"   --->   Operation 27 'icmp' 'icmp_ln1072' <Predicate = true> <Delay = 2.45> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln53 = br i1 %icmp_ln1072, void %._crit_edge1.loopexit.exitStub, void %_ZlSILi32ELb0EER11ap_int_baseIXT_EXT0_EES2_i.exit_ifconv.i" [src/arith_dec.cpp:53->src/arith_dec.cpp:89]   --->   Operation 28 'br' 'br_ln53' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%phi_ln59_load = load i32 %phi_ln59"   --->   Operation 29 'load' 'phi_ln59_load' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0_i_load = load i32 %state_bstate_currIdx_0_i" [src/utils.cpp:5]   --->   Operation 30 'load' 'state_bstate_currIdx_0_i_load' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0_i_load = load i8 %state_bstate_held_aligned_word_0_i" [src/utils.cpp:24]   --->   Operation 31 'load' 'state_bstate_held_aligned_word_0_i_load' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0_i_load = load i8 %state_bstate_n_bits_held_0_i" [src/utils.cpp:16]   --->   Operation 32 'load' 'state_bstate_n_bits_held_0_i_load' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%specloopname_ln1015 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1"   --->   Operation 33 'specloopname' 'specloopname_ln1015' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%shl_ln1026 = shl i32 %state_ivlCurrRange_1_i_load, i32 1"   --->   Operation 34 'shl' 'shl_ln1026' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%zext_ln13 = zext i8 %state_bstate_n_bits_held_0_i_load" [src/utils.cpp:13]   --->   Operation 35 'zext' 'zext_ln13' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i8 %state_bstate_n_bits_held_0_i_load" [src/utils.cpp:13]   --->   Operation 36 'zext' 'zext_ln13_1' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp_eq  i8 %state_bstate_n_bits_held_0_i_load, i8 0" [src/utils.cpp:13]   --->   Operation 37 'icmp' 'icmp_ln13' <Predicate = (icmp_ln1072)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%zext_ln23 = zext i8 %state_bstate_held_aligned_word_0_i_load" [src/utils.cpp:23]   --->   Operation 38 'zext' 'zext_ln23' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%shl_ln23 = shl i32 255, i32 %zext_ln13" [src/utils.cpp:23]   --->   Operation 39 'shl' 'shl_ln23' <Predicate = (icmp_ln1072)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%trunc_ln23 = trunc i32 %shl_ln23" [src/utils.cpp:23]   --->   Operation 40 'trunc' 'trunc_ln23' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%xor_ln23 = xor i8 %trunc_ln23, i8 255" [src/utils.cpp:23]   --->   Operation 41 'xor' 'xor_ln23' <Predicate = (icmp_ln1072)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%and_ln24 = and i8 %state_bstate_held_aligned_word_0_i_load, i8 %xor_ln23" [src/utils.cpp:24]   --->   Operation 42 'and' 'and_ln24' <Predicate = (icmp_ln1072)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln5 = trunc i32 %state_bstate_currIdx_0_i_load" [src/utils.cpp:5]   --->   Operation 43 'trunc' 'trunc_ln5' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.82ns)   --->   "%retVal_5 = mux i8 @_ssdm_op_Mux.ap_auto.4i8.i2, i8 %bStream_load_2_read, i8 %bStream1_load_2_read, i8 %p_read_2, i8 %p_read_1, i2 %trunc_ln5" [src/utils.cpp:5]   --->   Operation 44 'mux' 'retVal_5' <Predicate = (icmp_ln1072)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (2.55ns)   --->   "%add_ln6 = add i32 %state_bstate_currIdx_0_i_load, i32 1" [src/utils.cpp:6]   --->   Operation 45 'add' 'add_ln6' <Predicate = (icmp_ln1072)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %retVal_5, i32 7" [src/utils.cpp:42]   --->   Operation 46 'bitselect' 'tmp_1' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%retVal = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %and_ln24, i1 %tmp_1" [src/utils.cpp:42]   --->   Operation 47 'bitconcatenate' 'retVal' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.91ns)   --->   "%add_ln14 = add i9 %zext_ln13_1, i9 511" [src/utils.cpp:14]   --->   Operation 48 'add' 'add_ln14' <Predicate = (icmp_ln1072)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%sext_ln14 = sext i9 %add_ln14" [src/utils.cpp:14]   --->   Operation 49 'sext' 'sext_ln14' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%retVal_1 = lshr i32 %zext_ln23, i32 %sext_ln14" [src/utils.cpp:14]   --->   Operation 50 'lshr' 'retVal_1' <Predicate = (icmp_ln1072)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%retVal_2 = trunc i32 %retVal_1" [src/utils.cpp:11]   --->   Operation 51 'trunc' 'retVal_2' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%zext_ln11 = zext i1 %retVal_2" [src/utils.cpp:11]   --->   Operation 52 'zext' 'zext_ln11' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.91ns)   --->   "%add_ln16 = add i8 %state_bstate_n_bits_held_0_i_load, i8 255" [src/utils.cpp:16]   --->   Operation 53 'add' 'add_ln16' <Predicate = (icmp_ln1072)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.24ns)   --->   "%select_ln13 = select i1 %icmp_ln13, i8 7, i8 %add_ln16" [src/utils.cpp:13]   --->   Operation 54 'select' 'select_ln13' <Predicate = (icmp_ln1072)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.24ns)   --->   "%retVal_3 = select i1 %icmp_ln13, i8 %retVal_5, i8 %state_bstate_held_aligned_word_0_i_load" [src/utils.cpp:13]   --->   Operation 55 'select' 'retVal_3' <Predicate = (icmp_ln1072)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.69ns)   --->   "%select_ln13_2 = select i1 %icmp_ln13, i32 %add_ln6, i32 %state_bstate_currIdx_0_i_load" [src/utils.cpp:13]   --->   Operation 56 'select' 'select_ln13_2' <Predicate = (icmp_ln1072)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%retVal_6 = select i1 %icmp_ln13, i9 %retVal, i9 %zext_ln11" [src/utils.cpp:13]   --->   Operation 57 'select' 'retVal_6' <Predicate = (icmp_ln1072)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%trunc_ln1543 = trunc i32 %phi_ln59_load"   --->   Operation 58 'trunc' 'trunc_ln1543' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%shl_ln1543_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %trunc_ln1543, i1 0"   --->   Operation 59 'bitconcatenate' 'shl_ln1543_1' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (3.25ns) (out node of the LUT)   --->   "%or_ln1543 = or i9 %shl_ln1543_1, i9 %retVal_6"   --->   Operation 60 'or' 'or_ln1543' <Predicate = (icmp_ln1072)> <Delay = 3.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %phi_ln59_load, i32 8, i32 30"   --->   Operation 61 'partselect' 'tmp_4' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%ret = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %tmp_4, i9 %or_ln1543"   --->   Operation 62 'bitconcatenate' 'ret' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (1.58ns)   --->   "%store_ln53 = store i8 %select_ln13, i8 %state_bstate_n_bits_held_0_i" [src/arith_dec.cpp:53->src/arith_dec.cpp:89]   --->   Operation 63 'store' 'store_ln53' <Predicate = (icmp_ln1072)> <Delay = 1.58>
ST_2 : Operation 64 [1/1] (1.58ns)   --->   "%store_ln53 = store i8 %retVal_3, i8 %state_bstate_held_aligned_word_0_i" [src/arith_dec.cpp:53->src/arith_dec.cpp:89]   --->   Operation 64 'store' 'store_ln53' <Predicate = (icmp_ln1072)> <Delay = 1.58>
ST_2 : Operation 65 [1/1] (1.58ns)   --->   "%store_ln53 = store i32 %select_ln13_2, i32 %state_bstate_currIdx_0_i" [src/arith_dec.cpp:53->src/arith_dec.cpp:89]   --->   Operation 65 'store' 'store_ln53' <Predicate = (icmp_ln1072)> <Delay = 1.58>
ST_2 : Operation 66 [1/1] (1.58ns)   --->   "%store_ln53 = store i32 %ret, i32 %phi_ln59" [src/arith_dec.cpp:53->src/arith_dec.cpp:89]   --->   Operation 66 'store' 'store_ln53' <Predicate = (icmp_ln1072)> <Delay = 1.58>
ST_2 : Operation 67 [1/1] (1.58ns)   --->   "%store_ln53 = store i32 %shl_ln1026, i32 %state_ivlCurrRange_1_i" [src/arith_dec.cpp:53->src/arith_dec.cpp:89]   --->   Operation 67 'store' 'store_ln53' <Predicate = (icmp_ln1072)> <Delay = 1.58>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln53 = br void" [src/arith_dec.cpp:53->src/arith_dec.cpp:89]   --->   Operation 68 'br' 'br_ln53' <Predicate = (icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%phi_ln59_load_1 = load i32 %phi_ln59"   --->   Operation 69 'load' 'phi_ln59_load_1' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0_i_load_1 = load i32 %state_bstate_currIdx_0_i"   --->   Operation 70 'load' 'state_bstate_currIdx_0_i_load_1' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0_i_load_1 = load i8 %state_bstate_held_aligned_word_0_i"   --->   Operation 71 'load' 'state_bstate_held_aligned_word_0_i_load_1' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0_i_load_1 = load i8 %state_bstate_n_bits_held_0_i"   --->   Operation 72 'load' 'state_bstate_n_bits_held_0_i_load_1' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %state_bstate_n_bits_held_0_i_out, i8 %state_bstate_n_bits_held_0_i_load_1"   --->   Operation 73 'write' 'write_ln0' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %state_bstate_held_aligned_word_0_i_out, i8 %state_bstate_held_aligned_word_0_i_load_1"   --->   Operation 74 'write' 'write_ln0' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %state_bstate_currIdx_0_i_out, i32 %state_bstate_currIdx_0_i_load_1"   --->   Operation 75 'write' 'write_ln0' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %phi_ln59_out, i32 %phi_ln59_load_1"   --->   Operation 76 'write' 'write_ln0' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%write_ln1026 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %state_ivlCurrRange_1_i_out, i32 %state_ivlCurrRange_1_i_load"   --->   Operation 77 'write' 'write_ln1026' <Predicate = (!icmp_ln1072)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 78 'ret' 'ret_ln0' <Predicate = (!icmp_ln1072)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('state.n_bits_held') [19]  (0 ns)
	'store' operation ('store_ln0') of variable 'state.n_bits_held' on local variable 'state.n_bits_held' [29]  (1.59 ns)

 <State 2>: 6.76ns
The critical path consists of the following:
	'load' operation ('state_bstate_n_bits_held_0_i_load', src/utils.cpp:16) on local variable 'state.n_bits_held' [45]  (0 ns)
	'add' operation ('add_ln14', src/utils.cpp:14) [61]  (1.92 ns)
	'lshr' operation ('retVal', src/utils.cpp:14) [63]  (0 ns)
	'select' operation ('retVal', src/utils.cpp:13) [70]  (0 ns)
	'or' operation ('or_ln1543') [73]  (3.25 ns)
	'store' operation ('store_ln53', src/arith_dec.cpp:53->src/arith_dec.cpp:89) of variable 'ret' on local variable 'state.ivlOffset.V' [79]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
