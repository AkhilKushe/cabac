-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cabac_top is
generic (
    C_M_AXI_CTX_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_CTX_ID_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_CTX_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_CTX_USER_VALUE : INTEGER := 0;
    C_M_AXI_CTX_PROT_VALUE : INTEGER := 0;
    C_M_AXI_CTX_CACHE_VALUE : INTEGER := 3 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_ctx_AWVALID : OUT STD_LOGIC;
    m_axi_ctx_AWREADY : IN STD_LOGIC;
    m_axi_ctx_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ADDR_WIDTH-1 downto 0);
    m_axi_ctx_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ctx_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_AWUSER_WIDTH-1 downto 0);
    m_axi_ctx_WVALID : OUT STD_LOGIC;
    m_axi_ctx_WREADY : IN STD_LOGIC;
    m_axi_ctx_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_DATA_WIDTH-1 downto 0);
    m_axi_ctx_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_DATA_WIDTH/8-1 downto 0);
    m_axi_ctx_WLAST : OUT STD_LOGIC;
    m_axi_ctx_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_WUSER_WIDTH-1 downto 0);
    m_axi_ctx_ARVALID : OUT STD_LOGIC;
    m_axi_ctx_ARREADY : IN STD_LOGIC;
    m_axi_ctx_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ADDR_WIDTH-1 downto 0);
    m_axi_ctx_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ctx_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ARUSER_WIDTH-1 downto 0);
    m_axi_ctx_RVALID : IN STD_LOGIC;
    m_axi_ctx_RREADY : OUT STD_LOGIC;
    m_axi_ctx_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_DATA_WIDTH-1 downto 0);
    m_axi_ctx_RLAST : IN STD_LOGIC;
    m_axi_ctx_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_RUSER_WIDTH-1 downto 0);
    m_axi_ctx_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_BVALID : IN STD_LOGIC;
    m_axi_ctx_BREADY : OUT STD_LOGIC;
    m_axi_ctx_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_BUSER_WIDTH-1 downto 0);
    bitStream_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    bitStream_TVALID : IN STD_LOGIC;
    bitStream_TREADY : OUT STD_LOGIC;
    bitOut_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    bitOut_TVALID : IN STD_LOGIC;
    bitOut_TREADY : OUT STD_LOGIC;
    data_in_s_TDATA : IN STD_LOGIC_VECTOR (4095 downto 0);
    data_in_s_TVALID : IN STD_LOGIC;
    data_in_s_TREADY : OUT STD_LOGIC;
    data_out_s_TDATA : OUT STD_LOGIC_VECTOR (335 downto 0);
    data_out_s_TVALID : OUT STD_LOGIC;
    data_out_s_TREADY : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of cabac_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cabac_top_cabac_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=5523,HLS_SYN_LUT=8738,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011110";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_127 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100111";
    constant ap_const_lv32_128 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_137 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001111";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv32_1F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_20F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000001111";
    constant ap_const_lv32_210 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000010000";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_22F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000101111";
    constant ap_const_lv32_230 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000110000";
    constant ap_const_lv32_237 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000110111";
    constant ap_const_lv32_238 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_247 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000111";
    constant ap_const_lv32_248 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001001000";
    constant ap_const_lv32_24F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001001111";
    constant ap_const_lv32_250 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001010000";
    constant ap_const_lv32_257 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001010111";
    constant ap_const_lv32_258 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011000";
    constant ap_const_lv32_25F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011111";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_870 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100001110000";
    constant ap_const_lv32_877 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100001110111";
    constant ap_const_lv32_878 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100001111000";
    constant ap_const_lv32_87F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100001111111";
    constant ap_const_lv32_880 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010000000";
    constant ap_const_lv32_887 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010000111";
    constant ap_const_lv32_890 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010010000";
    constant ap_const_lv32_89F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010011111";
    constant ap_const_lv32_8A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010100000";
    constant ap_const_lv32_8AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010101111";
    constant ap_const_lv32_8B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010110000";
    constant ap_const_lv32_8BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100010111111";
    constant ap_const_lv32_8C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011000000";
    constant ap_const_lv32_8CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011001111";
    constant ap_const_lv32_8D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011010000";
    constant ap_const_lv32_8DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011011111";
    constant ap_const_lv32_8E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011100000";
    constant ap_const_lv32_8EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011101111";
    constant ap_const_lv32_8F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011110000";
    constant ap_const_lv32_8FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011111111";
    constant ap_const_lv32_900 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100000000";
    constant ap_const_lv32_90F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100001111";
    constant ap_const_lv32_910 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100010000";
    constant ap_const_lv32_91F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100011111";
    constant ap_const_lv32_920 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100100000";
    constant ap_const_lv32_92F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100101111";
    constant ap_const_lv32_930 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100110000";
    constant ap_const_lv32_93F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100111111";
    constant ap_const_lv32_940 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101000000";
    constant ap_const_lv32_94F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101001111";
    constant ap_const_lv32_950 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101010000";
    constant ap_const_lv32_95F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101011111";
    constant ap_const_lv32_960 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101100000";
    constant ap_const_lv32_96F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101101111";
    constant ap_const_lv32_970 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101110000";
    constant ap_const_lv32_97F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100101111111";
    constant ap_const_lv32_980 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110000000";
    constant ap_const_lv32_987 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110000111";
    constant ap_const_lv32_988 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110001000";
    constant ap_const_lv32_98F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110001111";
    constant ap_const_lv32_990 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110010000";
    constant ap_const_lv32_997 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110010111";
    constant ap_const_lv32_998 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110011000";
    constant ap_const_lv32_99F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110011111";
    constant ap_const_lv32_9A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110100000";
    constant ap_const_lv32_9A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110100111";
    constant ap_const_lv32_9A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110101000";
    constant ap_const_lv32_9AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110101111";
    constant ap_const_lv32_9B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110110000";
    constant ap_const_lv32_FE0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000111111100000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv31_33 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000110011";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

attribute shreg_extract : string;
    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal globalCtx : STD_LOGIC_VECTOR (63 downto 0);
    signal baeState_0_constprop : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111110";
    signal data_in_s_TDATA_blk_n : STD_LOGIC;
    signal data_out_s_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal globalCtx_read_reg_1432 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_in_s_header_slice_sao_luma_flag_reg_1520 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_s_header_slice_sao_chroma_flag_reg_1525 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_left_ctu_SaoTypeIdx_0_reg_1530 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_SaoTypeIdx_1_reg_1535 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_SaoTypeIdx_2_reg_1540 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_0_0_reg_1545 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_1_0_reg_1550 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_2_0_reg_1555 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_3_0_reg_1560 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_4_0_reg_1565 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_0_1_reg_1570 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_1_1_reg_1575 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_2_1_reg_1580 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_3_1_reg_1585 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_4_1_reg_1590 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_0_2_reg_1595 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_1_2_reg_1600 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_2_2_reg_1605 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_3_2_reg_1610 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoOffsetVal_4_2_reg_1615 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_left_ctu_SaoEOClass_0_reg_1620 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_SaoEOClass_1_reg_1625 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_SaoEOClass_2_reg_1630 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_sao_band_position_0_reg_1635 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_sao_band_position_1_reg_1640 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_sao_band_position_2_reg_1645 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_left_ctu_is_available_reg_1650 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_up_ctu_SaoTypeIdx_0_reg_1655 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_SaoTypeIdx_1_reg_1660 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_SaoTypeIdx_2_reg_1665 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_0_0_reg_1670 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_1_0_reg_1675 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_2_0_reg_1680 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_3_0_reg_1685 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_4_0_reg_1690 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_0_1_reg_1695 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_1_1_reg_1700 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_2_1_reg_1705 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_3_1_reg_1710 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_4_1_reg_1715 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_0_2_reg_1720 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_1_2_reg_1725 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_2_2_reg_1730 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_3_2_reg_1735 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoOffsetVal_4_2_reg_1740 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_up_ctu_SaoEOClass_0_reg_1745 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_SaoEOClass_1_reg_1750 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_SaoEOClass_2_reg_1755 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_sao_band_position_0_reg_1760 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_sao_band_position_1_reg_1765 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_sao_band_position_2_reg_1770 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_in_up_ctu_is_available_reg_1775 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_firstCTU_fu_1239_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_firstCTU_reg_1780 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1784 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_1789 : STD_LOGIC_VECTOR (0 downto 0);
    signal qp_assign_fu_1329_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal qp_assign_reg_1794 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tempBst_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal retVal_reg_1809 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tempBst_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal retVal_27_reg_1814 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_reg_1819 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln11_2_fu_1352_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln11_2_reg_1824 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal data_out_sao_band_position_2_reg_1829 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal data_out_sao_band_position_1_reg_1834 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_sao_band_position_0_reg_1839 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_SaoEOClass_2_reg_1844 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_SaoEOClass_1_reg_1849 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_SaoEOClass_0_reg_1854 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_SaoTypeIdx_0_reg_1859 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_SaoTypeIdx_1_reg_1864 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_SaoTypeIdx_2_reg_1869 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_out_1_load_reg_1874 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal data_out_1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_out_1_load_1_reg_1879 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal data_out_1_load_2_reg_1884 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_out_1_load_3_reg_1889 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal data_out_1_load_4_reg_1894 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_out_1_load_5_reg_1899 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal data_out_1_load_6_reg_1904 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_out_1_load_7_reg_1909 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal data_out_1_load_8_reg_1914 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_out_1_load_9_reg_1919 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal data_out_1_load_10_reg_1924 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_out_1_load_11_reg_1929 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal data_out_1_load_12_reg_1934 : STD_LOGIC_VECTOR (15 downto 0);
    signal ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ctxTables_ce0 : STD_LOGIC;
    signal ctxTables_we0 : STD_LOGIC;
    signal ctxTables_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctxTables_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_out_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_out_1_ce0 : STD_LOGIC;
    signal data_out_1_we0 : STD_LOGIC;
    signal data_out_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_out_1_ce1 : STD_LOGIC;
    signal data_out_1_we1 : STD_LOGIC;
    signal tempBst_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempBst_ce0 : STD_LOGIC;
    signal tempBst_we0 : STD_LOGIC;
    signal tempBst_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempBst_ce1 : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_write : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WLAST : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_RREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_BREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_write : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_streamCtxRAM_read : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_ce0 : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_we0 : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_bitStream_TREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_ce0 : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_we0 : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_start : STD_LOGIC;
    signal grp_sao_top_fu_618_ap_done : STD_LOGIC;
    signal grp_sao_top_fu_618_ap_idle : STD_LOGIC;
    signal grp_sao_top_fu_618_ap_ready : STD_LOGIC;
    signal grp_sao_top_fu_618_out_SaoOffsetVal_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sao_top_fu_618_out_SaoOffsetVal_ce0 : STD_LOGIC;
    signal grp_sao_top_fu_618_out_SaoOffsetVal_we0 : STD_LOGIC;
    signal grp_sao_top_fu_618_out_SaoOffsetVal_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sao_top_fu_618_out_SaoOffsetVal_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sao_top_fu_618_out_SaoOffsetVal_ce1 : STD_LOGIC;
    signal grp_sao_top_fu_618_out_SaoOffsetVal_we1 : STD_LOGIC;
    signal grp_sao_top_fu_618_out_SaoOffsetVal_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sao_top_fu_618_bStream_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sao_top_fu_618_bStream_ce0 : STD_LOGIC;
    signal grp_sao_top_fu_618_ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sao_top_fu_618_ctxTables_ce0 : STD_LOGIC;
    signal grp_sao_top_fu_618_ctxTables_we0 : STD_LOGIC;
    signal grp_sao_top_fu_618_ctxTables_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_baeState_0_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sao_top_fu_618_baeState_0_constprop_o_ap_vld : STD_LOGIC;
    signal grp_sao_top_fu_618_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sao_top_fu_618_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WLAST : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_RREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_BREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_ce0 : STD_LOGIC;
    signal ctx_AWVALID : STD_LOGIC;
    signal ctx_AWREADY : STD_LOGIC;
    signal ctx_WVALID : STD_LOGIC;
    signal ctx_WREADY : STD_LOGIC;
    signal ctx_ARVALID : STD_LOGIC;
    signal ctx_ARREADY : STD_LOGIC;
    signal ctx_RVALID : STD_LOGIC;
    signal ctx_RREADY : STD_LOGIC;
    signal ctx_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_RLAST : STD_LOGIC;
    signal ctx_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_RFIFONUM : STD_LOGIC_VECTOR (10 downto 0);
    signal ctx_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal ctx_BVALID : STD_LOGIC;
    signal ctx_BREADY : STD_LOGIC;
    signal ctx_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal ctx_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ctxWritten_reg_567 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call15 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal streamCtxRAM_din : STD_LOGIC_VECTOR (7 downto 0);
    signal streamCtxRAM_full_n : STD_LOGIC;
    signal streamCtxRAM_write : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal streamCtxRAM_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal streamCtxRAM_empty_n : STD_LOGIC;
    signal streamCtxRAM_read : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_sao_top_fu_618_ap_start_reg : STD_LOGIC := '0';
    signal grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal data_in_s_header_cabac_init_flag_fu_725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal initType_1_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_in_s_header_slice_type_fu_715_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln69_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln67_fu_1247_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln69_1_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln67_1_fu_1257_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal initType_2_fu_1267_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal initType_3_fu_1281_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_1303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_733_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal a_assign_fu_1311_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal cmp_i1_i_i_i_i_i_fu_1323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_58_fu_1319_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_1395_p26 : STD_LOGIC_VECTOR (319 downto 0);
    signal regslice_both_data_out_s_U_apdone_blk : STD_LOGIC;
    signal ap_block_state25 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal regslice_both_bitStream_U_apdone_blk : STD_LOGIC;
    signal bitStream_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal bitStream_TVALID_int_regslice : STD_LOGIC;
    signal bitStream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_bitStream_U_ack_in : STD_LOGIC;
    signal regslice_both_bitOut_U_apdone_blk : STD_LOGIC;
    signal bitOut_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal bitOut_TVALID_int_regslice : STD_LOGIC;
    signal regslice_both_bitOut_U_ack_in : STD_LOGIC;
    signal regslice_both_data_in_s_U_apdone_blk : STD_LOGIC;
    signal data_in_s_TDATA_int_regslice : STD_LOGIC_VECTOR (4095 downto 0);
    signal data_in_s_TVALID_int_regslice : STD_LOGIC;
    signal data_in_s_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_data_in_s_U_ack_in : STD_LOGIC;
    signal data_out_s_TDATA_int_regslice : STD_LOGIC_VECTOR (335 downto 0);
    signal data_out_s_TVALID_int_regslice : STD_LOGIC;
    signal data_out_s_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_data_out_s_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_40_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        streamCtxRAM_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        streamCtxRAM_full_n : IN STD_LOGIC;
        streamCtxRAM_write : OUT STD_LOGIC;
        icmp_ln79 : IN STD_LOGIC_VECTOR (0 downto 0);
        icmp_ln79_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln40 : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_29_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ctx_AWVALID : OUT STD_LOGIC;
        m_axi_ctx_AWREADY : IN STD_LOGIC;
        m_axi_ctx_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WVALID : OUT STD_LOGIC;
        m_axi_ctx_WREADY : IN STD_LOGIC;
        m_axi_ctx_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WLAST : OUT STD_LOGIC;
        m_axi_ctx_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARVALID : OUT STD_LOGIC;
        m_axi_ctx_ARREADY : IN STD_LOGIC;
        m_axi_ctx_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RVALID : IN STD_LOGIC;
        m_axi_ctx_RREADY : OUT STD_LOGIC;
        m_axi_ctx_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_RLAST : IN STD_LOGIC;
        m_axi_ctx_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_ctx_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BVALID : IN STD_LOGIC;
        m_axi_ctx_BREADY : OUT STD_LOGIC;
        m_axi_ctx_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        globalCtx : IN STD_LOGIC_VECTOR (63 downto 0);
        streamCtxRAM_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        streamCtxRAM_full_n : IN STD_LOGIC;
        streamCtxRAM_write : OUT STD_LOGIC );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_8_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        streamCtxRAM_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        streamCtxRAM_empty_n : IN STD_LOGIC;
        streamCtxRAM_read : OUT STD_LOGIC;
        ctxWritten : IN STD_LOGIC_VECTOR (9 downto 0);
        ctxTables_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ctxTables_ce0 : OUT STD_LOGIC;
        ctxTables_we0 : OUT STD_LOGIC;
        ctxTables_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_45_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bitStream_TVALID : IN STD_LOGIC;
        bitStream_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        bitStream_TREADY : OUT STD_LOGIC;
        tempBst_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        tempBst_ce0 : OUT STD_LOGIC;
        tempBst_we0 : OUT STD_LOGIC;
        tempBst_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cabac_top_sao_top IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read226 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read47 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read351 : IN STD_LOGIC_VECTOR (0 downto 0);
        out_SaoOffsetVal_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_SaoOffsetVal_ce0 : OUT STD_LOGIC;
        out_SaoOffsetVal_we0 : OUT STD_LOGIC;
        out_SaoOffsetVal_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_SaoOffsetVal_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_SaoOffsetVal_ce1 : OUT STD_LOGIC;
        out_SaoOffsetVal_we1 : OUT STD_LOGIC;
        out_SaoOffsetVal_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read410 : IN STD_LOGIC_VECTOR (8 downto 0);
        p_read612 : IN STD_LOGIC_VECTOR (7 downto 0);
        bStream_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bStream_ce0 : OUT STD_LOGIC;
        bStream_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctxTables_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ctxTables_ce0 : OUT STD_LOGIC;
        ctxTables_we0 : OUT STD_LOGIC;
        ctxTables_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctxTables_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        baeState_0_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        baeState_0_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        baeState_0_constprop_o_ap_vld : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_14_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ctx_AWVALID : OUT STD_LOGIC;
        m_axi_ctx_AWREADY : IN STD_LOGIC;
        m_axi_ctx_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WVALID : OUT STD_LOGIC;
        m_axi_ctx_WREADY : IN STD_LOGIC;
        m_axi_ctx_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WLAST : OUT STD_LOGIC;
        m_axi_ctx_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARVALID : OUT STD_LOGIC;
        m_axi_ctx_ARREADY : IN STD_LOGIC;
        m_axi_ctx_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RVALID : IN STD_LOGIC;
        m_axi_ctx_RREADY : OUT STD_LOGIC;
        m_axi_ctx_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_RLAST : IN STD_LOGIC;
        m_axi_ctx_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_ctx_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BVALID : IN STD_LOGIC;
        m_axi_ctx_BREADY : OUT STD_LOGIC;
        m_axi_ctx_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        globalCtx : IN STD_LOGIC_VECTOR (63 downto 0);
        ctxWritten : IN STD_LOGIC_VECTOR (9 downto 0);
        ctxTables_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ctxTables_ce0 : OUT STD_LOGIC;
        ctxTables_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        empty : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cabac_top_ctxTables_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cabac_top_data_out_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component cabac_top_tempBst_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cabac_top_fifo_w8_d512_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component cabac_top_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        globalCtx : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cabac_top_ctx_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (10 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cabac_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    ctxTables_U : component cabac_top_ctxTables_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ctxTables_address0,
        ce0 => ctxTables_ce0,
        we0 => ctxTables_we0,
        d0 => ctxTables_d0,
        q0 => ctxTables_q0);

    data_out_1_U : component cabac_top_data_out_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 15,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_out_1_address0,
        ce0 => data_out_1_ce0,
        we0 => data_out_1_we0,
        d0 => grp_sao_top_fu_618_out_SaoOffsetVal_d0,
        q0 => data_out_1_q0,
        address1 => data_out_1_address1,
        ce1 => data_out_1_ce1,
        we1 => data_out_1_we1,
        d1 => grp_sao_top_fu_618_out_SaoOffsetVal_d1,
        q1 => data_out_1_q1);

    tempBst_U : component cabac_top_tempBst_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 7,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tempBst_address0,
        ce0 => tempBst_ce0,
        we0 => tempBst_we0,
        d0 => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_d0,
        q0 => tempBst_q0,
        address1 => tempBst_address1,
        ce1 => tempBst_ce1,
        q1 => tempBst_q1);

    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_40_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_ready,
        streamCtxRAM_din => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_din,
        streamCtxRAM_full_n => streamCtxRAM_full_n,
        streamCtxRAM_write => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_write,
        icmp_ln79 => icmp_ln79_reg_1784,
        icmp_ln79_1 => icmp_ln79_1_reg_1789,
        zext_ln40 => qp_assign_reg_1794);

    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_29_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_ready,
        m_axi_ctx_AWVALID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWVALID,
        m_axi_ctx_AWREADY => ap_const_logic_0,
        m_axi_ctx_AWADDR => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWADDR,
        m_axi_ctx_AWID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWID,
        m_axi_ctx_AWLEN => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWLEN,
        m_axi_ctx_AWSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWSIZE,
        m_axi_ctx_AWBURST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWBURST,
        m_axi_ctx_AWLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWLOCK,
        m_axi_ctx_AWCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWCACHE,
        m_axi_ctx_AWPROT => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWPROT,
        m_axi_ctx_AWQOS => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWQOS,
        m_axi_ctx_AWREGION => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWREGION,
        m_axi_ctx_AWUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_AWUSER,
        m_axi_ctx_WVALID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WVALID,
        m_axi_ctx_WREADY => ap_const_logic_0,
        m_axi_ctx_WDATA => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WDATA,
        m_axi_ctx_WSTRB => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WSTRB,
        m_axi_ctx_WLAST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WLAST,
        m_axi_ctx_WID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WID,
        m_axi_ctx_WUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_WUSER,
        m_axi_ctx_ARVALID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARVALID,
        m_axi_ctx_ARREADY => ctx_ARREADY,
        m_axi_ctx_ARADDR => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARADDR,
        m_axi_ctx_ARID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARID,
        m_axi_ctx_ARLEN => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARLEN,
        m_axi_ctx_ARSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARSIZE,
        m_axi_ctx_ARBURST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARBURST,
        m_axi_ctx_ARLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARLOCK,
        m_axi_ctx_ARCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARCACHE,
        m_axi_ctx_ARPROT => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARPROT,
        m_axi_ctx_ARQOS => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARQOS,
        m_axi_ctx_ARREGION => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARREGION,
        m_axi_ctx_ARUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARUSER,
        m_axi_ctx_RVALID => ctx_RVALID,
        m_axi_ctx_RREADY => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_RREADY,
        m_axi_ctx_RDATA => ctx_RDATA,
        m_axi_ctx_RLAST => ctx_RLAST,
        m_axi_ctx_RID => ctx_RID,
        m_axi_ctx_RFIFONUM => ctx_RFIFONUM,
        m_axi_ctx_RUSER => ctx_RUSER,
        m_axi_ctx_RRESP => ctx_RRESP,
        m_axi_ctx_BVALID => ap_const_logic_0,
        m_axi_ctx_BREADY => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_BREADY,
        m_axi_ctx_BRESP => ap_const_lv2_0,
        m_axi_ctx_BID => ap_const_lv1_0,
        m_axi_ctx_BUSER => ap_const_lv1_0,
        globalCtx => globalCtx_read_reg_1432,
        streamCtxRAM_din => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_din,
        streamCtxRAM_full_n => streamCtxRAM_full_n,
        streamCtxRAM_write => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_write);

    grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_8_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_ready,
        streamCtxRAM_dout => streamCtxRAM_dout,
        streamCtxRAM_empty_n => streamCtxRAM_empty_n,
        streamCtxRAM_read => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_streamCtxRAM_read,
        ctxWritten => ctxWritten_reg_567,
        ctxTables_address0 => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_address0,
        ctxTables_ce0 => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_ce0,
        ctxTables_we0 => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_we0,
        ctxTables_d0 => grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_d0);

    grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_45_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_ready,
        bitStream_TVALID => bitStream_TVALID_int_regslice,
        bitStream_TDATA => bitStream_TDATA_int_regslice,
        bitStream_TREADY => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_bitStream_TREADY,
        tempBst_address0 => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_address0,
        tempBst_ce0 => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_ce0,
        tempBst_we0 => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_we0,
        tempBst_d0 => grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_d0);

    grp_sao_top_fu_618 : component cabac_top_sao_top
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sao_top_fu_618_ap_start,
        ap_done => grp_sao_top_fu_618_ap_done,
        ap_idle => grp_sao_top_fu_618_ap_idle,
        ap_ready => grp_sao_top_fu_618_ap_ready,
        p_read => data_in_s_header_slice_sao_luma_flag_reg_1520,
        p_read1 => data_in_s_header_slice_sao_chroma_flag_reg_1525,
        p_read2 => data_in_left_ctu_SaoTypeIdx_0_reg_1530,
        p_read3 => data_in_left_ctu_SaoTypeIdx_1_reg_1535,
        p_read4 => data_in_left_ctu_SaoTypeIdx_2_reg_1540,
        p_read5 => data_in_left_ctu_SaoOffsetVal_0_0_reg_1545,
        p_read6 => data_in_left_ctu_SaoOffsetVal_0_1_reg_1570,
        p_read7 => data_in_left_ctu_SaoOffsetVal_0_2_reg_1595,
        p_read8 => data_in_left_ctu_SaoOffsetVal_1_0_reg_1550,
        p_read9 => data_in_left_ctu_SaoOffsetVal_1_1_reg_1575,
        p_read10 => data_in_left_ctu_SaoOffsetVal_1_2_reg_1600,
        p_read11 => data_in_left_ctu_SaoOffsetVal_2_0_reg_1555,
        p_read12 => data_in_left_ctu_SaoOffsetVal_2_1_reg_1580,
        p_read13 => data_in_left_ctu_SaoOffsetVal_2_2_reg_1605,
        p_read14 => data_in_left_ctu_SaoOffsetVal_3_0_reg_1560,
        p_read15 => data_in_left_ctu_SaoOffsetVal_3_1_reg_1585,
        p_read16 => data_in_left_ctu_SaoOffsetVal_3_2_reg_1610,
        p_read17 => data_in_left_ctu_SaoOffsetVal_4_0_reg_1565,
        p_read18 => data_in_left_ctu_SaoOffsetVal_4_1_reg_1590,
        p_read19 => data_in_left_ctu_SaoOffsetVal_4_2_reg_1615,
        p_read20 => data_in_left_ctu_SaoEOClass_0_reg_1620,
        p_read21 => data_in_left_ctu_SaoEOClass_1_reg_1625,
        p_read22 => data_in_left_ctu_SaoEOClass_2_reg_1630,
        p_read23 => data_in_left_ctu_sao_band_position_0_reg_1635,
        p_read24 => data_in_left_ctu_sao_band_position_1_reg_1640,
        p_read25 => data_in_left_ctu_sao_band_position_2_reg_1645,
        p_read226 => data_in_left_ctu_is_available_reg_1650,
        p_read27 => data_in_up_ctu_SaoTypeIdx_0_reg_1655,
        p_read28 => data_in_up_ctu_SaoTypeIdx_1_reg_1660,
        p_read29 => data_in_up_ctu_SaoTypeIdx_2_reg_1665,
        p_read30 => data_in_up_ctu_SaoOffsetVal_0_0_reg_1670,
        p_read31 => data_in_up_ctu_SaoOffsetVal_0_1_reg_1695,
        p_read32 => data_in_up_ctu_SaoOffsetVal_0_2_reg_1720,
        p_read33 => data_in_up_ctu_SaoOffsetVal_1_0_reg_1675,
        p_read34 => data_in_up_ctu_SaoOffsetVal_1_1_reg_1700,
        p_read35 => data_in_up_ctu_SaoOffsetVal_1_2_reg_1725,
        p_read36 => data_in_up_ctu_SaoOffsetVal_2_0_reg_1680,
        p_read37 => data_in_up_ctu_SaoOffsetVal_2_1_reg_1705,
        p_read38 => data_in_up_ctu_SaoOffsetVal_2_2_reg_1730,
        p_read39 => data_in_up_ctu_SaoOffsetVal_3_0_reg_1685,
        p_read40 => data_in_up_ctu_SaoOffsetVal_3_1_reg_1710,
        p_read41 => data_in_up_ctu_SaoOffsetVal_3_2_reg_1735,
        p_read42 => data_in_up_ctu_SaoOffsetVal_4_0_reg_1690,
        p_read43 => data_in_up_ctu_SaoOffsetVal_4_1_reg_1715,
        p_read44 => data_in_up_ctu_SaoOffsetVal_4_2_reg_1740,
        p_read45 => data_in_up_ctu_SaoEOClass_0_reg_1745,
        p_read46 => data_in_up_ctu_SaoEOClass_1_reg_1750,
        p_read47 => data_in_up_ctu_SaoEOClass_2_reg_1755,
        p_read48 => data_in_up_ctu_sao_band_position_0_reg_1760,
        p_read49 => data_in_up_ctu_sao_band_position_1_reg_1765,
        p_read50 => data_in_up_ctu_sao_band_position_2_reg_1770,
        p_read351 => data_in_up_ctu_is_available_reg_1775,
        out_SaoOffsetVal_address0 => grp_sao_top_fu_618_out_SaoOffsetVal_address0,
        out_SaoOffsetVal_ce0 => grp_sao_top_fu_618_out_SaoOffsetVal_ce0,
        out_SaoOffsetVal_we0 => grp_sao_top_fu_618_out_SaoOffsetVal_we0,
        out_SaoOffsetVal_d0 => grp_sao_top_fu_618_out_SaoOffsetVal_d0,
        out_SaoOffsetVal_address1 => grp_sao_top_fu_618_out_SaoOffsetVal_address1,
        out_SaoOffsetVal_ce1 => grp_sao_top_fu_618_out_SaoOffsetVal_ce1,
        out_SaoOffsetVal_we1 => grp_sao_top_fu_618_out_SaoOffsetVal_we1,
        out_SaoOffsetVal_d1 => grp_sao_top_fu_618_out_SaoOffsetVal_d1,
        p_read410 => trunc_ln11_2_reg_1824,
        p_read612 => retVal_27_reg_1814,
        bStream_address0 => grp_sao_top_fu_618_bStream_address0,
        bStream_ce0 => grp_sao_top_fu_618_bStream_ce0,
        bStream_q0 => tempBst_q0,
        ctxTables_address0 => grp_sao_top_fu_618_ctxTables_address0,
        ctxTables_ce0 => grp_sao_top_fu_618_ctxTables_ce0,
        ctxTables_we0 => grp_sao_top_fu_618_ctxTables_we0,
        ctxTables_d0 => grp_sao_top_fu_618_ctxTables_d0,
        ctxTables_q0 => ctxTables_q0,
        baeState_0_constprop_i => baeState_0_constprop,
        baeState_0_constprop_o => grp_sao_top_fu_618_baeState_0_constprop_o,
        baeState_0_constprop_o_ap_vld => grp_sao_top_fu_618_baeState_0_constprop_o_ap_vld,
        ap_return_0 => grp_sao_top_fu_618_ap_return_0,
        ap_return_1 => grp_sao_top_fu_618_ap_return_1,
        ap_return_2 => grp_sao_top_fu_618_ap_return_2,
        ap_return_3 => grp_sao_top_fu_618_ap_return_3,
        ap_return_4 => grp_sao_top_fu_618_ap_return_4,
        ap_return_5 => grp_sao_top_fu_618_ap_return_5,
        ap_return_6 => grp_sao_top_fu_618_ap_return_6,
        ap_return_7 => grp_sao_top_fu_618_ap_return_7,
        ap_return_8 => grp_sao_top_fu_618_ap_return_8);

    grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_14_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_ready,
        m_axi_ctx_AWVALID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWVALID,
        m_axi_ctx_AWREADY => ctx_AWREADY,
        m_axi_ctx_AWADDR => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWADDR,
        m_axi_ctx_AWID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWID,
        m_axi_ctx_AWLEN => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWLEN,
        m_axi_ctx_AWSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWSIZE,
        m_axi_ctx_AWBURST => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWBURST,
        m_axi_ctx_AWLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWLOCK,
        m_axi_ctx_AWCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWCACHE,
        m_axi_ctx_AWPROT => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWPROT,
        m_axi_ctx_AWQOS => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWQOS,
        m_axi_ctx_AWREGION => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWREGION,
        m_axi_ctx_AWUSER => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWUSER,
        m_axi_ctx_WVALID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WVALID,
        m_axi_ctx_WREADY => ctx_WREADY,
        m_axi_ctx_WDATA => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WDATA,
        m_axi_ctx_WSTRB => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WSTRB,
        m_axi_ctx_WLAST => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WLAST,
        m_axi_ctx_WID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WID,
        m_axi_ctx_WUSER => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WUSER,
        m_axi_ctx_ARVALID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARVALID,
        m_axi_ctx_ARREADY => ap_const_logic_0,
        m_axi_ctx_ARADDR => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARADDR,
        m_axi_ctx_ARID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARID,
        m_axi_ctx_ARLEN => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARLEN,
        m_axi_ctx_ARSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARSIZE,
        m_axi_ctx_ARBURST => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARBURST,
        m_axi_ctx_ARLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARLOCK,
        m_axi_ctx_ARCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARCACHE,
        m_axi_ctx_ARPROT => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARPROT,
        m_axi_ctx_ARQOS => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARQOS,
        m_axi_ctx_ARREGION => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARREGION,
        m_axi_ctx_ARUSER => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_ARUSER,
        m_axi_ctx_RVALID => ap_const_logic_0,
        m_axi_ctx_RREADY => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_RREADY,
        m_axi_ctx_RDATA => ap_const_lv8_0,
        m_axi_ctx_RLAST => ap_const_logic_0,
        m_axi_ctx_RID => ap_const_lv1_0,
        m_axi_ctx_RFIFONUM => ap_const_lv11_0,
        m_axi_ctx_RUSER => ap_const_lv1_0,
        m_axi_ctx_RRESP => ap_const_lv2_0,
        m_axi_ctx_BVALID => ctx_BVALID,
        m_axi_ctx_BREADY => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_BREADY,
        m_axi_ctx_BRESP => ctx_BRESP,
        m_axi_ctx_BID => ctx_BID,
        m_axi_ctx_BUSER => ctx_BUSER,
        globalCtx => globalCtx_read_reg_1432,
        ctxWritten => ctxWritten_reg_567,
        ctxTables_address0 => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_address0,
        ctxTables_ce0 => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_ce0,
        ctxTables_q0 => ctxTables_q0,
        empty => ctxWritten_reg_567);

    control_s_axi_U : component cabac_top_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        globalCtx => globalCtx,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    ctx_m_axi_U : component cabac_top_ctx_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 11,
        C_M_AXI_ID_WIDTH => C_M_AXI_CTX_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_CTX_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_CTX_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_CTX_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_CTX_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_CTX_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_CTX_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_CTX_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_CTX_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_CTX_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_CTX_CACHE_VALUE)
    port map (
        AWVALID => m_axi_ctx_AWVALID,
        AWREADY => m_axi_ctx_AWREADY,
        AWADDR => m_axi_ctx_AWADDR,
        AWID => m_axi_ctx_AWID,
        AWLEN => m_axi_ctx_AWLEN,
        AWSIZE => m_axi_ctx_AWSIZE,
        AWBURST => m_axi_ctx_AWBURST,
        AWLOCK => m_axi_ctx_AWLOCK,
        AWCACHE => m_axi_ctx_AWCACHE,
        AWPROT => m_axi_ctx_AWPROT,
        AWQOS => m_axi_ctx_AWQOS,
        AWREGION => m_axi_ctx_AWREGION,
        AWUSER => m_axi_ctx_AWUSER,
        WVALID => m_axi_ctx_WVALID,
        WREADY => m_axi_ctx_WREADY,
        WDATA => m_axi_ctx_WDATA,
        WSTRB => m_axi_ctx_WSTRB,
        WLAST => m_axi_ctx_WLAST,
        WID => m_axi_ctx_WID,
        WUSER => m_axi_ctx_WUSER,
        ARVALID => m_axi_ctx_ARVALID,
        ARREADY => m_axi_ctx_ARREADY,
        ARADDR => m_axi_ctx_ARADDR,
        ARID => m_axi_ctx_ARID,
        ARLEN => m_axi_ctx_ARLEN,
        ARSIZE => m_axi_ctx_ARSIZE,
        ARBURST => m_axi_ctx_ARBURST,
        ARLOCK => m_axi_ctx_ARLOCK,
        ARCACHE => m_axi_ctx_ARCACHE,
        ARPROT => m_axi_ctx_ARPROT,
        ARQOS => m_axi_ctx_ARQOS,
        ARREGION => m_axi_ctx_ARREGION,
        ARUSER => m_axi_ctx_ARUSER,
        RVALID => m_axi_ctx_RVALID,
        RREADY => m_axi_ctx_RREADY,
        RDATA => m_axi_ctx_RDATA,
        RLAST => m_axi_ctx_RLAST,
        RID => m_axi_ctx_RID,
        RUSER => m_axi_ctx_RUSER,
        RRESP => m_axi_ctx_RRESP,
        BVALID => m_axi_ctx_BVALID,
        BREADY => m_axi_ctx_BREADY,
        BRESP => m_axi_ctx_BRESP,
        BID => m_axi_ctx_BID,
        BUSER => m_axi_ctx_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ctx_ARVALID,
        I_ARREADY => ctx_ARREADY,
        I_ARADDR => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARADDR,
        I_ARID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARID,
        I_ARLEN => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARLEN,
        I_ARSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARSIZE,
        I_ARLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARLOCK,
        I_ARCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARCACHE,
        I_ARQOS => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARQOS,
        I_ARPROT => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARPROT,
        I_ARUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARUSER,
        I_ARBURST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARBURST,
        I_ARREGION => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARREGION,
        I_RVALID => ctx_RVALID,
        I_RREADY => ctx_RREADY,
        I_RDATA => ctx_RDATA,
        I_RFIFONUM => ctx_RFIFONUM,
        I_RID => ctx_RID,
        I_RUSER => ctx_RUSER,
        I_RRESP => ctx_RRESP,
        I_RLAST => ctx_RLAST,
        I_AWVALID => ctx_AWVALID,
        I_AWREADY => ctx_AWREADY,
        I_AWADDR => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWADDR,
        I_AWID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWID,
        I_AWLEN => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWLEN,
        I_AWSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWSIZE,
        I_AWLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWLOCK,
        I_AWCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWCACHE,
        I_AWQOS => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWQOS,
        I_AWPROT => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWPROT,
        I_AWUSER => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWUSER,
        I_AWBURST => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWBURST,
        I_AWREGION => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWREGION,
        I_WVALID => ctx_WVALID,
        I_WREADY => ctx_WREADY,
        I_WDATA => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WDATA,
        I_WID => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WID,
        I_WUSER => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WUSER,
        I_WLAST => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WLAST,
        I_WSTRB => grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WSTRB,
        I_BVALID => ctx_BVALID,
        I_BREADY => ctx_BREADY,
        I_BRESP => ctx_BRESP,
        I_BID => ctx_BID,
        I_BUSER => ctx_BUSER);

    streamCtxRAM_fifo_U : component cabac_top_fifo_w8_d512_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamCtxRAM_din,
        if_full_n => streamCtxRAM_full_n,
        if_write => streamCtxRAM_write,
        if_dout => streamCtxRAM_dout,
        if_empty_n => streamCtxRAM_empty_n,
        if_read => streamCtxRAM_read);

    regslice_both_bitStream_U : component cabac_top_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => bitStream_TDATA,
        vld_in => bitStream_TVALID,
        ack_in => regslice_both_bitStream_U_ack_in,
        data_out => bitStream_TDATA_int_regslice,
        vld_out => bitStream_TVALID_int_regslice,
        ack_out => bitStream_TREADY_int_regslice,
        apdone_blk => regslice_both_bitStream_U_apdone_blk);

    regslice_both_bitOut_U : component cabac_top_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => bitOut_TDATA,
        vld_in => bitOut_TVALID,
        ack_in => regslice_both_bitOut_U_ack_in,
        data_out => bitOut_TDATA_int_regslice,
        vld_out => bitOut_TVALID_int_regslice,
        ack_out => ap_const_logic_0,
        apdone_blk => regslice_both_bitOut_U_apdone_blk);

    regslice_both_data_in_s_U : component cabac_top_regslice_both
    generic map (
        DataWidth => 4096)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => data_in_s_TDATA,
        vld_in => data_in_s_TVALID,
        ack_in => regslice_both_data_in_s_U_ack_in,
        data_out => data_in_s_TDATA_int_regslice,
        vld_out => data_in_s_TVALID_int_regslice,
        ack_out => data_in_s_TREADY_int_regslice,
        apdone_blk => regslice_both_data_in_s_U_apdone_blk);

    regslice_both_data_out_s_U : component cabac_top_regslice_both
    generic map (
        DataWidth => 336)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => data_out_s_TDATA_int_regslice,
        vld_in => data_out_s_TVALID_int_regslice,
        ack_in => data_out_s_TREADY_int_regslice,
        data_out => data_out_s_TDATA,
        vld_out => regslice_both_data_out_s_U_vld_out,
        ack_out => data_out_s_TREADY,
        apdone_blk => regslice_both_data_out_s_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((data_out_s_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_data_out_s_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (data_in_s_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (data_in_firstCTU_fu_1239_p3 = ap_const_lv1_1))) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sao_top_fu_618_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sao_top_fu_618_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_sao_top_fu_618_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sao_top_fu_618_ap_ready = ap_const_logic_1)) then 
                    grp_sao_top_fu_618_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    baeState_0_constprop_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                baeState_0_constprop <= ap_const_lv32_1FE;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_sao_top_fu_618_baeState_0_constprop_o_ap_vld = ap_const_logic_1))) then 
                baeState_0_constprop <= grp_sao_top_fu_618_baeState_0_constprop_o;
            end if; 
        end if;
    end process;

    ctxWritten_reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                ctxWritten_reg_567(0) <= '1';
                ctxWritten_reg_567(2) <= '1';
                ctxWritten_reg_567(9) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (data_in_firstCTU_reg_1780 = ap_const_lv1_0))) then 
                ctxWritten_reg_567(0) <= '0';
                ctxWritten_reg_567(2) <= '0';
                ctxWritten_reg_567(9) <= '1';
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_in_firstCTU_reg_1780 <= data_in_s_TDATA_int_regslice(4064 downto 4064);
                data_in_left_ctu_SaoEOClass_0_reg_1620 <= data_in_s_TDATA_int_regslice(567 downto 560);
                data_in_left_ctu_SaoEOClass_1_reg_1625 <= data_in_s_TDATA_int_regslice(575 downto 568);
                data_in_left_ctu_SaoEOClass_2_reg_1630 <= data_in_s_TDATA_int_regslice(583 downto 576);
                data_in_left_ctu_SaoOffsetVal_0_0_reg_1545 <= data_in_s_TDATA_int_regslice(335 downto 320);
                data_in_left_ctu_SaoOffsetVal_0_1_reg_1570 <= data_in_s_TDATA_int_regslice(415 downto 400);
                data_in_left_ctu_SaoOffsetVal_0_2_reg_1595 <= data_in_s_TDATA_int_regslice(495 downto 480);
                data_in_left_ctu_SaoOffsetVal_1_0_reg_1550 <= data_in_s_TDATA_int_regslice(351 downto 336);
                data_in_left_ctu_SaoOffsetVal_1_1_reg_1575 <= data_in_s_TDATA_int_regslice(431 downto 416);
                data_in_left_ctu_SaoOffsetVal_1_2_reg_1600 <= data_in_s_TDATA_int_regslice(511 downto 496);
                data_in_left_ctu_SaoOffsetVal_2_0_reg_1555 <= data_in_s_TDATA_int_regslice(367 downto 352);
                data_in_left_ctu_SaoOffsetVal_2_1_reg_1580 <= data_in_s_TDATA_int_regslice(447 downto 432);
                data_in_left_ctu_SaoOffsetVal_2_2_reg_1605 <= data_in_s_TDATA_int_regslice(527 downto 512);
                data_in_left_ctu_SaoOffsetVal_3_0_reg_1560 <= data_in_s_TDATA_int_regslice(383 downto 368);
                data_in_left_ctu_SaoOffsetVal_3_1_reg_1585 <= data_in_s_TDATA_int_regslice(463 downto 448);
                data_in_left_ctu_SaoOffsetVal_3_2_reg_1610 <= data_in_s_TDATA_int_regslice(543 downto 528);
                data_in_left_ctu_SaoOffsetVal_4_0_reg_1565 <= data_in_s_TDATA_int_regslice(399 downto 384);
                data_in_left_ctu_SaoOffsetVal_4_1_reg_1590 <= data_in_s_TDATA_int_regslice(479 downto 464);
                data_in_left_ctu_SaoOffsetVal_4_2_reg_1615 <= data_in_s_TDATA_int_regslice(559 downto 544);
                data_in_left_ctu_SaoTypeIdx_0_reg_1530 <= data_in_s_TDATA_int_regslice(295 downto 288);
                data_in_left_ctu_SaoTypeIdx_1_reg_1535 <= data_in_s_TDATA_int_regslice(303 downto 296);
                data_in_left_ctu_SaoTypeIdx_2_reg_1540 <= data_in_s_TDATA_int_regslice(311 downto 304);
                data_in_left_ctu_is_available_reg_1650 <= data_in_s_TDATA_int_regslice(608 downto 608);
                data_in_left_ctu_sao_band_position_0_reg_1635 <= data_in_s_TDATA_int_regslice(591 downto 584);
                data_in_left_ctu_sao_band_position_1_reg_1640 <= data_in_s_TDATA_int_regslice(599 downto 592);
                data_in_left_ctu_sao_band_position_2_reg_1645 <= data_in_s_TDATA_int_regslice(607 downto 600);
                data_in_s_header_slice_sao_chroma_flag_reg_1525 <= data_in_s_TDATA_int_regslice(168 downto 168);
                data_in_s_header_slice_sao_luma_flag_reg_1520 <= data_in_s_TDATA_int_regslice(160 downto 160);
                data_in_up_ctu_SaoEOClass_0_reg_1745 <= data_in_s_TDATA_int_regslice(2439 downto 2432);
                data_in_up_ctu_SaoEOClass_1_reg_1750 <= data_in_s_TDATA_int_regslice(2447 downto 2440);
                data_in_up_ctu_SaoEOClass_2_reg_1755 <= data_in_s_TDATA_int_regslice(2455 downto 2448);
                data_in_up_ctu_SaoOffsetVal_0_0_reg_1670 <= data_in_s_TDATA_int_regslice(2207 downto 2192);
                data_in_up_ctu_SaoOffsetVal_0_1_reg_1695 <= data_in_s_TDATA_int_regslice(2287 downto 2272);
                data_in_up_ctu_SaoOffsetVal_0_2_reg_1720 <= data_in_s_TDATA_int_regslice(2367 downto 2352);
                data_in_up_ctu_SaoOffsetVal_1_0_reg_1675 <= data_in_s_TDATA_int_regslice(2223 downto 2208);
                data_in_up_ctu_SaoOffsetVal_1_1_reg_1700 <= data_in_s_TDATA_int_regslice(2303 downto 2288);
                data_in_up_ctu_SaoOffsetVal_1_2_reg_1725 <= data_in_s_TDATA_int_regslice(2383 downto 2368);
                data_in_up_ctu_SaoOffsetVal_2_0_reg_1680 <= data_in_s_TDATA_int_regslice(2239 downto 2224);
                data_in_up_ctu_SaoOffsetVal_2_1_reg_1705 <= data_in_s_TDATA_int_regslice(2319 downto 2304);
                data_in_up_ctu_SaoOffsetVal_2_2_reg_1730 <= data_in_s_TDATA_int_regslice(2399 downto 2384);
                data_in_up_ctu_SaoOffsetVal_3_0_reg_1685 <= data_in_s_TDATA_int_regslice(2255 downto 2240);
                data_in_up_ctu_SaoOffsetVal_3_1_reg_1710 <= data_in_s_TDATA_int_regslice(2335 downto 2320);
                data_in_up_ctu_SaoOffsetVal_3_2_reg_1735 <= data_in_s_TDATA_int_regslice(2415 downto 2400);
                data_in_up_ctu_SaoOffsetVal_4_0_reg_1690 <= data_in_s_TDATA_int_regslice(2271 downto 2256);
                data_in_up_ctu_SaoOffsetVal_4_1_reg_1715 <= data_in_s_TDATA_int_regslice(2351 downto 2336);
                data_in_up_ctu_SaoOffsetVal_4_2_reg_1740 <= data_in_s_TDATA_int_regslice(2431 downto 2416);
                data_in_up_ctu_SaoTypeIdx_0_reg_1655 <= data_in_s_TDATA_int_regslice(2167 downto 2160);
                data_in_up_ctu_SaoTypeIdx_1_reg_1660 <= data_in_s_TDATA_int_regslice(2175 downto 2168);
                data_in_up_ctu_SaoTypeIdx_2_reg_1665 <= data_in_s_TDATA_int_regslice(2183 downto 2176);
                data_in_up_ctu_is_available_reg_1775 <= data_in_s_TDATA_int_regslice(2480 downto 2480);
                data_in_up_ctu_sao_band_position_0_reg_1760 <= data_in_s_TDATA_int_regslice(2463 downto 2456);
                data_in_up_ctu_sao_band_position_1_reg_1765 <= data_in_s_TDATA_int_regslice(2471 downto 2464);
                data_in_up_ctu_sao_band_position_2_reg_1770 <= data_in_s_TDATA_int_regslice(2479 downto 2472);
                globalCtx_read_reg_1432 <= globalCtx;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                data_out_1_load_10_reg_1924 <= data_out_1_q1;
                data_out_1_load_9_reg_1919 <= data_out_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                data_out_1_load_11_reg_1929 <= data_out_1_q0;
                data_out_1_load_12_reg_1934 <= data_out_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                data_out_1_load_1_reg_1879 <= data_out_1_q1;
                data_out_1_load_2_reg_1884 <= data_out_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                data_out_1_load_3_reg_1889 <= data_out_1_q0;
                data_out_1_load_4_reg_1894 <= data_out_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                data_out_1_load_5_reg_1899 <= data_out_1_q0;
                data_out_1_load_6_reg_1904 <= data_out_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                data_out_1_load_7_reg_1909 <= data_out_1_q0;
                data_out_1_load_8_reg_1914 <= data_out_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                data_out_1_load_reg_1874 <= data_out_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                data_out_SaoEOClass_0_reg_1854 <= grp_sao_top_fu_618_ap_return_0;
                data_out_SaoEOClass_1_reg_1849 <= grp_sao_top_fu_618_ap_return_1;
                data_out_SaoEOClass_2_reg_1844 <= grp_sao_top_fu_618_ap_return_2;
                data_out_SaoTypeIdx_0_reg_1859 <= grp_sao_top_fu_618_ap_return_6;
                data_out_SaoTypeIdx_1_reg_1864 <= grp_sao_top_fu_618_ap_return_7;
                data_out_SaoTypeIdx_2_reg_1869 <= grp_sao_top_fu_618_ap_return_8;
                data_out_sao_band_position_0_reg_1839 <= grp_sao_top_fu_618_ap_return_3;
                data_out_sao_band_position_1_reg_1834 <= grp_sao_top_fu_618_ap_return_4;
                data_out_sao_band_position_2_reg_1829 <= grp_sao_top_fu_618_ap_return_5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (data_in_firstCTU_fu_1239_p3 = ap_const_lv1_1))) then
                icmp_ln79_1_reg_1789 <= icmp_ln79_1_fu_1296_p2;
                icmp_ln79_reg_1784 <= icmp_ln79_fu_1289_p2;
                qp_assign_reg_1794 <= qp_assign_fu_1329_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                retVal_27_reg_1814 <= tempBst_q0;
                retVal_reg_1809 <= tempBst_q1;
                tmp_11_reg_1819 <= tempBst_q0(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                trunc_ln11_2_reg_1824 <= trunc_ln11_2_fu_1352_p3;
            end if;
        end if;
    end process;
    ctxWritten_reg_567(1) <= '0';
    ctxWritten_reg_567(8 downto 3) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state24, ap_CS_fsm_state25, data_in_firstCTU_fu_1239_p3, ap_CS_fsm_state15, ap_CS_fsm_state17, grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_done, grp_sao_top_fu_618_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state11, regslice_both_data_out_s_U_apdone_blk, data_in_s_TVALID_int_regslice, data_out_s_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (data_in_s_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (data_in_firstCTU_fu_1239_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (data_in_s_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (data_in_firstCTU_fu_1239_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_sao_top_fu_618_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (data_out_s_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if ((not(((data_out_s_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_data_out_s_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_assign_fu_1311_p3 <= 
        ap_const_lv31_0 when (tmp_10_fu_1303_p3(0) = '1') else 
        trunc_ln_fu_733_p4;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_sao_top_fu_618_ap_done)
    begin
        if ((grp_sao_top_fu_618_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, data_in_s_TVALID_int_regslice)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (data_in_s_TVALID_int_regslice = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(data_out_s_TREADY_int_regslice)
    begin
        if ((data_out_s_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state25_blk_assign_proc : process(regslice_both_data_out_s_U_apdone_blk, data_out_s_TREADY_int_regslice)
    begin
        if (((data_out_s_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_data_out_s_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, data_in_s_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (data_in_s_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call15_assign_proc : process(ap_start, ap_done_reg, data_in_s_TVALID_int_regslice)
    begin
                ap_block_state1_ignore_call15 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (data_in_s_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state25_assign_proc : process(regslice_both_data_out_s_U_apdone_blk, data_out_s_TREADY_int_regslice)
    begin
                ap_block_state25 <= ((data_out_s_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_data_out_s_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state25, regslice_both_data_out_s_U_apdone_blk, data_out_s_TREADY_int_regslice)
    begin
        if ((not(((data_out_s_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_data_out_s_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state25, regslice_both_data_out_s_U_apdone_blk, data_out_s_TREADY_int_regslice)
    begin
        if ((not(((data_out_s_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_data_out_s_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitOut_TREADY <= regslice_both_bitOut_U_ack_in;
    bitStream_TREADY <= regslice_both_bitStream_U_ack_in;

    bitStream_TREADY_int_regslice_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_bitStream_TREADY, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            bitStream_TREADY_int_regslice <= grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_bitStream_TREADY;
        else 
            bitStream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i1_i_i_i_i_i_fu_1323_p2 <= "1" when (unsigned(a_assign_fu_1311_p3) < unsigned(ap_const_lv31_33)) else "0";

    ctxTables_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_address0, grp_sao_top_fu_618_ctxTables_address0, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_address0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ctxTables_address0 <= grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctxTables_address0 <= grp_sao_top_fu_618_ctxTables_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_address0 <= grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_address0;
        else 
            ctxTables_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ctxTables_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_ce0, grp_sao_top_fu_618_ctxTables_ce0, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ctxTables_ce0 <= grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ctxTables_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctxTables_ce0 <= grp_sao_top_fu_618_ctxTables_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_ce0 <= grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_ce0;
        else 
            ctxTables_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctxTables_d0_assign_proc : process(ap_CS_fsm_state15, grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_d0, grp_sao_top_fu_618_ctxTables_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctxTables_d0 <= grp_sao_top_fu_618_ctxTables_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_d0 <= grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_d0;
        else 
            ctxTables_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctxTables_we0_assign_proc : process(ap_CS_fsm_state15, grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_we0, grp_sao_top_fu_618_ctxTables_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctxTables_we0 <= grp_sao_top_fu_618_ctxTables_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_we0 <= grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ctxTables_we0;
        else 
            ctxTables_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_ARVALID_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_ARVALID <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_ARVALID;
        else 
            ctx_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    ctx_AWVALID_assign_proc : process(ap_CS_fsm_state17, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWVALID, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ctx_AWVALID <= grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_AWVALID;
        else 
            ctx_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    ctx_BREADY_assign_proc : process(ap_CS_fsm_state17, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_BREADY, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ctx_BREADY <= grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_BREADY;
        else 
            ctx_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    ctx_RREADY_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_RREADY <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_m_axi_ctx_RREADY;
        else 
            ctx_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    ctx_WVALID_assign_proc : process(ap_CS_fsm_state17, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WVALID, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ctx_WVALID <= grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_m_axi_ctx_WVALID;
        else 
            ctx_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    data_in_firstCTU_fu_1239_p3 <= data_in_s_TDATA_int_regslice(4064 downto 4064);

    data_in_s_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, data_in_s_TVALID_int_regslice)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_in_s_TDATA_blk_n <= data_in_s_TVALID_int_regslice;
        else 
            data_in_s_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_in_s_TREADY <= regslice_both_data_in_s_U_ack_in;

    data_in_s_TREADY_int_regslice_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, data_in_s_TVALID_int_regslice)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (data_in_s_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_in_s_TREADY_int_regslice <= ap_const_logic_1;
        else 
            data_in_s_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    data_in_s_header_cabac_init_flag_fu_725_p3 <= data_in_s_TDATA_int_regslice(224 downto 224);
    data_in_s_header_slice_type_fu_715_p4 <= data_in_s_TDATA_int_regslice(223 downto 192);

    data_out_1_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, grp_sao_top_fu_618_out_SaoOffsetVal_address0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            data_out_1_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            data_out_1_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            data_out_1_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_out_1_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            data_out_1_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            data_out_1_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            data_out_1_address0 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            data_out_1_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_out_1_address0 <= grp_sao_top_fu_618_out_SaoOffsetVal_address0;
        else 
            data_out_1_address0 <= "XXXX";
        end if; 
    end process;


    data_out_1_address1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, grp_sao_top_fu_618_out_SaoOffsetVal_address1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            data_out_1_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            data_out_1_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            data_out_1_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            data_out_1_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            data_out_1_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            data_out_1_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            data_out_1_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_out_1_address1 <= grp_sao_top_fu_618_out_SaoOffsetVal_address1;
        else 
            data_out_1_address1 <= "XXXX";
        end if; 
    end process;


    data_out_1_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, grp_sao_top_fu_618_out_SaoOffsetVal_ce0, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or ((grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            data_out_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_out_1_ce0 <= grp_sao_top_fu_618_out_SaoOffsetVal_ce0;
        else 
            data_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_out_1_ce1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, grp_sao_top_fu_618_out_SaoOffsetVal_ce1, grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or ((grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            data_out_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_out_1_ce1 <= grp_sao_top_fu_618_out_SaoOffsetVal_ce1;
        else 
            data_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_out_1_we0_assign_proc : process(ap_CS_fsm_state15, grp_sao_top_fu_618_out_SaoOffsetVal_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_out_1_we0 <= grp_sao_top_fu_618_out_SaoOffsetVal_we0;
        else 
            data_out_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_out_1_we1_assign_proc : process(ap_CS_fsm_state15, grp_sao_top_fu_618_out_SaoOffsetVal_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_out_1_we1 <= grp_sao_top_fu_618_out_SaoOffsetVal_we1;
        else 
            data_out_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    data_out_s_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state25, data_out_s_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            data_out_s_TDATA_blk_n <= data_out_s_TREADY_int_regslice;
        else 
            data_out_s_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_out_s_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1395_p26),336));
    data_out_s_TVALID <= regslice_both_data_out_s_U_vld_out;

    data_out_s_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state24, data_out_s_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and (data_out_s_TREADY_int_regslice = ap_const_logic_1))) then 
            data_out_s_TVALID_int_regslice <= ap_const_logic_1;
        else 
            data_out_s_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    empty_58_fu_1319_p1 <= a_assign_fu_1311_p3(6 - 1 downto 0);
    grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_14_1_fu_687_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_ap_start_reg;
    grp_sao_top_fu_618_ap_start <= grp_sao_top_fu_618_ap_start_reg;
    icmp_ln69_1_fu_1275_p2 <= "1" when (data_in_s_header_slice_type_fu_715_p4 = ap_const_lv32_1) else "0";
    icmp_ln69_fu_1261_p2 <= "1" when (data_in_s_header_slice_type_fu_715_p4 = ap_const_lv32_0) else "0";
    icmp_ln79_1_fu_1296_p2 <= "1" when (initType_3_fu_1281_p3 = ap_const_lv2_0) else "0";
    icmp_ln79_fu_1289_p2 <= "1" when (initType_3_fu_1281_p3 = ap_const_lv2_1) else "0";
    initType_1_fu_1251_p2 <= (data_in_s_header_cabac_init_flag_fu_725_p3 xor ap_const_lv1_1);
    initType_2_fu_1267_p3 <= 
        zext_ln67_fu_1247_p1 when (icmp_ln69_fu_1261_p2(0) = '1') else 
        ap_const_lv2_2;
    initType_3_fu_1281_p3 <= 
        zext_ln67_1_fu_1257_p1 when (icmp_ln69_1_fu_1275_p2(0) = '1') else 
        initType_2_fu_1267_p3;
    qp_assign_fu_1329_p3 <= 
        empty_58_fu_1319_p1 when (cmp_i1_i_i_i_i_i_fu_1323_p2(0) = '1') else 
        ap_const_lv6_33;

    streamCtxRAM_din_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_din, grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_din, ap_CS_fsm_state5, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            streamCtxRAM_din <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            streamCtxRAM_din <= grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_din;
        else 
            streamCtxRAM_din <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_din;
        end if; 
    end process;


    streamCtxRAM_read_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_streamCtxRAM_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            streamCtxRAM_read <= grp_cabac_top_Pipeline_VITIS_LOOP_8_1_fu_603_streamCtxRAM_read;
        else 
            streamCtxRAM_read <= ap_const_logic_0;
        end if; 
    end process;


    streamCtxRAM_write_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_write, grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_write, ap_CS_fsm_state5, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            streamCtxRAM_write <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_595_streamCtxRAM_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            streamCtxRAM_write <= grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_581_streamCtxRAM_write;
        else 
            streamCtxRAM_write <= ap_const_logic_0;
        end if; 
    end process;


    tempBst_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state15, grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_address0, grp_sao_top_fu_618_bStream_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            tempBst_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            tempBst_address0 <= grp_sao_top_fu_618_bStream_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tempBst_address0 <= grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_address0;
        else 
            tempBst_address0 <= "XXX";
        end if; 
    end process;

    tempBst_address1 <= ap_const_lv64_0(3 - 1 downto 0);

    tempBst_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state15, grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_ce0, grp_sao_top_fu_618_bStream_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            tempBst_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            tempBst_ce0 <= grp_sao_top_fu_618_bStream_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tempBst_ce0 <= grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_ce0;
        else 
            tempBst_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempBst_ce1_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            tempBst_ce1 <= ap_const_logic_1;
        else 
            tempBst_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tempBst_we0_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tempBst_we0 <= grp_cabac_top_Pipeline_VITIS_LOOP_45_1_fu_611_tempBst_we0;
        else 
            tempBst_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_1303_p3 <= data_in_s_TDATA_int_regslice(287 downto 287);
    tmp_s_fu_1395_p26 <= ((((((((((((((((((((((((data_out_sao_band_position_2_reg_1829 & data_out_sao_band_position_1_reg_1834) & data_out_sao_band_position_0_reg_1839) & data_out_SaoEOClass_2_reg_1844) & data_out_SaoEOClass_1_reg_1849) & data_out_SaoEOClass_0_reg_1854) & data_out_1_q1) & data_out_1_q0) & data_out_1_load_12_reg_1934) & data_out_1_load_11_reg_1929) & data_out_1_load_10_reg_1924) & data_out_1_load_9_reg_1919) & data_out_1_load_8_reg_1914) & data_out_1_load_7_reg_1909) & data_out_1_load_6_reg_1904) & data_out_1_load_5_reg_1899) & data_out_1_load_4_reg_1894) & data_out_1_load_3_reg_1889) & data_out_1_load_2_reg_1884) & data_out_1_load_1_reg_1879) & data_out_1_load_reg_1874) & ap_const_lv8_0) & data_out_SaoTypeIdx_2_reg_1869) & data_out_SaoTypeIdx_1_reg_1864) & data_out_SaoTypeIdx_0_reg_1859);
    trunc_ln11_2_fu_1352_p3 <= (retVal_reg_1809 & tmp_11_reg_1819);
    trunc_ln_fu_733_p4 <= data_in_s_TDATA_int_regslice(286 downto 256);
    zext_ln67_1_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(initType_1_fu_1251_p2),2));
    zext_ln67_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_in_s_header_cabac_init_flag_fu_725_p3),2));
end behav;
