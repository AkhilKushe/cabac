// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cabac_top_sao_top_Pipeline_VITIS_LOOP_201_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read23,
        p_read24,
        p_read25,
        p_read20,
        p_read21,
        p_read22,
        out_SaoOffsetVal_address0,
        out_SaoOffsetVal_ce0,
        out_SaoOffsetVal_we0,
        out_SaoOffsetVal_d0,
        out_SaoOffsetVal_address1,
        out_SaoOffsetVal_ce1,
        out_SaoOffsetVal_we1,
        out_SaoOffsetVal_d1,
        p_read2,
        p_read3,
        p_read4,
        out_SaoTypeIdx_3_out,
        out_SaoTypeIdx_3_out_ap_vld,
        out_SaoTypeIdx33_3_out,
        out_SaoTypeIdx33_3_out_ap_vld,
        out_SaoTypeIdx34_3_out,
        out_SaoTypeIdx34_3_out_ap_vld,
        out_SaoEOClass35_3_out,
        out_SaoEOClass35_3_out_ap_vld,
        out_SaoEOClass36_3_out,
        out_SaoEOClass36_3_out_ap_vld,
        out_sao_band_position_3_out,
        out_sao_band_position_3_out_ap_vld,
        out_SaoEOClass_3_out,
        out_SaoEOClass_3_out_ap_vld,
        out_sao_band_position37_3_out,
        out_sao_band_position37_3_out_ap_vld,
        out_sao_band_position38_3_out,
        out_sao_band_position38_3_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
input  [15:0] p_read18;
input  [15:0] p_read19;
input  [7:0] p_read23;
input  [7:0] p_read24;
input  [7:0] p_read25;
input  [7:0] p_read20;
input  [7:0] p_read21;
input  [7:0] p_read22;
output  [3:0] out_SaoOffsetVal_address0;
output   out_SaoOffsetVal_ce0;
output   out_SaoOffsetVal_we0;
output  [15:0] out_SaoOffsetVal_d0;
output  [3:0] out_SaoOffsetVal_address1;
output   out_SaoOffsetVal_ce1;
output   out_SaoOffsetVal_we1;
output  [15:0] out_SaoOffsetVal_d1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
output  [7:0] out_SaoTypeIdx_3_out;
output   out_SaoTypeIdx_3_out_ap_vld;
output  [7:0] out_SaoTypeIdx33_3_out;
output   out_SaoTypeIdx33_3_out_ap_vld;
output  [7:0] out_SaoTypeIdx34_3_out;
output   out_SaoTypeIdx34_3_out_ap_vld;
output  [7:0] out_SaoEOClass35_3_out;
output   out_SaoEOClass35_3_out_ap_vld;
output  [7:0] out_SaoEOClass36_3_out;
output   out_SaoEOClass36_3_out_ap_vld;
output  [7:0] out_sao_band_position_3_out;
output   out_sao_band_position_3_out_ap_vld;
output  [7:0] out_SaoEOClass_3_out;
output   out_SaoEOClass_3_out_ap_vld;
output  [7:0] out_sao_band_position37_3_out;
output   out_sao_band_position37_3_out_ap_vld;
output  [7:0] out_sao_band_position38_3_out;
output   out_sao_band_position38_3_out_ap_vld;

reg ap_idle;
reg[3:0] out_SaoOffsetVal_address0;
reg out_SaoOffsetVal_ce0;
reg out_SaoOffsetVal_we0;
reg[15:0] out_SaoOffsetVal_d0;
reg[3:0] out_SaoOffsetVal_address1;
reg out_SaoOffsetVal_ce1;
reg out_SaoOffsetVal_we1;
reg[15:0] out_SaoOffsetVal_d1;
reg out_SaoTypeIdx_3_out_ap_vld;
reg out_SaoTypeIdx33_3_out_ap_vld;
reg out_SaoTypeIdx34_3_out_ap_vld;
reg out_SaoEOClass35_3_out_ap_vld;
reg out_SaoEOClass36_3_out_ap_vld;
reg out_sao_band_position_3_out_ap_vld;
reg out_SaoEOClass_3_out_ap_vld;
reg out_sao_band_position37_3_out_ap_vld;
reg out_sao_band_position38_3_out_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln201_fu_418_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [1:0] i_2_reg_729;
wire   [1:0] add_ln201_fu_424_p2;
reg   [1:0] add_ln201_reg_736;
wire   [3:0] add_ln204_fu_442_p2;
reg   [3:0] add_ln204_reg_741;
wire   [7:0] tmp_fu_464_p5;
reg   [7:0] tmp_reg_748;
wire   [7:0] tmp_1_fu_476_p5;
reg   [7:0] tmp_1_reg_755;
wire   [15:0] tmp_6_fu_514_p5;
reg   [15:0] tmp_6_reg_762;
wire   [15:0] tmp_7_fu_526_p5;
reg   [15:0] tmp_7_reg_767;
wire   [15:0] tmp_8_fu_538_p5;
reg   [15:0] tmp_8_reg_772;
wire   [7:0] tmp_9_fu_550_p5;
reg   [7:0] tmp_9_reg_777;
wire   [63:0] zext_ln204_1_fu_448_p1;
wire   [63:0] zext_ln205_fu_459_p1;
wire   [63:0] zext_ln206_fu_567_p1;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln207_fu_577_p1;
wire   [63:0] zext_ln208_fu_587_p1;
reg   [1:0] i_fu_114;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i_2;
reg   [7:0] out_sao_band_position38_3_fu_118;
reg   [7:0] out_sao_band_position37_3_fu_122;
reg   [7:0] out_SaoEOClass_3_fu_126;
reg   [7:0] out_sao_band_position_3_fu_130;
reg   [7:0] out_SaoEOClass36_3_fu_134;
reg   [7:0] out_SaoEOClass35_3_fu_138;
reg   [7:0] out_SaoTypeIdx34_3_fu_142;
reg   [7:0] out_SaoTypeIdx33_3_fu_146;
reg   [7:0] out_SaoTypeIdx_3_fu_150;
wire   [15:0] tmp_4_fu_488_p5;
wire   [15:0] tmp_5_fu_501_p5;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [3:0] tmp_s_fu_434_p3;
wire   [3:0] zext_ln204_fu_430_p1;
wire   [3:0] add_ln205_fu_453_p2;
wire   [3:0] add_ln206_fu_562_p2;
wire   [3:0] add_ln207_fu_572_p2;
wire   [3:0] add_ln208_fu_582_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_done_reg = 1'b0;
end

cabac_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U110(
    .din0(p_read2),
    .din1(p_read3),
    .din2(p_read4),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_fu_464_p5)
);

cabac_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U111(
    .din0(p_read20),
    .din1(p_read21),
    .din2(p_read22),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_1_fu_476_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U112(
    .din0(p_read5),
    .din1(p_read6),
    .din2(p_read7),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_4_fu_488_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U113(
    .din0(p_read8),
    .din1(p_read9),
    .din2(p_read10),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_5_fu_501_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U114(
    .din0(p_read11),
    .din1(p_read12),
    .din2(p_read13),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_6_fu_514_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U115(
    .din0(p_read14),
    .din1(p_read15),
    .din2(p_read16),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_7_fu_526_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U116(
    .din0(p_read17),
    .din1(p_read18),
    .din2(p_read19),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_8_fu_538_p5)
);

cabac_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U117(
    .din0(p_read23),
    .din1(p_read24),
    .din2(p_read25),
    .din3(ap_sig_allocacmp_i_2),
    .dout(tmp_9_fu_550_p5)
);

cabac_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        i_fu_114 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_fu_114 <= add_ln201_reg_736;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln201_reg_736 <= add_ln201_fu_424_p2;
        i_2_reg_729 <= ap_sig_allocacmp_i_2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln204_reg_741 <= add_ln204_fu_442_p2;
        tmp_1_reg_755 <= tmp_1_fu_476_p5;
        tmp_6_reg_762 <= tmp_6_fu_514_p5;
        tmp_7_reg_767 <= tmp_7_fu_526_p5;
        tmp_8_reg_772 <= tmp_8_fu_538_p5;
        tmp_9_reg_777 <= tmp_9_fu_550_p5;
        tmp_reg_748 <= tmp_fu_464_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_729 == 2'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        out_SaoEOClass35_3_fu_138 <= tmp_1_reg_755;
        out_SaoTypeIdx33_3_fu_146 <= tmp_reg_748;
        out_sao_band_position37_3_fu_122 <= tmp_9_reg_777;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_2_reg_729 == 2'd1) & ~(i_2_reg_729 == 2'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_SaoEOClass36_3_fu_134 <= tmp_1_reg_755;
        out_SaoTypeIdx34_3_fu_142 <= tmp_reg_748;
        out_sao_band_position38_3_fu_118 <= tmp_9_reg_777;
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_729 == 2'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_SaoEOClass_3_fu_126 <= tmp_1_reg_755;
        out_SaoTypeIdx_3_fu_150 <= tmp_reg_748;
        out_sao_band_position_3_fu_130 <= tmp_9_reg_777;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 2'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_114;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoEOClass35_3_out_ap_vld = 1'b1;
    end else begin
        out_SaoEOClass35_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoEOClass36_3_out_ap_vld = 1'b1;
    end else begin
        out_SaoEOClass36_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoEOClass_3_out_ap_vld = 1'b1;
    end else begin
        out_SaoEOClass_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_SaoOffsetVal_address0 = zext_ln208_fu_587_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_address0 = zext_ln207_fu_577_p1;
    end else if (((icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_address0 = zext_ln205_fu_459_p1;
    end else begin
        out_SaoOffsetVal_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_address1 = zext_ln206_fu_567_p1;
    end else if (((icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_address1 = zext_ln204_1_fu_448_p1;
    end else begin
        out_SaoOffsetVal_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_ce0 = 1'b1;
    end else begin
        out_SaoOffsetVal_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_ce1 = 1'b1;
    end else begin
        out_SaoOffsetVal_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_SaoOffsetVal_d0 = tmp_8_reg_772;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_d0 = tmp_7_reg_767;
    end else if (((icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_d0 = tmp_5_fu_501_p5;
    end else begin
        out_SaoOffsetVal_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_d1 = tmp_6_reg_762;
    end else if (((icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_d1 = tmp_4_fu_488_p5;
    end else begin
        out_SaoOffsetVal_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_we0 = 1'b1;
    end else begin
        out_SaoOffsetVal_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_we1 = 1'b1;
    end else begin
        out_SaoOffsetVal_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoTypeIdx33_3_out_ap_vld = 1'b1;
    end else begin
        out_SaoTypeIdx33_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoTypeIdx34_3_out_ap_vld = 1'b1;
    end else begin
        out_SaoTypeIdx34_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoTypeIdx_3_out_ap_vld = 1'b1;
    end else begin
        out_SaoTypeIdx_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_sao_band_position37_3_out_ap_vld = 1'b1;
    end else begin
        out_sao_band_position37_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_sao_band_position38_3_out_ap_vld = 1'b1;
    end else begin
        out_sao_band_position38_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_sao_band_position_3_out_ap_vld = 1'b1;
    end else begin
        out_sao_band_position_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (icmp_ln201_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln201_fu_424_p2 = (ap_sig_allocacmp_i_2 + 2'd1);

assign add_ln204_fu_442_p2 = (tmp_s_fu_434_p3 + zext_ln204_fu_430_p1);

assign add_ln205_fu_453_p2 = (add_ln204_fu_442_p2 + 4'd1);

assign add_ln206_fu_562_p2 = (add_ln204_reg_741 + 4'd2);

assign add_ln207_fu_572_p2 = (add_ln204_reg_741 + 4'd3);

assign add_ln208_fu_582_p2 = (add_ln204_reg_741 + 4'd4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln201_fu_418_p2 = ((ap_sig_allocacmp_i_2 == 2'd3) ? 1'b1 : 1'b0);

assign out_SaoEOClass35_3_out = out_SaoEOClass35_3_fu_138;

assign out_SaoEOClass36_3_out = out_SaoEOClass36_3_fu_134;

assign out_SaoEOClass_3_out = out_SaoEOClass_3_fu_126;

assign out_SaoTypeIdx33_3_out = out_SaoTypeIdx33_3_fu_146;

assign out_SaoTypeIdx34_3_out = out_SaoTypeIdx34_3_fu_142;

assign out_SaoTypeIdx_3_out = out_SaoTypeIdx_3_fu_150;

assign out_sao_band_position37_3_out = out_sao_band_position37_3_fu_122;

assign out_sao_band_position38_3_out = out_sao_band_position38_3_fu_118;

assign out_sao_band_position_3_out = out_sao_band_position_3_fu_130;

assign tmp_s_fu_434_p3 = {{ap_sig_allocacmp_i_2}, {2'd0}};

assign zext_ln204_1_fu_448_p1 = add_ln204_fu_442_p2;

assign zext_ln204_fu_430_p1 = ap_sig_allocacmp_i_2;

assign zext_ln205_fu_459_p1 = add_ln205_fu_453_p2;

assign zext_ln206_fu_567_p1 = add_ln206_fu_562_p2;

assign zext_ln207_fu_577_p1 = add_ln207_fu_572_p2;

assign zext_ln208_fu_587_p1 = add_ln208_fu_582_p2;

endmodule //cabac_top_sao_top_Pipeline_VITIS_LOOP_201_5
