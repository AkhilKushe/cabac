

================================================================
== Vitis HLS Report for 'decode_regular'
================================================================
* Date:           Sun May  7 10:30:13 2023

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        cabac_top
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.613 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.25>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state_ivlOffset_1_loc = alloca i64 1"   --->   Operation 8 'alloca' 'state_ivlOffset_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0_loc = alloca i64 1"   --->   Operation 9 'alloca' 'state_bstate_currIdx_0_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%write_flag2_1_loc = alloca i64 1"   --->   Operation 10 'alloca' 'write_flag2_1_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0_loc = alloca i64 1"   --->   Operation 11 'alloca' 'state_bstate_n_bits_held_0_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0_loc = alloca i64 1"   --->   Operation 12 'alloca' 'state_bstate_held_aligned_word_0_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%ctxTables_addr = getelementptr i8 %ctxTables, i64 0, i64 1" [src/arith_dec.cpp:17]   --->   Operation 13 'getelementptr' 'ctxTables_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [2/2] (3.25ns)   --->   "%ctxState = load i9 %ctxTables_addr" [src/arith_dec.cpp:17]   --->   Operation 14 'load' 'ctxState' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 512> <RAM>

State 2 <SV = 1> <Delay = 6.50>
ST_2 : Operation 15 [1/2] (3.25ns)   --->   "%ctxState = load i9 %ctxTables_addr" [src/arith_dec.cpp:17]   --->   Operation 15 'load' 'ctxState' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 512> <RAM>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%valMps = trunc i8 %ctxState" [src/arith_dec.cpp:29]   --->   Operation 16 'trunc' 'valMps' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%pState = partselect i6 @_ssdm_op_PartSelect.i6.i8.i32.i32, i8 %ctxState, i32 1, i32 6" [src/arith_dec.cpp:30]   --->   Operation 17 'partselect' 'pState' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%baeState_0_constprop_load = load i32 %baeState_0_constprop"   --->   Operation 18 'load' 'baeState_0_constprop_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%qRangeIdx = partselect i2 @_ssdm_op_PartSelect.i2.i32.i32.i32, i32 %baeState_0_constprop_load, i32 6, i32 7"   --->   Operation 19 'partselect' 'qRangeIdx' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i6.i2, i6 %pState, i2 %qRangeIdx" [src/arith_dec.cpp:34]   --->   Operation 20 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i8 %tmp" [src/arith_dec.cpp:34]   --->   Operation 21 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%lpsTable_addr = getelementptr i8 %lpsTable, i64 0, i64 %zext_ln34" [src/arith_dec.cpp:34]   --->   Operation 22 'getelementptr' 'lpsTable_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [2/2] (3.25ns)   --->   "%ivlLpsRange = load i8 %lpsTable_addr" [src/arith_dec.cpp:34]   --->   Operation 23 'load' 'ivlLpsRange' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 24 [1/2] (3.25ns)   --->   "%ivlLpsRange = load i8 %lpsTable_addr" [src/arith_dec.cpp:34]   --->   Operation 24 'load' 'ivlLpsRange' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 4 <SV = 3> <Delay = 6.61>
ST_4 : Operation 25 [1/1] (0.00ns)   --->   "%p_read55 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read5"   --->   Operation 25 'read' 'p_read55' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%p_read44 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read4"   --->   Operation 26 'read' 'p_read44' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "%p_read13 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read1"   --->   Operation 27 'read' 'p_read13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%p_read_80 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read"   --->   Operation 28 'read' 'p_read_80' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln34_1 = zext i8 %ivlLpsRange" [src/arith_dec.cpp:34]   --->   Operation 29 'zext' 'zext_ln34_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 30 [1/1] (2.55ns)   --->   "%sub_ln229 = sub i32 %baeState_0_constprop_load, i32 %zext_ln34_1"   --->   Operation 30 'sub' 'sub_ln229' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln35 = store i32 %sub_ln229, i32 %baeState_0_constprop" [src/arith_dec.cpp:35]   --->   Operation 31 'store' 'store_ln35' <Predicate = true> <Delay = 1.58>
ST_4 : Operation 32 [1/1] (2.47ns)   --->   "%icmp_ln1076 = icmp_ugt  i32 %sub_ln229, i32 %p_read_80"   --->   Operation 32 'icmp' 'icmp_ln1076' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i8 %ctxState" [src/arith_dec.cpp:24]   --->   Operation 33 'zext' 'zext_ln24' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln38 = br i1 %icmp_ln1076, void, void" [src/arith_dec.cpp:38]   --->   Operation 34 'br' 'br_ln38' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (1.58ns)   --->   "%store_ln42 = store i32 %zext_ln34_1, i32 %baeState_0_constprop" [src/arith_dec.cpp:42]   --->   Operation 35 'store' 'store_ln42' <Predicate = (!icmp_ln1076)> <Delay = 1.58>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%transLPS_addr = getelementptr i7 %transLPS, i64 0, i64 %zext_ln24" [src/arith_dec.cpp:24]   --->   Operation 36 'getelementptr' 'transLPS_addr' <Predicate = (!icmp_ln1076)> <Delay = 0.00>
ST_4 : Operation 37 [2/2] (2.32ns)   --->   "%transLPS_load = load i7 %transLPS_addr" [src/arith_dec.cpp:24]   --->   Operation 37 'load' 'transLPS_load' <Predicate = (!icmp_ln1076)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 128> <ROM>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%transMPS_addr = getelementptr i7 %transMPS, i64 0, i64 %zext_ln24" [src/arith_dec.cpp:22]   --->   Operation 38 'getelementptr' 'transMPS_addr' <Predicate = (icmp_ln1076)> <Delay = 0.00>
ST_4 : Operation 39 [2/2] (2.32ns)   --->   "%transMPS_load = load i7 %transMPS_addr" [src/arith_dec.cpp:22]   --->   Operation 39 'load' 'transMPS_load' <Predicate = (icmp_ln1076)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 128> <ROM>

State 5 <SV = 4> <Delay = 5.84>
ST_5 : Operation 40 [1/1] (0.97ns)   --->   "%xor_ln40 = xor i1 %valMps, i1 1" [src/arith_dec.cpp:40]   --->   Operation 40 'xor' 'xor_ln40' <Predicate = (!icmp_ln1076)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 41 [1/1] (2.55ns)   --->   "%sub_ln229_1 = sub i32 %p_read_80, i32 %sub_ln229"   --->   Operation 41 'sub' 'sub_ln229_1' <Predicate = (!icmp_ln1076)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/2] (2.32ns)   --->   "%transLPS_load = load i7 %transLPS_addr" [src/arith_dec.cpp:24]   --->   Operation 42 'load' 'transLPS_load' <Predicate = (!icmp_ln1076)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 128> <ROM>
ST_5 : Operation 43 [1/1] (1.58ns)   --->   "%br_ln0 = br void %_Z9ctxUpdatePhjb.exit"   --->   Operation 43 'br' 'br_ln0' <Predicate = (!icmp_ln1076)> <Delay = 1.58>
ST_5 : Operation 44 [1/2] (2.32ns)   --->   "%transMPS_load = load i7 %transMPS_addr" [src/arith_dec.cpp:22]   --->   Operation 44 'load' 'transMPS_load' <Predicate = (icmp_ln1076)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 128> <ROM>
ST_5 : Operation 45 [1/1] (1.58ns)   --->   "%br_ln23 = br void %_Z9ctxUpdatePhjb.exit" [src/arith_dec.cpp:23]   --->   Operation 45 'br' 'br_ln23' <Predicate = (icmp_ln1076)> <Delay = 1.58>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "%write_flag2_0 = phi i1 0, void, i1 1, void"   --->   Operation 46 'phi' 'write_flag2_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%empty = phi i32 %sub_ln229, void, i32 %zext_ln34_1, void"   --->   Operation 47 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%empty_54 = phi i32 %p_read_80, void, i32 %sub_ln229_1, void"   --->   Operation 48 'phi' 'empty_54' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [2/2] (1.70ns)   --->   "%call_ln229 = call void @decode_regular_Pipeline_VITIS_LOOP_53_1, i8 %p_read55, i8 %p_read44, i1 %write_flag2_0, i32 %p_read13, i32 %empty_54, i32 %empty, i8 %bStream, i8 %state_bstate_held_aligned_word_0_loc, i8 %state_bstate_n_bits_held_0_loc, i1 %write_flag2_1_loc, i32 %state_bstate_currIdx_0_loc, i32 %state_ivlOffset_1_loc, i32 %baeState_0_constprop"   --->   Operation 49 'call' 'call_ln229' <Predicate = true> <Delay = 1.70> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 3.25>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%binVal_0 = phi i1 %valMps, void, i1 %xor_ln40, void"   --->   Operation 50 'phi' 'binVal_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "%storemerge = phi i7 %transMPS_load, void, i7 %transLPS_load, void" [src/arith_dec.cpp:22]   --->   Operation 51 'phi' 'storemerge' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln24_1 = zext i7 %storemerge" [src/arith_dec.cpp:24]   --->   Operation 52 'zext' 'zext_ln24_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (3.25ns)   --->   "%store_ln24 = store i8 %zext_ln24_1, i9 %ctxTables_addr" [src/arith_dec.cpp:24]   --->   Operation 53 'store' 'store_ln24' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 512> <RAM>
ST_6 : Operation 54 [1/2] (0.00ns)   --->   "%call_ln229 = call void @decode_regular_Pipeline_VITIS_LOOP_53_1, i8 %p_read55, i8 %p_read44, i1 %write_flag2_0, i32 %p_read13, i32 %empty_54, i32 %empty, i8 %bStream, i8 %state_bstate_held_aligned_word_0_loc, i8 %state_bstate_n_bits_held_0_loc, i1 %write_flag2_1_loc, i32 %state_bstate_currIdx_0_loc, i32 %state_ivlOffset_1_loc, i32 %baeState_0_constprop"   --->   Operation 54 'call' 'call_ln229' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.69>
ST_7 : Operation 55 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0_loc_load = load i8 %state_bstate_held_aligned_word_0_loc"   --->   Operation 55 'load' 'state_bstate_held_aligned_word_0_loc_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 56 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0_loc_load = load i8 %state_bstate_n_bits_held_0_loc"   --->   Operation 56 'load' 'state_bstate_n_bits_held_0_loc_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 57 [1/1] (0.00ns)   --->   "%write_flag2_1_loc_load = load i1 %write_flag2_1_loc"   --->   Operation 57 'load' 'write_flag2_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 58 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0_loc_load = load i32 %state_bstate_currIdx_0_loc"   --->   Operation 58 'load' 'state_bstate_currIdx_0_loc_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 59 [1/1] (0.00ns)   --->   "%state_ivlOffset_1_loc_load = load i32 %state_ivlOffset_1_loc"   --->   Operation 59 'load' 'state_ivlOffset_1_loc_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 60 [1/1] (0.69ns)   --->   "%select_ln65 = select i1 %write_flag2_1_loc_load, i32 %state_ivlOffset_1_loc_load, i32 %p_read_80" [src/arith_dec.cpp:65]   --->   Operation 60 'select' 'select_ln65' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 61 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue i81 <undef>, i32 %state_bstate_currIdx_0_loc_load" [src/arith_dec.cpp:65]   --->   Operation 61 'insertvalue' 'mrv_s' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 62 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i81 %mrv_s, i8 %state_bstate_n_bits_held_0_loc_load" [src/arith_dec.cpp:65]   --->   Operation 62 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i81 %mrv_2, i8 %state_bstate_held_aligned_word_0_loc_load" [src/arith_dec.cpp:65]   --->   Operation 63 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue i81 %mrv_3, i1 %binVal_0" [src/arith_dec.cpp:65]   --->   Operation 64 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i81 %mrv_5, i32 %select_ln65" [src/arith_dec.cpp:65]   --->   Operation 65 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%ret_ln65 = ret i81 %mrv_4" [src/arith_dec.cpp:65]   --->   Operation 66 'ret' 'ret_ln65' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('ctxTables_addr', src/arith_dec.cpp:17) [20]  (0 ns)
	'load' operation ('ctxState', src/arith_dec.cpp:17) on array 'ctxTables' [21]  (3.25 ns)

 <State 2>: 6.51ns
The critical path consists of the following:
	'load' operation ('ctxState', src/arith_dec.cpp:17) on array 'ctxTables' [21]  (3.25 ns)
	'getelementptr' operation ('lpsTable_addr', src/arith_dec.cpp:34) [28]  (0 ns)
	'load' operation ('ivlLpsRange', src/arith_dec.cpp:34) on array 'lpsTable' [29]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('ivlLpsRange', src/arith_dec.cpp:34) on array 'lpsTable' [29]  (3.25 ns)

 <State 4>: 6.61ns
The critical path consists of the following:
	'sub' operation ('sub_ln229') [31]  (2.55 ns)
	'icmp' operation ('icmp_ln1076') [33]  (2.47 ns)
	blocking operation 1.59 ns on control path)

 <State 5>: 5.85ns
The critical path consists of the following:
	'sub' operation ('sub_ln229_1') [38]  (2.55 ns)
	multiplexor before 'phi' operation ('empty_54') with incoming values : ('p_read_80') ('sub_ln229_1') [52]  (1.59 ns)
	'phi' operation ('empty_54') with incoming values : ('p_read_80') ('sub_ln229_1') [52]  (0 ns)
	'call' operation ('call_ln229') to 'decode_regular_Pipeline_VITIS_LOOP_53_1' [55]  (1.71 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'phi' operation ('storemerge', src/arith_dec.cpp:22) with incoming values : ('transLPS_load', src/arith_dec.cpp:24) ('transMPS_load', src/arith_dec.cpp:22) [50]  (0 ns)
	'store' operation ('store_ln24', src/arith_dec.cpp:24) of variable 'zext_ln24_1', src/arith_dec.cpp:24 on array 'ctxTables' [54]  (3.25 ns)

 <State 7>: 0.698ns
The critical path consists of the following:
	'load' operation ('write_flag2_1_loc_load') on local variable 'write_flag2_1_loc' [58]  (0 ns)
	'select' operation ('select_ln65', src/arith_dec.cpp:65) [61]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
