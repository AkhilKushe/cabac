

================================================================
== Vitis HLS Report for 'sao_top_Pipeline_VITIS_LOOP_54_1'
================================================================
* Date:           Sun May  7 10:30:14 2023

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        cabac_top
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.029 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_54_1  |        ?|        ?|         3|          3|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 3, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.14>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_in = alloca i32 1"   --->   Operation 7 'alloca' 'p_in' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_6 = alloca i32 1"   --->   Operation 8 'alloca' 'state_bstate_n_bits_held_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%aligned_word = alloca i32 1"   --->   Operation 9 'alloca' 'aligned_word' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_6 = alloca i32 1"   --->   Operation 10 'alloca' 'state_bstate_currIdx_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%baeState_0_constprop_load_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %baeState_0_constprop_load"   --->   Operation 11 'read' 'baeState_0_constprop_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%state_ivlOffset_5_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %state_ivlOffset_5"   --->   Operation 12 'read' 'state_ivlOffset_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_5_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_held_aligned_word_5"   --->   Operation 13 'read' 'state_bstate_held_aligned_word_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_5_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_n_bits_held_5"   --->   Operation 14 'read' 'state_bstate_n_bits_held_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_5_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %state_bstate_currIdx_5"   --->   Operation 15 'read' 'state_bstate_currIdx_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %state_bstate_currIdx_5_read, i32 %state_bstate_currIdx_6"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %state_bstate_held_aligned_word_5_read, i8 %aligned_word"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.70ns)   --->   "%store_ln0 = store i8 %state_bstate_n_bits_held_5_read, i8 %state_bstate_n_bits_held_6"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i31 %state_ivlOffset_5_read, i31 %p_in"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %empty"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 21 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty"   --->   Operation 22 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%p_in_load = load i31 %p_in"   --->   Operation 23 'load' 'p_in_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_6_load = load i8 %state_bstate_n_bits_held_6" [src/utils.cpp:16]   --->   Operation 24 'load' 'state_bstate_n_bits_held_6_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%empty_45 = trunc i32 %p_load"   --->   Operation 25 'trunc' 'empty_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 26 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln95 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [src/arith_dec.cpp:95]   --->   Operation 27 'specloopname' 'specloopname_ln95' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln1543 = trunc i31 %p_in_load"   --->   Operation 28 'trunc' 'trunc_ln1543' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %trunc_ln1543, i1 0"   --->   Operation 29 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %state_bstate_n_bits_held_6_load" [src/utils.cpp:13]   --->   Operation 30 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp_eq  i8 %state_bstate_n_bits_held_6_load, i8 0" [src/utils.cpp:13]   --->   Operation 31 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (2.55ns)   --->   "%add_ln56 = add i32 %p_load, i32 1" [src/deBin.cpp:56]   --->   Operation 32 'add' 'add_ln56' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void, void %._crit_edge17" [src/utils.cpp:13]   --->   Operation 33 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.91ns)   --->   "%add_ln16 = add i8 %state_bstate_n_bits_held_6_load, i8 255" [src/utils.cpp:16]   --->   Operation 34 'add' 'add_ln16' <Predicate = (!icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (1.70ns)   --->   "%store_ln17 = store i8 %add_ln16, i8 %state_bstate_n_bits_held_6" [src/utils.cpp:17]   --->   Operation 35 'store' 'store_ln17' <Predicate = (!icmp_ln13)> <Delay = 1.70>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_6_load = load i32 %state_bstate_currIdx_6" [src/utils.cpp:6]   --->   Operation 36 'load' 'state_bstate_currIdx_6_load' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln5 = zext i32 %state_bstate_currIdx_6_load" [src/utils.cpp:5]   --->   Operation 37 'zext' 'zext_ln5' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%bStream_addr = getelementptr i8 %bStream, i64 0, i64 %zext_ln5" [src/utils.cpp:5]   --->   Operation 38 'getelementptr' 'bStream_addr' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (2.32ns)   --->   "%retVal_7 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 39 'load' 'retVal_7' <Predicate = (icmp_ln13)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>
ST_1 : Operation 40 [1/1] (2.55ns)   --->   "%add_ln6 = add i32 %state_bstate_currIdx_6_load, i32 1" [src/utils.cpp:6]   --->   Operation 40 'add' 'add_ln6' <Predicate = (icmp_ln13)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln46 = store i32 %add_ln6, i32 %state_bstate_currIdx_6" [src/utils.cpp:46]   --->   Operation 41 'store' 'store_ln46' <Predicate = (icmp_ln13)> <Delay = 1.58>
ST_1 : Operation 42 [1/1] (1.70ns)   --->   "%store_ln46 = store i8 7, i8 %state_bstate_n_bits_held_6" [src/utils.cpp:46]   --->   Operation 42 'store' 'store_ln46' <Predicate = (icmp_ln13)> <Delay = 1.70>

State 2 <SV = 1> <Delay = 5.16>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%aligned_word_load = load i8 %aligned_word" [src/utils.cpp:14]   --->   Operation 43 'load' 'aligned_word_load' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.91ns)   --->   "%add_ln14 = add i9 %zext_ln13, i9 511" [src/utils.cpp:14]   --->   Operation 44 'add' 'add_ln14' <Predicate = (!icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln14 = sext i9 %add_ln14" [src/utils.cpp:14]   --->   Operation 45 'sext' 'sext_ln14' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i8 %aligned_word_load" [src/utils.cpp:14]   --->   Operation 46 'zext' 'zext_ln14' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (3.25ns)   --->   "%retVal_5 = lshr i32 %zext_ln14, i32 %sext_ln14" [src/utils.cpp:14]   --->   Operation 47 'lshr' 'retVal_5' <Predicate = (!icmp_ln13)> <Delay = 3.25> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%retVal_6 = trunc i32 %retVal_5" [src/utils.cpp:11]   --->   Operation 48 'trunc' 'retVal_6' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i1 %retVal_6" [src/utils.cpp:11]   --->   Operation 49 'zext' 'zext_ln11' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.58ns)   --->   "%br_ln17 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i.i.i" [src/utils.cpp:17]   --->   Operation 50 'br' 'br_ln17' <Predicate = (!icmp_ln13)> <Delay = 1.58>
ST_2 : Operation 51 [1/2] (2.32ns)   --->   "%retVal_7 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 51 'load' 'retVal_7' <Predicate = (icmp_ln13)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %retVal_7, i32 7" [src/utils.cpp:42]   --->   Operation 52 'bitselect' 'tmp' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i1 %tmp" [src/utils.cpp:42]   --->   Operation 53 'zext' 'zext_ln42' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%retVal = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 0, i8 %zext_ln42" [src/utils.cpp:42]   --->   Operation 54 'bitconcatenate' 'retVal' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (1.58ns)   --->   "%store_ln46 = store i8 %retVal_7, i8 %aligned_word" [src/utils.cpp:46]   --->   Operation 55 'store' 'store_ln46' <Predicate = (icmp_ln13)> <Delay = 1.58>
ST_2 : Operation 56 [1/1] (1.58ns)   --->   "%br_ln46 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i.i.i" [src/utils.cpp:46]   --->   Operation 56 'br' 'br_ln46' <Predicate = (icmp_ln13)> <Delay = 1.58>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_s = partselect i23 @_ssdm_op_PartSelect.i23.i31.i32.i32, i31 %p_in_load, i32 8, i32 30"   --->   Operation 57 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.02>
ST_3 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%val = phi i9 %retVal, void %._crit_edge17, i9 %zext_ln11, void"   --->   Operation 58 'phi' 'val' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln1543 = or i9 %shl_ln, i9 %val"   --->   Operation 59 'or' 'or_ln1543' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%ret = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %tmp_s, i9 %or_ln1543"   --->   Operation 60 'bitconcatenate' 'ret' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (2.47ns)   --->   "%icmp_ln1076 = icmp_ult  i32 %ret, i32 %baeState_0_constprop_load_read"   --->   Operation 61 'icmp' 'icmp_ln1076' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (2.55ns)   --->   "%sub_ln229 = sub i32 %ret, i32 %baeState_0_constprop_load_read"   --->   Operation 62 'sub' 'sub_ln229' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.69ns)   --->   "%ret_3 = select i1 %icmp_ln1076, i32 %ret, i32 %sub_ln229" [src/arith_dec.cpp:76]   --->   Operation 63 'select' 'ret_3' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln76 = trunc i32 %ret_3" [src/arith_dec.cpp:76]   --->   Operation 64 'trunc' 'trunc_ln76' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node and_ln57)   --->   "%binVal = xor i1 %icmp_ln1076, i1 1" [src/arith_dec.cpp:76]   --->   Operation 65 'xor' 'binVal' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (2.47ns)   --->   "%icmp_ln57 = icmp_ult  i32 %add_ln56, i32 5" [src/deBin.cpp:57]   --->   Operation 66 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln57 = and i1 %icmp_ln57, i1 %binVal" [src/deBin.cpp:57]   --->   Operation 67 'and' 'and_ln57' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln57 = br i1 %and_ln57, void %_Z17parseSAOOffsetAbsR8_arith_tPhRj.exit.exitStub, void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i.i.i._crit_edge" [src/deBin.cpp:57]   --->   Operation 68 'br' 'br_ln57' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (1.58ns)   --->   "%store_ln57 = store i31 %trunc_ln76, i31 %p_in" [src/deBin.cpp:57]   --->   Operation 69 'store' 'store_ln57' <Predicate = (and_ln57)> <Delay = 1.58>
ST_3 : Operation 70 [1/1] (1.58ns)   --->   "%store_ln57 = store i32 %add_ln56, i32 %empty" [src/deBin.cpp:57]   --->   Operation 70 'store' 'store_ln57' <Predicate = (and_ln57)> <Delay = 1.58>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln57 = br void" [src/deBin.cpp:57]   --->   Operation 71 'br' 'br_ln57' <Predicate = (and_ln57)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_6_load_1 = load i8 %state_bstate_n_bits_held_6"   --->   Operation 72 'load' 'state_bstate_n_bits_held_6_load_1' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%aligned_word_load_1 = load i8 %aligned_word"   --->   Operation 73 'load' 'aligned_word_load_1' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_6_load_1 = load i32 %state_bstate_currIdx_6"   --->   Operation 74 'load' 'state_bstate_currIdx_6_load_1' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %p_out, i8 %empty_45"   --->   Operation 75 'write' 'write_ln0' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %state_bstate_currIdx_7_out, i32 %state_bstate_currIdx_6_load_1"   --->   Operation 76 'write' 'write_ln0' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %state_bstate_n_bits_held_7_out, i8 %state_bstate_n_bits_held_6_load_1"   --->   Operation 77 'write' 'write_ln0' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %state_bstate_held_aligned_word_7_out, i8 %aligned_word_load_1"   --->   Operation 78 'write' 'write_ln0' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%write_ln76 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %ret_1_out, i32 %ret_3" [src/arith_dec.cpp:76]   --->   Operation 79 'write' 'write_ln76' <Predicate = (!and_ln57)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 80 'ret' 'ret_ln0' <Predicate = (!and_ln57)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.14ns
The critical path consists of the following:
	'alloca' operation ('state_bstate_currIdx_6') [16]  (0 ns)
	'load' operation ('state_bstate_currIdx_6_load', src/utils.cpp:6) on local variable 'state_bstate_currIdx_6' [53]  (0 ns)
	'add' operation ('add_ln6', src/utils.cpp:6) [57]  (2.55 ns)
	'store' operation ('store_ln46', src/utils.cpp:46) of variable 'add_ln6', src/utils.cpp:6 on local variable 'state_bstate_currIdx_6' [61]  (1.59 ns)

 <State 2>: 5.17ns
The critical path consists of the following:
	'add' operation ('add_ln14', src/utils.cpp:14) [43]  (1.92 ns)
	'lshr' operation ('retVal', src/utils.cpp:14) [46]  (3.25 ns)

 <State 3>: 6.03ns
The critical path consists of the following:
	'phi' operation ('retVal') with incoming values : ('zext_ln11', src/utils.cpp:11) ('retVal', src/utils.cpp:42) [66]  (0 ns)
	'or' operation ('or_ln1543') [67]  (0.99 ns)
	'sub' operation ('sub_ln229') [71]  (2.55 ns)
	'select' operation ('ret', src/arith_dec.cpp:76) [72]  (0.698 ns)
	'store' operation ('store_ln57', src/deBin.cpp:57) of variable 'trunc_ln76', src/arith_dec.cpp:76 on local variable 'p_in' [79]  (1.59 ns)
	blocking operation 0.201 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
