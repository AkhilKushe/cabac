

================================================================
== Vitis HLS Report for 'decode_decision'
================================================================
* Date:           Sun May  7 10:30:14 2023

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        cabac_top
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.613 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 3 4 
2 --> 5 
3 --> 5 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.16>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read37 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read3"   --->   Operation 6 'read' 'p_read37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read26 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read2"   --->   Operation 7 'read' 'p_read26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read15 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read1"   --->   Operation 8 'read' 'p_read15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read_81 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read"   --->   Operation 9 'read' 'p_read_81' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%mode_offset_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %mode_offset"   --->   Operation 10 'read' 'mode_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln98 = br i1 %mode_offset_read, void, void" [src/arith_dec.cpp:98]   --->   Operation 11 'br' 'br_ln98' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [2/2] (4.06ns)   --->   "%call_ret = call i81 @decode_regular, i32 %p_read_81, i32 %p_read15, i8 %p_read26, i8 %p_read37, i8 %bStream, i8 %ctxTables, i32 %baeState_0_constprop, i8 %lpsTable, i7 %transMPS, i7 %transLPS" [src/arith_dec.cpp:99]   --->   Operation 12 'call' 'call_ret' <Predicate = (!mode_offset_read)> <Delay = 4.06> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %p_read26" [src/utils.cpp:13]   --->   Operation 13 'zext' 'zext_ln13' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp_eq  i8 %p_read26, i8 0" [src/utils.cpp:13]   --->   Operation 14 'icmp' 'icmp_ln13' <Predicate = (mode_offset_read)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i8 %p_read37" [src/utils.cpp:14]   --->   Operation 15 'zext' 'zext_ln14' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void, void %._crit_edge4" [src/utils.cpp:13]   --->   Operation 16 'br' 'br_ln13' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.91ns)   --->   "%add_ln14 = add i9 %zext_ln13, i9 511" [src/utils.cpp:14]   --->   Operation 17 'add' 'add_ln14' <Predicate = (mode_offset_read & !icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sext_ln14 = sext i9 %add_ln14" [src/utils.cpp:14]   --->   Operation 18 'sext' 'sext_ln14' <Predicate = (mode_offset_read & !icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (3.25ns)   --->   "%retVal_23 = lshr i32 %zext_ln14, i32 %sext_ln14" [src/utils.cpp:14]   --->   Operation 19 'lshr' 'retVal_23' <Predicate = (mode_offset_read & !icmp_ln13)> <Delay = 3.25> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%retVal_24 = trunc i32 %retVal_23" [src/utils.cpp:11]   --->   Operation 20 'trunc' 'retVal_24' <Predicate = (mode_offset_read & !icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln5 = zext i32 %p_read15" [src/utils.cpp:5]   --->   Operation 21 'zext' 'zext_ln5' <Predicate = (mode_offset_read & icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%bStream_addr = getelementptr i8 %bStream, i64 0, i64 %zext_ln5" [src/utils.cpp:5]   --->   Operation 22 'getelementptr' 'bStream_addr' <Predicate = (mode_offset_read & icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 23 [2/2] (2.32ns)   --->   "%retVal_25 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 23 'load' 'retVal_25' <Predicate = (mode_offset_read & icmp_ln13)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>

State 2 <SV = 1> <Delay = 1.58>
ST_2 : Operation 24 [1/2] (0.69ns)   --->   "%call_ret = call i81 @decode_regular, i32 %p_read_81, i32 %p_read15, i8 %p_read26, i8 %p_read37, i8 %bStream, i8 %ctxTables, i32 %baeState_0_constprop, i8 %lpsTable, i7 %transMPS, i7 %transLPS" [src/arith_dec.cpp:99]   --->   Operation 24 'call' 'call_ret' <Predicate = true> <Delay = 0.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%binVal_ret = extractvalue i81 %call_ret" [src/arith_dec.cpp:99]   --->   Operation 25 'extractvalue' 'binVal_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_ret = extractvalue i81 %call_ret" [src/arith_dec.cpp:99]   --->   Operation 26 'extractvalue' 'state_bstate_held_aligned_word_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_ret = extractvalue i81 %call_ret" [src/arith_dec.cpp:99]   --->   Operation 27 'extractvalue' 'state_bstate_n_bits_held_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_ret = extractvalue i81 %call_ret" [src/arith_dec.cpp:99]   --->   Operation 28 'extractvalue' 'state_bstate_currIdx_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%state_ivlOffset_ret = extractvalue i81 %call_ret" [src/arith_dec.cpp:99]   --->   Operation 29 'extractvalue' 'state_ivlOffset_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.58ns)   --->   "%br_ln100 = br void %._crit_edge" [src/arith_dec.cpp:100]   --->   Operation 30 'br' 'br_ln100' <Predicate = true> <Delay = 1.58>

State 3 <SV = 1> <Delay = 1.91>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i1 %retVal_24" [src/utils.cpp:11]   --->   Operation 31 'zext' 'zext_ln11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.91ns)   --->   "%add_ln16 = add i8 %p_read26, i8 255" [src/utils.cpp:16]   --->   Operation 32 'add' 'add_ln16' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (1.58ns)   --->   "%br_ln17 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i" [src/utils.cpp:17]   --->   Operation 33 'br' 'br_ln17' <Predicate = true> <Delay = 1.58>

State 4 <SV = 1> <Delay = 2.55>
ST_4 : Operation 34 [1/2] (2.32ns)   --->   "%retVal_25 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 34 'load' 'retVal_25' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>
ST_4 : Operation 35 [1/1] (2.55ns)   --->   "%add_ln6 = add i32 %p_read15, i32 1" [src/utils.cpp:6]   --->   Operation 35 'add' 'add_ln6' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %retVal_25, i32 7" [src/utils.cpp:42]   --->   Operation 36 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i1 %tmp" [src/utils.cpp:42]   --->   Operation 37 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%retVal = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 0, i8 %zext_ln42" [src/utils.cpp:42]   --->   Operation 38 'bitconcatenate' 'retVal' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (1.58ns)   --->   "%br_ln46 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i" [src/utils.cpp:46]   --->   Operation 39 'br' 'br_ln46' <Predicate = true> <Delay = 1.58>

State 5 <SV = 2> <Delay = 6.02>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0 = phi i32 %add_ln6, void %._crit_edge4, i32 %p_read15, void" [src/utils.cpp:6]   --->   Operation 40 'phi' 'state_bstate_currIdx_0' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0 = phi i8 7, void %._crit_edge4, i8 %add_ln16, void" [src/utils.cpp:16]   --->   Operation 41 'phi' 'state_bstate_n_bits_held_0' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0 = phi i8 %retVal_25, void %._crit_edge4, i8 %p_read37, void"   --->   Operation 42 'phi' 'state_bstate_held_aligned_word_0' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%val = phi i9 %retVal, void %._crit_edge4, i9 %zext_ln11, void"   --->   Operation 43 'phi' 'val' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%trunc_ln1543 = trunc i32 %p_read_81"   --->   Operation 44 'trunc' 'trunc_ln1543' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%shl_ln = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %trunc_ln1543, i1 0"   --->   Operation 45 'bitconcatenate' 'shl_ln' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln1543 = or i9 %shl_ln, i9 %val"   --->   Operation 46 'or' 'or_ln1543' <Predicate = (mode_offset_read)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_s = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %p_read_81, i32 8, i32 30"   --->   Operation 47 'partselect' 'tmp_s' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%ret = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %tmp_s, i9 %or_ln1543"   --->   Operation 48 'bitconcatenate' 'ret' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%baeState_0_constprop_load = load i32 %baeState_0_constprop"   --->   Operation 49 'load' 'baeState_0_constprop_load' <Predicate = (mode_offset_read)> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (2.47ns)   --->   "%icmp_ln1076 = icmp_ult  i32 %ret, i32 %baeState_0_constprop_load"   --->   Operation 50 'icmp' 'icmp_ln1076' <Predicate = (mode_offset_read)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (2.55ns)   --->   "%sub_ln229 = sub i32 %ret, i32 %baeState_0_constprop_load"   --->   Operation 51 'sub' 'sub_ln229' <Predicate = (mode_offset_read)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.97ns)   --->   "%xor_ln76 = xor i1 %icmp_ln1076, i1 1" [src/arith_dec.cpp:76]   --->   Operation 52 'xor' 'xor_ln76' <Predicate = (mode_offset_read)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.69ns)   --->   "%ret_9 = select i1 %icmp_ln1076, i32 %ret, i32 %sub_ln229" [src/arith_dec.cpp:76]   --->   Operation 53 'select' 'ret_9' <Predicate = (mode_offset_read)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (1.58ns)   --->   "%br_ln102 = br void %._crit_edge" [src/arith_dec.cpp:102]   --->   Operation 54 'br' 'br_ln102' <Predicate = (mode_offset_read)> <Delay = 1.58>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_1 = phi i32 %state_bstate_currIdx_0, void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i, i32 %state_bstate_currIdx_ret, void" [src/utils.cpp:6]   --->   Operation 55 'phi' 'state_bstate_currIdx_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_1 = phi i8 %state_bstate_n_bits_held_0, void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i, i8 %state_bstate_n_bits_held_ret, void" [src/utils.cpp:16]   --->   Operation 56 'phi' 'state_bstate_n_bits_held_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_1 = phi i8 %state_bstate_held_aligned_word_0, void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i, i8 %state_bstate_held_aligned_word_ret, void" [src/utils.cpp:5]   --->   Operation 57 'phi' 'state_bstate_held_aligned_word_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%binVal_1 = phi i1 %xor_ln76, void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i, i1 %binVal_ret, void" [src/arith_dec.cpp:76]   --->   Operation 58 'phi' 'binVal_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%state_ivlOffset_1 = phi i32 %ret_9, void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i, i32 %state_ivlOffset_ret, void"   --->   Operation 59 'phi' 'state_ivlOffset_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue i81 <undef>, i32 %state_bstate_currIdx_1" [src/arith_dec.cpp:107]   --->   Operation 60 'insertvalue' 'mrv_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue i81 %mrv_s, i8 %state_bstate_n_bits_held_1" [src/arith_dec.cpp:107]   --->   Operation 61 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue i81 %mrv_6, i8 %state_bstate_held_aligned_word_1" [src/arith_dec.cpp:107]   --->   Operation 62 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%mrv_8 = insertvalue i81 %mrv_7, i1 %binVal_1" [src/arith_dec.cpp:107]   --->   Operation 63 'insertvalue' 'mrv_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i81 %mrv_8, i32 %state_ivlOffset_1" [src/arith_dec.cpp:107]   --->   Operation 64 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%ret_ln107 = ret i81 %mrv_4" [src/arith_dec.cpp:107]   --->   Operation 65 'ret' 'ret_ln107' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.17ns
The critical path consists of the following:
	wire read operation ('p_read26') on port 'p_read2' [13]  (0 ns)
	'add' operation ('add_ln14', src/utils.cpp:14) [32]  (1.92 ns)
	'lshr' operation ('retVal', src/utils.cpp:14) [34]  (3.25 ns)

 <State 2>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('state_bstate_currIdx_1', src/utils.cpp:6) with incoming values : ('p_read15') ('state_bstate_currIdx_ret', src/arith_dec.cpp:99) ('add_ln6', src/utils.cpp:6) [65]  (1.59 ns)

 <State 3>: 1.92ns
The critical path consists of the following:
	'add' operation ('add_ln16', src/utils.cpp:16) [37]  (1.92 ns)

 <State 4>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln6', src/utils.cpp:6) [43]  (2.55 ns)

 <State 5>: 6.03ns
The critical path consists of the following:
	'phi' operation ('retVal') with incoming values : ('zext_ln11', src/utils.cpp:11) ('retVal', src/utils.cpp:42) [52]  (0 ns)
	'or' operation ('or_ln1543') [55]  (0.99 ns)
	'icmp' operation ('icmp_ln1076') [59]  (2.47 ns)
	'xor' operation ('xor_ln76', src/arith_dec.cpp:76) [61]  (0.978 ns)
	multiplexor before 'phi' operation ('binVal_1', src/arith_dec.cpp:76) with incoming values : ('binVal_ret', src/arith_dec.cpp:99) ('xor_ln76', src/arith_dec.cpp:76) [68]  (1.59 ns)
	'phi' operation ('binVal_1', src/arith_dec.cpp:76) with incoming values : ('binVal_ret', src/arith_dec.cpp:99) ('xor_ln76', src/arith_dec.cpp:76) [68]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
