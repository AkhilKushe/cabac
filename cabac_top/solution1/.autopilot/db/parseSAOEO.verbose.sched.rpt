

================================================================
== Vitis HLS Report for 'parseSAOEO'
================================================================
* Date:           Sun May  7 10:30:14 2023

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        cabac_top
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.029 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        7|        7|  70.000 ns|  70.000 ns|    7|    7|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_80_1  |        6|        6|         3|          -|          -|     2|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.70>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%binIdx = alloca i32 1"   --->   Operation 5 'alloca' 'binIdx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%symbolVal_write_assign = alloca i32 1"   --->   Operation 6 'alloca' 'symbolVal_write_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%state_ivlOffset_0 = alloca i32 1"   --->   Operation 7 'alloca' 'state_ivlOffset_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0 = alloca i32 1"   --->   Operation 8 'alloca' 'state_bstate_n_bits_held_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0 = alloca i32 1"   --->   Operation 9 'alloca' 'state_bstate_held_aligned_word_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0 = alloca i32 1"   --->   Operation 10 'alloca' 'state_bstate_currIdx_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_read_1 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_held_aligned_word_read" [src/deBin.cpp:74]   --->   Operation 11 'read' 'state_bstate_held_aligned_word_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_read_1 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_n_bits_held_read" [src/deBin.cpp:74]   --->   Operation 12 'read' 'state_bstate_n_bits_held_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %state_bstate_currIdx_read" [src/deBin.cpp:74]   --->   Operation 13 'read' 'state_bstate_currIdx_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%state_ivlOffset_V_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %state_ivlOffset_V_read" [src/deBin.cpp:74]   --->   Operation 14 'read' 'state_ivlOffset_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%baeState_0_constprop_load = load i32 %baeState_0_constprop"   --->   Operation 15 'load' 'baeState_0_constprop_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln80 = store i32 %state_bstate_currIdx_read_1, i32 %state_bstate_currIdx_0" [src/deBin.cpp:80]   --->   Operation 16 'store' 'store_ln80' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln80 = store i8 %state_bstate_held_aligned_word_read_1, i8 %state_bstate_held_aligned_word_0" [src/deBin.cpp:80]   --->   Operation 17 'store' 'store_ln80' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.70ns)   --->   "%store_ln80 = store i8 %state_bstate_n_bits_held_read_1, i8 %state_bstate_n_bits_held_0" [src/deBin.cpp:80]   --->   Operation 18 'store' 'store_ln80' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln80 = store i32 %state_ivlOffset_V_read_1, i32 %state_ivlOffset_0" [src/deBin.cpp:80]   --->   Operation 19 'store' 'store_ln80' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln80 = store i32 0, i32 %symbolVal_write_assign" [src/deBin.cpp:80]   --->   Operation 20 'store' 'store_ln80' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln80 = store i2 0, i2 %binIdx" [src/deBin.cpp:80]   --->   Operation 21 'store' 'store_ln80' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln80 = br void" [src/deBin.cpp:80]   --->   Operation 22 'br' 'br_ln80' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.16>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%binIdx_2 = load i2 %binIdx" [src/deBin.cpp:83]   --->   Operation 23 'load' 'binIdx_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.95ns)   --->   "%icmp_ln80 = icmp_eq  i2 %binIdx_2, i2 2" [src/deBin.cpp:80]   --->   Operation 24 'icmp' 'icmp_ln80' <Predicate = true> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.56ns)   --->   "%add_ln83 = add i2 %binIdx_2, i2 1" [src/deBin.cpp:83]   --->   Operation 26 'add' 'add_ln83' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln80 = br i1 %icmp_ln80, void %.split, void" [src/deBin.cpp:80]   --->   Operation 27 'br' 'br_ln80' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0_load_1 = load i8 %state_bstate_n_bits_held_0" [src/utils.cpp:13]   --->   Operation 28 'load' 'state_bstate_n_bits_held_0_load_1' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0_load = load i8 %state_bstate_held_aligned_word_0" [src/utils.cpp:14]   --->   Operation 29 'load' 'state_bstate_held_aligned_word_0_load' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specloopname_ln75 = specloopname void @_ssdm_op_SpecLoopName, void @empty_20" [src/deBin.cpp:75]   --->   Operation 30 'specloopname' 'specloopname_ln75' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %state_bstate_n_bits_held_0_load_1" [src/utils.cpp:13]   --->   Operation 31 'zext' 'zext_ln13' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp_eq  i8 %state_bstate_n_bits_held_0_load_1, i8 0" [src/utils.cpp:13]   --->   Operation 32 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln80)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i8 %state_bstate_held_aligned_word_0_load" [src/utils.cpp:14]   --->   Operation 33 'zext' 'zext_ln14' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void, void %._crit_edge3" [src/utils.cpp:13]   --->   Operation 34 'br' 'br_ln13' <Predicate = (!icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.91ns)   --->   "%add_ln14 = add i9 %zext_ln13, i9 511" [src/utils.cpp:14]   --->   Operation 35 'add' 'add_ln14' <Predicate = (!icmp_ln80 & !icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln14 = sext i9 %add_ln14" [src/utils.cpp:14]   --->   Operation 36 'sext' 'sext_ln14' <Predicate = (!icmp_ln80 & !icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (3.25ns)   --->   "%retVal_15 = lshr i32 %zext_ln14, i32 %sext_ln14" [src/utils.cpp:14]   --->   Operation 37 'lshr' 'retVal_15' <Predicate = (!icmp_ln80 & !icmp_ln13)> <Delay = 3.25> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%retVal_16 = trunc i32 %retVal_15" [src/utils.cpp:11]   --->   Operation 38 'trunc' 'retVal_16' <Predicate = (!icmp_ln80 & !icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.91ns)   --->   "%add_ln16 = add i8 %state_bstate_n_bits_held_0_load_1, i8 255" [src/utils.cpp:16]   --->   Operation 39 'add' 'add_ln16' <Predicate = (!icmp_ln80 & !icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.70ns)   --->   "%store_ln17 = store i8 %add_ln16, i8 %state_bstate_n_bits_held_0" [src/utils.cpp:17]   --->   Operation 40 'store' 'store_ln17' <Predicate = (!icmp_ln80 & !icmp_ln13)> <Delay = 1.70>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0_load = load i32 %state_bstate_currIdx_0" [src/utils.cpp:6]   --->   Operation 41 'load' 'state_bstate_currIdx_0_load' <Predicate = (!icmp_ln80 & icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln5 = zext i32 %state_bstate_currIdx_0_load" [src/utils.cpp:5]   --->   Operation 42 'zext' 'zext_ln5' <Predicate = (!icmp_ln80 & icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%bStream_addr = getelementptr i8 %bStream, i64 0, i64 %zext_ln5" [src/utils.cpp:5]   --->   Operation 43 'getelementptr' 'bStream_addr' <Predicate = (!icmp_ln80 & icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (2.32ns)   --->   "%retVal_17 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 44 'load' 'retVal_17' <Predicate = (!icmp_ln80 & icmp_ln13)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>
ST_2 : Operation 45 [1/1] (2.55ns)   --->   "%add_ln6 = add i32 %state_bstate_currIdx_0_load, i32 1" [src/utils.cpp:6]   --->   Operation 45 'add' 'add_ln6' <Predicate = (!icmp_ln80 & icmp_ln13)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln46 = store i32 %add_ln6, i32 %state_bstate_currIdx_0" [src/utils.cpp:46]   --->   Operation 46 'store' 'store_ln46' <Predicate = (!icmp_ln80 & icmp_ln13)> <Delay = 1.58>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%symbolVal_write_assign_load_1 = load i32 %symbolVal_write_assign" [src/deBin.cpp:89]   --->   Operation 47 'load' 'symbolVal_write_assign_load_1' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%state_ivlOffset_0_load_1 = load i32 %state_ivlOffset_0" [src/deBin.cpp:89]   --->   Operation 48 'load' 'state_ivlOffset_0_load_1' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_0_load = load i8 %state_bstate_n_bits_held_0" [src/deBin.cpp:89]   --->   Operation 49 'load' 'state_bstate_n_bits_held_0_load' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_0_load_1 = load i8 %state_bstate_held_aligned_word_0" [src/deBin.cpp:89]   --->   Operation 50 'load' 'state_bstate_held_aligned_word_0_load_1' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_0_load_1 = load i32 %state_bstate_currIdx_0" [src/deBin.cpp:89]   --->   Operation 51 'load' 'state_bstate_currIdx_0_load_1' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%mrv = insertvalue i112 <undef>, i32 %state_ivlOffset_0_load_1" [src/deBin.cpp:89]   --->   Operation 52 'insertvalue' 'mrv' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i112 %mrv, i32 %state_bstate_currIdx_0_load_1" [src/deBin.cpp:89]   --->   Operation 53 'insertvalue' 'mrv_1' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i112 %mrv_1, i8 %state_bstate_n_bits_held_0_load" [src/deBin.cpp:89]   --->   Operation 54 'insertvalue' 'mrv_2' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i112 %mrv_2, i8 %state_bstate_held_aligned_word_0_load_1" [src/deBin.cpp:89]   --->   Operation 55 'insertvalue' 'mrv_3' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i112 %mrv_3, i32 %symbolVal_write_assign_load_1" [src/deBin.cpp:89]   --->   Operation 56 'insertvalue' 'mrv_4' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%ret_ln89 = ret i112 %mrv_4" [src/deBin.cpp:89]   --->   Operation 57 'ret' 'ret_ln89' <Predicate = (icmp_ln80)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.91>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i1 %retVal_16" [src/utils.cpp:11]   --->   Operation 58 'zext' 'zext_ln11' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (1.58ns)   --->   "%br_ln17 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i.i" [src/utils.cpp:17]   --->   Operation 59 'br' 'br_ln17' <Predicate = (!icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 60 [1/2] (2.32ns)   --->   "%retVal_17 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 60 'load' 'retVal_17' <Predicate = (icmp_ln13)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %retVal_17, i32 7" [src/utils.cpp:42]   --->   Operation 61 'bitselect' 'tmp' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i1 %tmp" [src/utils.cpp:42]   --->   Operation 62 'zext' 'zext_ln42' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%retVal = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 0, i8 %zext_ln42" [src/utils.cpp:42]   --->   Operation 63 'bitconcatenate' 'retVal' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (1.58ns)   --->   "%store_ln46 = store i8 %retVal_17, i8 %state_bstate_held_aligned_word_0" [src/utils.cpp:46]   --->   Operation 64 'store' 'store_ln46' <Predicate = (icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 65 [1/1] (1.70ns)   --->   "%store_ln46 = store i8 7, i8 %state_bstate_n_bits_held_0" [src/utils.cpp:46]   --->   Operation 65 'store' 'store_ln46' <Predicate = (icmp_ln13)> <Delay = 1.70>
ST_3 : Operation 66 [1/1] (1.58ns)   --->   "%br_ln46 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i.i" [src/utils.cpp:46]   --->   Operation 66 'br' 'br_ln46' <Predicate = (icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 67 [1/1] (1.58ns)   --->   "%store_ln83 = store i2 %add_ln83, i2 %binIdx" [src/deBin.cpp:83]   --->   Operation 67 'store' 'store_ln83' <Predicate = true> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.02>
ST_4 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%val = phi i9 %retVal, void %._crit_edge3, i9 %zext_ln11, void"   --->   Operation 68 'phi' 'val' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%symbolVal_write_assign_load = load i32 %symbolVal_write_assign" [src/deBin.cpp:82]   --->   Operation 69 'load' 'symbolVal_write_assign_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%state_ivlOffset_0_load = load i32 %state_ivlOffset_0"   --->   Operation 70 'load' 'state_ivlOffset_0_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%trunc_ln1543 = trunc i32 %state_ivlOffset_0_load"   --->   Operation 71 'trunc' 'trunc_ln1543' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%shl_ln = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %trunc_ln1543, i1 0"   --->   Operation 72 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln1543 = or i9 %shl_ln, i9 %val"   --->   Operation 73 'or' 'or_ln1543' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_s = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %state_ivlOffset_0_load, i32 8, i32 30"   --->   Operation 74 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%ret = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %tmp_s, i9 %or_ln1543"   --->   Operation 75 'bitconcatenate' 'ret' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (2.47ns)   --->   "%icmp_ln1076 = icmp_ult  i32 %ret, i32 %baeState_0_constprop_load"   --->   Operation 76 'icmp' 'icmp_ln1076' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (2.55ns)   --->   "%sub_ln229 = sub i32 %ret, i32 %baeState_0_constprop_load"   --->   Operation 77 'sub' 'sub_ln229' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.69ns)   --->   "%ret_7 = select i1 %icmp_ln1076, i32 %ret, i32 %sub_ln229" [src/arith_dec.cpp:76]   --->   Operation 78 'select' 'ret_7' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.97ns)   --->   "%binVal = xor i1 %icmp_ln1076, i1 1" [src/arith_dec.cpp:76]   --->   Operation 79 'xor' 'binVal' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln82 = trunc i32 %symbolVal_write_assign_load" [src/deBin.cpp:82]   --->   Operation 80 'trunc' 'trunc_ln82' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %trunc_ln82, i1 %binVal" [src/deBin.cpp:82]   --->   Operation 81 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (1.58ns)   --->   "%store_ln76 = store i32 %ret_7, i32 %state_ivlOffset_0" [src/arith_dec.cpp:76]   --->   Operation 82 'store' 'store_ln76' <Predicate = true> <Delay = 1.58>
ST_4 : Operation 83 [1/1] (1.58ns)   --->   "%store_ln82 = store i32 %or_ln, i32 %symbolVal_write_assign" [src/deBin.cpp:82]   --->   Operation 83 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 84 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.71ns
The critical path consists of the following:
	'alloca' operation ('state.bstate.n_bits_held') [10]  (0 ns)
	'store' operation ('store_ln80', src/deBin.cpp:80) of variable 'state.bstate.n_bits_held', src/deBin.cpp:74 on local variable 'state.bstate.n_bits_held' [20]  (1.71 ns)

 <State 2>: 5.17ns
The critical path consists of the following:
	'load' operation ('state_bstate_n_bits_held_0_load_1', src/utils.cpp:13) on local variable 'state.bstate.n_bits_held' [32]  (0 ns)
	'add' operation ('add_ln14', src/utils.cpp:14) [40]  (1.92 ns)
	'lshr' operation ('retVal', src/utils.cpp:14) [42]  (3.25 ns)

 <State 3>: 3.91ns
The critical path consists of the following:
	'load' operation ('retVal', src/utils.cpp:5) on array 'bStream' [52]  (2.32 ns)
	'store' operation ('store_ln46', src/utils.cpp:46) of variable 'retVal', src/utils.cpp:5 on local variable 'state.bstate.held_aligned_word' [58]  (1.59 ns)

 <State 4>: 6.03ns
The critical path consists of the following:
	'phi' operation ('retVal') with incoming values : ('zext_ln11', src/utils.cpp:11) ('retVal', src/utils.cpp:42) [62]  (0 ns)
	'or' operation ('or_ln1543') [67]  (0.99 ns)
	'icmp' operation ('icmp_ln1076') [70]  (2.47 ns)
	'xor' operation ('binVal', src/arith_dec.cpp:76) [73]  (0.978 ns)
	'store' operation ('store_ln82', src/deBin.cpp:82) of variable 'or_ln', src/deBin.cpp:82 on local variable 'symbolVal' [77]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
