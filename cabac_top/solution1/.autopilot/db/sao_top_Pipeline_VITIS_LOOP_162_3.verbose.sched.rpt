

================================================================
== Vitis HLS Report for 'sao_top_Pipeline_VITIS_LOOP_162_3'
================================================================
* Date:           Sun May  7 10:30:14 2023

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        cabac_top
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.763 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        9|        9|  90.000 ns|  90.000 ns|    9|    9|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_162_3  |        7|        7|         4|          1|          1|     4|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.05>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i_3 = alloca i32 1"   --->   Operation 7 'alloca' 'i_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%aligned_word = alloca i32 1"   --->   Operation 8 'alloca' 'aligned_word' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%aligned_word_4 = alloca i32 1"   --->   Operation 9 'alloca' 'aligned_word_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_8 = alloca i32 1"   --->   Operation 10 'alloca' 'state_bstate_currIdx_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%ret = alloca i32 1"   --->   Operation 11 'alloca' 'ret' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 12 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%ret_4 = alloca i32 1"   --->   Operation 13 'alloca' 'ret_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_8 = alloca i32 1"   --->   Operation 14 'alloca' 'state_bstate_n_bits_held_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%baeState_0_constprop_load_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %baeState_0_constprop_load"   --->   Operation 15 'read' 'baeState_0_constprop_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln188_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %zext_ln188"   --->   Operation 16 'read' 'zext_ln188_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%state_ivlOffset_5_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %state_ivlOffset_5"   --->   Operation 17 'read' 'state_ivlOffset_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%state_bstate_held_aligned_word_5_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_held_aligned_word_5"   --->   Operation 18 'read' 'state_bstate_held_aligned_word_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_5_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %state_bstate_n_bits_held_5"   --->   Operation 19 'read' 'state_bstate_n_bits_held_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_5_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %state_bstate_currIdx_5"   --->   Operation 20 'read' 'state_bstate_currIdx_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %state_bstate_n_bits_held_5_read, i8 %state_bstate_n_bits_held_8"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %state_ivlOffset_5_read, i32 %ret_4"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (1.70ns)   --->   "%store_ln0 = store i8 %state_bstate_n_bits_held_5_read, i8 %empty"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %state_ivlOffset_5_read, i32 %ret"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %state_bstate_currIdx_5_read, i32 %state_bstate_currIdx_8"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %state_bstate_held_aligned_word_5_read, i8 %aligned_word_4"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %state_bstate_held_aligned_word_5_read, i8 %aligned_word"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %i_3"   --->   Operation 28 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader16"   --->   Operation 29 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%i = load i3 %i_3" [src/deBin.cpp:162]   --->   Operation 30 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.13ns)   --->   "%icmp_ln162 = icmp_eq  i3 %i, i3 4" [src/deBin.cpp:162]   --->   Operation 31 'icmp' 'icmp_ln162' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.65ns)   --->   "%add_ln162 = add i3 %i, i3 1" [src/deBin.cpp:162]   --->   Operation 32 'add' 'add_ln162' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln162 = br i1 %icmp_ln162, void %.split12, void %.preheader17.preheader.exitStub" [src/deBin.cpp:162]   --->   Operation 33 'br' 'br_ln162' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln163 = zext i3 %i" [src/deBin.cpp:163]   --->   Operation 34 'zext' 'zext_ln163' <Predicate = (!icmp_ln162)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.73ns)   --->   "%add_ln163 = add i4 %zext_ln188_read, i4 %zext_ln163" [src/deBin.cpp:163]   --->   Operation 35 'add' 'add_ln163' <Predicate = (!icmp_ln162)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln163_1 = zext i4 %add_ln163" [src/deBin.cpp:163]   --->   Operation 36 'zext' 'zext_ln163_1' <Predicate = (!icmp_ln162)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%sao_offset_abs_addr = getelementptr i8 %sao_offset_abs, i64 0, i64 %zext_ln163_1" [src/deBin.cpp:163]   --->   Operation 37 'getelementptr' 'sao_offset_abs_addr' <Predicate = (!icmp_ln162)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%sao_offset_sign_addr = getelementptr i1 %sao_offset_sign, i64 0, i64 %zext_ln163_1" [src/deBin.cpp:165]   --->   Operation 38 'getelementptr' 'sao_offset_sign_addr' <Predicate = (!icmp_ln162)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (2.32ns)   --->   "%sao_offset_abs_load = load i4 %sao_offset_abs_addr" [src/deBin.cpp:163]   --->   Operation 39 'load' 'sao_offset_abs_load' <Predicate = (!icmp_ln162)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 12> <RAM>
ST_1 : Operation 40 [1/1] (1.58ns)   --->   "%store_ln162 = store i3 %add_ln162, i3 %i_3" [src/deBin.cpp:162]   --->   Operation 40 'store' 'store_ln162' <Predicate = (!icmp_ln162)> <Delay = 1.58>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader16"   --->   Operation 41 'br' 'br_ln0' <Predicate = (!icmp_ln162)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.58>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln162 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [src/deBin.cpp:162]   --->   Operation 42 'specloopname' 'specloopname_ln162' <Predicate = (!icmp_ln162)> <Delay = 0.00>
ST_2 : Operation 43 [1/2] (2.32ns)   --->   "%sao_offset_abs_load = load i4 %sao_offset_abs_addr" [src/deBin.cpp:163]   --->   Operation 43 'load' 'sao_offset_abs_load' <Predicate = (!icmp_ln162)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 12> <RAM>
ST_2 : Operation 44 [1/1] (1.55ns)   --->   "%icmp_ln163 = icmp_eq  i8 %sao_offset_abs_load, i8 0" [src/deBin.cpp:163]   --->   Operation 44 'icmp' 'icmp_ln163' <Predicate = (!icmp_ln162)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln163 = br i1 %icmp_ln163, void, void %.split12._crit_edge" [src/deBin.cpp:163]   --->   Operation 45 'br' 'br_ln163' <Predicate = (!icmp_ln162)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%p_load15 = load i8 %empty" [src/utils.cpp:13]   --->   Operation 46 'load' 'p_load15' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp_eq  i8 %p_load15, i8 0" [src/utils.cpp:13]   --->   Operation 47 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void, void %._crit_edge21" [src/utils.cpp:13]   --->   Operation 48 'br' 'br_ln13' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (1.91ns)   --->   "%add_ln16 = add i8 %p_load15, i8 255" [src/utils.cpp:16]   --->   Operation 49 'add' 'add_ln16' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.70ns)   --->   "%store_ln17 = store i8 %add_ln16, i8 %empty" [src/utils.cpp:17]   --->   Operation 50 'store' 'store_ln17' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 1.70>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_8_load = load i32 %state_bstate_currIdx_8" [src/utils.cpp:6]   --->   Operation 51 'load' 'state_bstate_currIdx_8_load' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln5 = zext i32 %state_bstate_currIdx_8_load" [src/utils.cpp:5]   --->   Operation 52 'zext' 'zext_ln5' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%bStream_addr = getelementptr i8 %bStream, i64 0, i64 %zext_ln5" [src/utils.cpp:5]   --->   Operation 53 'getelementptr' 'bStream_addr' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 54 [2/2] (2.32ns)   --->   "%retVal_9 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 54 'load' 'retVal_9' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>
ST_2 : Operation 55 [1/1] (2.55ns)   --->   "%add_ln6 = add i32 %state_bstate_currIdx_8_load, i32 1" [src/utils.cpp:6]   --->   Operation 55 'add' 'add_ln6' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.70ns)   --->   "%store_ln46 = store i8 7, i8 %empty" [src/utils.cpp:46]   --->   Operation 56 'store' 'store_ln46' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 1.70>
ST_2 : Operation 57 [1/1] (1.58ns)   --->   "%store_ln46 = store i32 %add_ln6, i32 %state_bstate_currIdx_8" [src/utils.cpp:46]   --->   Operation 57 'store' 'store_ln46' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 5.16>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%aligned_word_load_2 = load i8 %aligned_word" [src/utils.cpp:14]   --->   Operation 58 'load' 'aligned_word_load_2' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %p_load15" [src/utils.cpp:13]   --->   Operation 59 'zext' 'zext_ln13' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i8 %aligned_word_load_2" [src/utils.cpp:14]   --->   Operation 60 'zext' 'zext_ln14' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (1.91ns)   --->   "%add_ln14 = add i9 %zext_ln13, i9 511" [src/utils.cpp:14]   --->   Operation 61 'add' 'add_ln14' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%sext_ln14 = sext i9 %add_ln14" [src/utils.cpp:14]   --->   Operation 62 'sext' 'sext_ln14' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (3.25ns)   --->   "%retVal = lshr i32 %zext_ln14, i32 %sext_ln14" [src/utils.cpp:14]   --->   Operation 63 'lshr' 'retVal' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 3.25> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%retVal_8 = trunc i32 %retVal" [src/utils.cpp:11]   --->   Operation 64 'trunc' 'retVal_8' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i1 %retVal_8" [src/utils.cpp:11]   --->   Operation 65 'zext' 'zext_ln11' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (1.58ns)   --->   "%br_ln17 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i.i.i70" [src/utils.cpp:17]   --->   Operation 66 'br' 'br_ln17' <Predicate = (!icmp_ln162 & !icmp_ln163 & !icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 67 [1/2] (2.32ns)   --->   "%retVal_9 = load i3 %bStream_addr" [src/utils.cpp:5]   --->   Operation 67 'load' 'retVal_9' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 7> <RAM>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %retVal_9, i32 7" [src/utils.cpp:42]   --->   Operation 68 'bitselect' 'tmp' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i1 %tmp" [src/utils.cpp:42]   --->   Operation 69 'zext' 'zext_ln42' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%retVal_4 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 0, i8 %zext_ln42" [src/utils.cpp:42]   --->   Operation 70 'bitconcatenate' 'retVal_4' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (1.58ns)   --->   "%store_ln46 = store i8 %retVal_9, i8 %aligned_word_4" [src/utils.cpp:46]   --->   Operation 71 'store' 'store_ln46' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 72 [1/1] (1.58ns)   --->   "%store_ln46 = store i8 %retVal_9, i8 %aligned_word" [src/utils.cpp:46]   --->   Operation 72 'store' 'store_ln46' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 73 [1/1] (1.58ns)   --->   "%br_ln46 = br void %_Z19bitStream_read_bitsPVhhR10_bstream_t.30.exit.i.i.i70" [src/utils.cpp:46]   --->   Operation 73 'br' 'br_ln46' <Predicate = (!icmp_ln162 & !icmp_ln163 & icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%p_load16 = load i8 %empty" [src/deBin.cpp:166]   --->   Operation 74 'load' 'p_load16' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (1.58ns)   --->   "%store_ln166 = store i8 %p_load16, i8 %state_bstate_n_bits_held_8" [src/deBin.cpp:166]   --->   Operation 75 'store' 'store_ln166' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.76>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%ret_load = load i32 %ret"   --->   Operation 76 'load' 'ret_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%empty_46 = trunc i32 %ret_load"   --->   Operation 77 'trunc' 'empty_46' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 78 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%empty_47 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 79 'speclooptripcount' 'empty_47' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%val = phi i9 %retVal_4, void %._crit_edge21, i9 %zext_ln11, void"   --->   Operation 80 'phi' 'val' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%trunc_ln1543 = trunc i32 %ret_load"   --->   Operation 81 'trunc' 'trunc_ln1543' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node or_ln1543)   --->   "%shl_ln1543_2 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %trunc_ln1543, i1 0"   --->   Operation 82 'bitconcatenate' 'shl_ln1543_2' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln1543 = or i9 %shl_ln1543_2, i9 %val"   --->   Operation 83 'or' 'or_ln1543' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_s = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %ret_load, i32 8, i32 30"   --->   Operation 84 'partselect' 'tmp_s' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%ret_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %tmp_s, i9 %or_ln1543"   --->   Operation 85 'bitconcatenate' 'ret_2' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (2.47ns)   --->   "%icmp_ln1076 = icmp_ult  i32 %ret_2, i32 %baeState_0_constprop_load_read"   --->   Operation 86 'icmp' 'icmp_ln1076' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (2.55ns)   --->   "%sub_ln229 = sub i32 %ret_2, i32 %baeState_0_constprop_load_read"   --->   Operation 87 'sub' 'sub_ln229' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (0.69ns)   --->   "%ret_5 = select i1 %icmp_ln1076, i32 %ret_2, i32 %sub_ln229" [src/arith_dec.cpp:76]   --->   Operation 88 'select' 'ret_5' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.97ns)   --->   "%binVal = xor i1 %icmp_ln1076, i1 1" [src/arith_dec.cpp:76]   --->   Operation 89 'xor' 'binVal' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (2.32ns)   --->   "%store_ln165 = store i1 %binVal, i4 %sao_offset_sign_addr" [src/deBin.cpp:165]   --->   Operation 90 'store' 'store_ln165' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_4 : Operation 91 [1/1] (1.58ns)   --->   "%store_ln166 = store i32 %ret_5, i32 %ret_4" [src/deBin.cpp:166]   --->   Operation 91 'store' 'store_ln166' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 1.58>
ST_4 : Operation 92 [1/1] (1.58ns)   --->   "%store_ln166 = store i32 %ret_5, i32 %ret" [src/deBin.cpp:166]   --->   Operation 92 'store' 'store_ln166' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 1.58>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln166 = br void %.split12._crit_edge" [src/deBin.cpp:166]   --->   Operation 93 'br' 'br_ln166' <Predicate = (!icmp_ln162 & !icmp_ln163)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%aligned_word_load = load i8 %aligned_word"   --->   Operation 94 'load' 'aligned_word_load' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%aligned_word_4_load = load i8 %aligned_word_4"   --->   Operation 95 'load' 'aligned_word_4_load' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%state_bstate_currIdx_8_load_1 = load i32 %state_bstate_currIdx_8"   --->   Operation 96 'load' 'state_bstate_currIdx_8_load_1' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%p_load14 = load i8 %empty"   --->   Operation 97 'load' 'p_load14' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%ret_4_load = load i32 %ret_4"   --->   Operation 98 'load' 'ret_4_load' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%state_bstate_n_bits_held_8_load = load i8 %state_bstate_n_bits_held_8"   --->   Operation 99 'load' 'state_bstate_n_bits_held_8_load' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %state_bstate_currIdx_8_out, i32 %state_bstate_currIdx_8_load_1"   --->   Operation 100 'write' 'write_ln0' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %state_bstate_n_bits_held_8_out, i8 %state_bstate_n_bits_held_8_load"   --->   Operation 101 'write' 'write_ln0' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %state_bstate_held_aligned_word_8_out, i8 %aligned_word_4_load"   --->   Operation 102 'write' 'write_ln0' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %state_ivlOffset_6_out, i32 %ret_4_load"   --->   Operation 103 'write' 'write_ln0' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %p_out, i8 %aligned_word_load"   --->   Operation 104 'write' 'write_ln0' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %p_out1, i8 %p_load14"   --->   Operation 105 'write' 'write_ln0' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%write_ln1543 = write void @_ssdm_op_Write.ap_auto.i31P0A, i31 %p_out2, i31 %empty_46"   --->   Operation 106 'write' 'write_ln1543' <Predicate = (icmp_ln162)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 107 'ret' 'ret_ln0' <Predicate = (icmp_ln162)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.06ns
The critical path consists of the following:
	'alloca' operation ('i') [17]  (0 ns)
	'load' operation ('i', src/deBin.cpp:162) on local variable 'i' [41]  (0 ns)
	'add' operation ('add_ln163', src/deBin.cpp:163) [51]  (1.74 ns)
	'getelementptr' operation ('sao_offset_abs_addr', src/deBin.cpp:163) [53]  (0 ns)
	'load' operation ('sao_offset_abs_load', src/deBin.cpp:163) on array 'sao_offset_abs' [56]  (2.32 ns)

 <State 2>: 5.58ns
The critical path consists of the following:
	'load' operation ('state_bstate_currIdx_8_load', src/utils.cpp:6) on local variable 'state_bstate_currIdx_8' [76]  (0 ns)
	'add' operation ('add_ln6', src/utils.cpp:6) [80]  (2.55 ns)
	'store' operation ('store_ln46', src/utils.cpp:46) of variable 'add_ln6', src/utils.cpp:6 on local variable 'state_bstate_currIdx_8' [85]  (1.59 ns)
	blocking operation 1.44 ns on control path)

 <State 3>: 5.17ns
The critical path consists of the following:
	'add' operation ('add_ln14', src/utils.cpp:14) [67]  (1.92 ns)
	'lshr' operation ('retVal', src/utils.cpp:14) [69]  (3.25 ns)

 <State 4>: 6.76ns
The critical path consists of the following:
	'load' operation ('ret_load') on local variable 'ret' [42]  (0 ns)
	'or' operation ('or_ln1543') [94]  (0.99 ns)
	'icmp' operation ('icmp_ln1076') [97]  (2.47 ns)
	'xor' operation ('binVal', src/arith_dec.cpp:76) [100]  (0.978 ns)
	'store' operation ('store_ln165', src/deBin.cpp:165) of variable 'binVal', src/arith_dec.cpp:76 on array 'sao_offset_sign' [101]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
