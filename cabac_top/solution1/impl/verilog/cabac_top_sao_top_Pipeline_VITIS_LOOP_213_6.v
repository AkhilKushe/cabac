// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cabac_top_sao_top_Pipeline_VITIS_LOOP_213_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_SaoTypeIdx_5,
        out_SaoTypeIdx33_5,
        out_SaoTypeIdx34_5,
        out_SaoEOClass35_5,
        out_SaoEOClass36_5,
        out_sao_band_position_5,
        out_SaoEOClass_5,
        out_sao_band_position37_5,
        out_sao_band_position38_5,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read48,
        p_read49,
        p_read50,
        p_read45,
        p_read46,
        p_read47,
        out_SaoOffsetVal_address0,
        out_SaoOffsetVal_ce0,
        out_SaoOffsetVal_we0,
        out_SaoOffsetVal_d0,
        out_SaoOffsetVal_address1,
        out_SaoOffsetVal_ce1,
        out_SaoOffsetVal_we1,
        out_SaoOffsetVal_d1,
        p_read27,
        p_read28,
        p_read29,
        out_SaoTypeIdx_6_out,
        out_SaoTypeIdx_6_out_ap_vld,
        out_SaoTypeIdx33_6_out,
        out_SaoTypeIdx33_6_out_ap_vld,
        out_SaoTypeIdx34_6_out,
        out_SaoTypeIdx34_6_out_ap_vld,
        out_SaoEOClass35_6_out,
        out_SaoEOClass35_6_out_ap_vld,
        out_SaoEOClass36_6_out,
        out_SaoEOClass36_6_out_ap_vld,
        out_sao_band_position_6_out,
        out_sao_band_position_6_out_ap_vld,
        out_SaoEOClass_6_out,
        out_SaoEOClass_6_out_ap_vld,
        out_sao_band_position37_6_out,
        out_sao_band_position37_6_out_ap_vld,
        out_sao_band_position38_6_out,
        out_sao_band_position38_6_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] out_SaoTypeIdx_5;
input  [7:0] out_SaoTypeIdx33_5;
input  [7:0] out_SaoTypeIdx34_5;
input  [7:0] out_SaoEOClass35_5;
input  [7:0] out_SaoEOClass36_5;
input  [7:0] out_sao_band_position_5;
input  [7:0] out_SaoEOClass_5;
input  [7:0] out_sao_band_position37_5;
input  [7:0] out_sao_band_position38_5;
input  [15:0] p_read30;
input  [15:0] p_read31;
input  [15:0] p_read32;
input  [15:0] p_read33;
input  [15:0] p_read34;
input  [15:0] p_read35;
input  [15:0] p_read36;
input  [15:0] p_read37;
input  [15:0] p_read38;
input  [15:0] p_read39;
input  [15:0] p_read40;
input  [15:0] p_read41;
input  [15:0] p_read42;
input  [15:0] p_read43;
input  [15:0] p_read44;
input  [7:0] p_read48;
input  [7:0] p_read49;
input  [7:0] p_read50;
input  [7:0] p_read45;
input  [7:0] p_read46;
input  [7:0] p_read47;
output  [3:0] out_SaoOffsetVal_address0;
output   out_SaoOffsetVal_ce0;
output   out_SaoOffsetVal_we0;
output  [15:0] out_SaoOffsetVal_d0;
output  [3:0] out_SaoOffsetVal_address1;
output   out_SaoOffsetVal_ce1;
output   out_SaoOffsetVal_we1;
output  [15:0] out_SaoOffsetVal_d1;
input  [7:0] p_read27;
input  [7:0] p_read28;
input  [7:0] p_read29;
output  [7:0] out_SaoTypeIdx_6_out;
output   out_SaoTypeIdx_6_out_ap_vld;
output  [7:0] out_SaoTypeIdx33_6_out;
output   out_SaoTypeIdx33_6_out_ap_vld;
output  [7:0] out_SaoTypeIdx34_6_out;
output   out_SaoTypeIdx34_6_out_ap_vld;
output  [7:0] out_SaoEOClass35_6_out;
output   out_SaoEOClass35_6_out_ap_vld;
output  [7:0] out_SaoEOClass36_6_out;
output   out_SaoEOClass36_6_out_ap_vld;
output  [7:0] out_sao_band_position_6_out;
output   out_sao_band_position_6_out_ap_vld;
output  [7:0] out_SaoEOClass_6_out;
output   out_SaoEOClass_6_out_ap_vld;
output  [7:0] out_sao_band_position37_6_out;
output   out_sao_band_position37_6_out_ap_vld;
output  [7:0] out_sao_band_position38_6_out;
output   out_sao_band_position38_6_out_ap_vld;

reg ap_idle;
reg[3:0] out_SaoOffsetVal_address0;
reg out_SaoOffsetVal_ce0;
reg out_SaoOffsetVal_we0;
reg[15:0] out_SaoOffsetVal_d0;
reg[3:0] out_SaoOffsetVal_address1;
reg out_SaoOffsetVal_ce1;
reg out_SaoOffsetVal_we1;
reg[15:0] out_SaoOffsetVal_d1;
reg out_SaoTypeIdx_6_out_ap_vld;
reg out_SaoTypeIdx33_6_out_ap_vld;
reg out_SaoTypeIdx34_6_out_ap_vld;
reg out_SaoEOClass35_6_out_ap_vld;
reg out_SaoEOClass36_6_out_ap_vld;
reg out_sao_band_position_6_out_ap_vld;
reg out_SaoEOClass_6_out_ap_vld;
reg out_sao_band_position37_6_out_ap_vld;
reg out_sao_band_position38_6_out_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln213_fu_535_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [1:0] i_1_reg_855;
wire   [1:0] add_ln213_fu_541_p2;
reg   [1:0] add_ln213_reg_862;
wire   [3:0] add_ln216_fu_559_p2;
reg   [3:0] add_ln216_reg_867;
wire   [7:0] tmp_3_fu_581_p5;
reg   [7:0] tmp_3_reg_874;
wire   [7:0] tmp_s_fu_593_p5;
reg   [7:0] tmp_s_reg_881;
wire   [15:0] tmp_5_fu_631_p5;
reg   [15:0] tmp_5_reg_888;
wire   [15:0] tmp_6_fu_643_p5;
reg   [15:0] tmp_6_reg_893;
wire   [15:0] tmp_7_fu_655_p5;
reg   [15:0] tmp_7_reg_898;
wire   [7:0] tmp_8_fu_667_p5;
reg   [7:0] tmp_8_reg_903;
wire   [63:0] zext_ln216_1_fu_565_p1;
wire   [63:0] zext_ln217_fu_576_p1;
wire   [63:0] zext_ln218_fu_684_p1;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln219_fu_694_p1;
wire   [63:0] zext_ln220_fu_704_p1;
reg   [1:0] i_fu_132;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i_1;
reg   [7:0] out_sao_band_position38_6_fu_136;
reg   [7:0] out_sao_band_position37_6_fu_140;
reg   [7:0] out_SaoEOClass_6_fu_144;
reg   [7:0] out_sao_band_position_6_fu_148;
reg   [7:0] out_SaoEOClass36_6_fu_152;
reg   [7:0] out_SaoEOClass35_6_fu_156;
reg   [7:0] out_SaoTypeIdx34_6_fu_160;
reg   [7:0] out_SaoTypeIdx33_6_fu_164;
reg   [7:0] out_SaoTypeIdx_6_fu_168;
wire   [15:0] tmp_2_fu_605_p5;
wire   [15:0] tmp_4_fu_618_p5;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [3:0] tmp_1_fu_551_p3;
wire   [3:0] zext_ln216_fu_547_p1;
wire   [3:0] add_ln217_fu_570_p2;
wire   [3:0] add_ln218_fu_679_p2;
wire   [3:0] add_ln219_fu_689_p2;
wire   [3:0] add_ln220_fu_699_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_done_reg = 1'b0;
end

cabac_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U154(
    .din0(p_read27),
    .din1(p_read28),
    .din2(p_read29),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_3_fu_581_p5)
);

cabac_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U155(
    .din0(p_read45),
    .din1(p_read46),
    .din2(p_read47),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_s_fu_593_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U156(
    .din0(p_read30),
    .din1(p_read31),
    .din2(p_read32),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_2_fu_605_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U157(
    .din0(p_read33),
    .din1(p_read34),
    .din2(p_read35),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_4_fu_618_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U158(
    .din0(p_read36),
    .din1(p_read37),
    .din2(p_read38),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_5_fu_631_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U159(
    .din0(p_read39),
    .din1(p_read40),
    .din2(p_read41),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_6_fu_643_p5)
);

cabac_top_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U160(
    .din0(p_read42),
    .din1(p_read43),
    .din2(p_read44),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_7_fu_655_p5)
);

cabac_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U161(
    .din0(p_read48),
    .din1(p_read49),
    .din2(p_read50),
    .din3(ap_sig_allocacmp_i_1),
    .dout(tmp_8_fu_667_p5)
);

cabac_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        i_fu_132 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_fu_132 <= add_ln213_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_SaoEOClass35_6_fu_156 <= out_SaoEOClass35_5;
    end else if (((1'b1 == ap_CS_fsm_state3) & (i_1_reg_855 == 2'd1))) begin
        out_SaoEOClass35_6_fu_156 <= tmp_s_reg_881;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_SaoEOClass36_6_fu_152 <= out_SaoEOClass36_5;
    end else if ((~(i_1_reg_855 == 2'd1) & ~(i_1_reg_855 == 2'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_SaoEOClass36_6_fu_152 <= tmp_s_reg_881;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_SaoEOClass_6_fu_144 <= out_SaoEOClass_5;
    end else if (((1'b1 == ap_CS_fsm_state3) & (i_1_reg_855 == 2'd0))) begin
        out_SaoEOClass_6_fu_144 <= tmp_s_reg_881;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_SaoTypeIdx33_6_fu_164 <= out_SaoTypeIdx33_5;
    end else if (((1'b1 == ap_CS_fsm_state3) & (i_1_reg_855 == 2'd1))) begin
        out_SaoTypeIdx33_6_fu_164 <= tmp_3_reg_874;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_SaoTypeIdx34_6_fu_160 <= out_SaoTypeIdx34_5;
    end else if ((~(i_1_reg_855 == 2'd1) & ~(i_1_reg_855 == 2'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_SaoTypeIdx34_6_fu_160 <= tmp_3_reg_874;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_SaoTypeIdx_6_fu_168 <= out_SaoTypeIdx_5;
    end else if (((1'b1 == ap_CS_fsm_state3) & (i_1_reg_855 == 2'd0))) begin
        out_SaoTypeIdx_6_fu_168 <= tmp_3_reg_874;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_sao_band_position37_6_fu_140 <= out_sao_band_position37_5;
    end else if (((1'b1 == ap_CS_fsm_state3) & (i_1_reg_855 == 2'd1))) begin
        out_sao_band_position37_6_fu_140 <= tmp_8_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_sao_band_position38_6_fu_136 <= out_sao_band_position38_5;
    end else if ((~(i_1_reg_855 == 2'd1) & ~(i_1_reg_855 == 2'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_sao_band_position38_6_fu_136 <= tmp_8_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        out_sao_band_position_6_fu_148 <= out_sao_band_position_5;
    end else if (((1'b1 == ap_CS_fsm_state3) & (i_1_reg_855 == 2'd0))) begin
        out_sao_band_position_6_fu_148 <= tmp_8_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln213_reg_862 <= add_ln213_fu_541_p2;
        i_1_reg_855 <= ap_sig_allocacmp_i_1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln216_reg_867 <= add_ln216_fu_559_p2;
        tmp_3_reg_874 <= tmp_3_fu_581_p5;
        tmp_5_reg_888 <= tmp_5_fu_631_p5;
        tmp_6_reg_893 <= tmp_6_fu_643_p5;
        tmp_7_reg_898 <= tmp_7_fu_655_p5;
        tmp_8_reg_903 <= tmp_8_fu_667_p5;
        tmp_s_reg_881 <= tmp_s_fu_593_p5;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 2'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_132;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoEOClass35_6_out_ap_vld = 1'b1;
    end else begin
        out_SaoEOClass35_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoEOClass36_6_out_ap_vld = 1'b1;
    end else begin
        out_SaoEOClass36_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoEOClass_6_out_ap_vld = 1'b1;
    end else begin
        out_SaoEOClass_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_SaoOffsetVal_address0 = zext_ln220_fu_704_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_address0 = zext_ln219_fu_694_p1;
    end else if (((icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_address0 = zext_ln217_fu_576_p1;
    end else begin
        out_SaoOffsetVal_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_address1 = zext_ln218_fu_684_p1;
    end else if (((icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_address1 = zext_ln216_1_fu_565_p1;
    end else begin
        out_SaoOffsetVal_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_ce0 = 1'b1;
    end else begin
        out_SaoOffsetVal_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_ce1 = 1'b1;
    end else begin
        out_SaoOffsetVal_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_SaoOffsetVal_d0 = tmp_7_reg_898;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_d0 = tmp_6_reg_893;
    end else if (((icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_d0 = tmp_4_fu_618_p5;
    end else begin
        out_SaoOffsetVal_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_SaoOffsetVal_d1 = tmp_5_reg_888;
    end else if (((icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoOffsetVal_d1 = tmp_2_fu_605_p5;
    end else begin
        out_SaoOffsetVal_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_we0 = 1'b1;
    end else begin
        out_SaoOffsetVal_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_SaoOffsetVal_we1 = 1'b1;
    end else begin
        out_SaoOffsetVal_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoTypeIdx33_6_out_ap_vld = 1'b1;
    end else begin
        out_SaoTypeIdx33_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoTypeIdx34_6_out_ap_vld = 1'b1;
    end else begin
        out_SaoTypeIdx34_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_SaoTypeIdx_6_out_ap_vld = 1'b1;
    end else begin
        out_SaoTypeIdx_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_sao_band_position37_6_out_ap_vld = 1'b1;
    end else begin
        out_sao_band_position37_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_sao_band_position38_6_out_ap_vld = 1'b1;
    end else begin
        out_sao_band_position38_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_sao_band_position_6_out_ap_vld = 1'b1;
    end else begin
        out_sao_band_position_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (icmp_ln213_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln213_fu_541_p2 = (ap_sig_allocacmp_i_1 + 2'd1);

assign add_ln216_fu_559_p2 = (tmp_1_fu_551_p3 + zext_ln216_fu_547_p1);

assign add_ln217_fu_570_p2 = (add_ln216_fu_559_p2 + 4'd1);

assign add_ln218_fu_679_p2 = (add_ln216_reg_867 + 4'd2);

assign add_ln219_fu_689_p2 = (add_ln216_reg_867 + 4'd3);

assign add_ln220_fu_699_p2 = (add_ln216_reg_867 + 4'd4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln213_fu_535_p2 = ((ap_sig_allocacmp_i_1 == 2'd3) ? 1'b1 : 1'b0);

assign out_SaoEOClass35_6_out = out_SaoEOClass35_6_fu_156;

assign out_SaoEOClass36_6_out = out_SaoEOClass36_6_fu_152;

assign out_SaoEOClass_6_out = out_SaoEOClass_6_fu_144;

assign out_SaoTypeIdx33_6_out = out_SaoTypeIdx33_6_fu_164;

assign out_SaoTypeIdx34_6_out = out_SaoTypeIdx34_6_fu_160;

assign out_SaoTypeIdx_6_out = out_SaoTypeIdx_6_fu_168;

assign out_sao_band_position37_6_out = out_sao_band_position37_6_fu_140;

assign out_sao_band_position38_6_out = out_sao_band_position38_6_fu_136;

assign out_sao_band_position_6_out = out_sao_band_position_6_fu_148;

assign tmp_1_fu_551_p3 = {{ap_sig_allocacmp_i_1}, {2'd0}};

assign zext_ln216_1_fu_565_p1 = add_ln216_fu_559_p2;

assign zext_ln216_fu_547_p1 = ap_sig_allocacmp_i_1;

assign zext_ln217_fu_576_p1 = add_ln217_fu_570_p2;

assign zext_ln218_fu_684_p1 = add_ln218_fu_679_p2;

assign zext_ln219_fu_694_p1 = add_ln219_fu_689_p2;

assign zext_ln220_fu_704_p1 = add_ln220_fu_699_p2;

endmodule //cabac_top_sao_top_Pipeline_VITIS_LOOP_213_6
