-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cabac_top is
generic (
    C_M_AXI_CTX_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_CTX_ID_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_CTX_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTX_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_CTX_USER_VALUE : INTEGER := 0;
    C_M_AXI_CTX_PROT_VALUE : INTEGER := 0;
    C_M_AXI_CTX_CACHE_VALUE : INTEGER := 3 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_ctx_AWVALID : OUT STD_LOGIC;
    m_axi_ctx_AWREADY : IN STD_LOGIC;
    m_axi_ctx_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ADDR_WIDTH-1 downto 0);
    m_axi_ctx_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ctx_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_AWUSER_WIDTH-1 downto 0);
    m_axi_ctx_WVALID : OUT STD_LOGIC;
    m_axi_ctx_WREADY : IN STD_LOGIC;
    m_axi_ctx_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_DATA_WIDTH-1 downto 0);
    m_axi_ctx_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_DATA_WIDTH/8-1 downto 0);
    m_axi_ctx_WLAST : OUT STD_LOGIC;
    m_axi_ctx_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_WUSER_WIDTH-1 downto 0);
    m_axi_ctx_ARVALID : OUT STD_LOGIC;
    m_axi_ctx_ARREADY : IN STD_LOGIC;
    m_axi_ctx_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ADDR_WIDTH-1 downto 0);
    m_axi_ctx_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ctx_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ctx_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ctx_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTX_ARUSER_WIDTH-1 downto 0);
    m_axi_ctx_RVALID : IN STD_LOGIC;
    m_axi_ctx_RREADY : OUT STD_LOGIC;
    m_axi_ctx_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_DATA_WIDTH-1 downto 0);
    m_axi_ctx_RLAST : IN STD_LOGIC;
    m_axi_ctx_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_RUSER_WIDTH-1 downto 0);
    m_axi_ctx_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_BVALID : IN STD_LOGIC;
    m_axi_ctx_BREADY : OUT STD_LOGIC;
    m_axi_ctx_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ctx_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_ID_WIDTH-1 downto 0);
    m_axi_ctx_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CTX_BUSER_WIDTH-1 downto 0);
    bitStream_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    bitStream_TVALID : IN STD_LOGIC;
    bitStream_TREADY : OUT STD_LOGIC;
    bitOut_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    bitOut_TVALID : OUT STD_LOGIC;
    bitOut_TREADY : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of cabac_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cabac_top_cabac_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.576200,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=2187,HLS_SYN_LUT=4342,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv31_33 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000110011";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

attribute shreg_extract : string;
    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal globalCtx : STD_LOGIC_VECTOR (63 downto 0);
    signal initd : STD_LOGIC_VECTOR (127 downto 0);
    signal bitOut_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal reg_307 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_decode_decision_fu_237_ap_ready : STD_LOGIC;
    signal grp_decode_decision_fu_237_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal reg_312 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal globalCtx_read_reg_480 : STD_LOGIC_VECTOR (63 downto 0);
    signal initd_firstSlice_fu_332_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal initd_firstSlice_reg_517 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_521 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_526 : STD_LOGIC_VECTOR (0 downto 0);
    signal qp_assign_fu_446_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal qp_assign_reg_531 : STD_LOGIC_VECTOR (5 downto 0);
    signal binVal_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal binVal_1_reg_547 : STD_LOGIC_VECTOR (0 downto 0);
    signal binVal_2_reg_552 : STD_LOGIC_VECTOR (0 downto 0);
    signal binVal_3_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal binVal_4_reg_562 : STD_LOGIC_VECTOR (0 downto 0);
    signal binVal_5_reg_567 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ctxTables_ce0 : STD_LOGIC;
    signal ctxTables_we0 : STD_LOGIC;
    signal ctxTables_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctxTables_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_write : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WLAST : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_RREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_BREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_write : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_streamCtxRAM_read : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_ce0 : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_we0 : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_bitStream_TREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_0_ap_vld : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_1_ap_vld : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_3_025_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_3_025_out_ap_vld : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_2_024_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_2_024_out_ap_vld : STD_LOGIC;
    signal grp_decode_decision_fu_237_ap_start : STD_LOGIC;
    signal grp_decode_decision_fu_237_ap_idle : STD_LOGIC;
    signal grp_decode_decision_fu_237_init_offset : STD_LOGIC;
    signal grp_decode_decision_fu_237_mode_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_decode_decision_fu_237_state_ivlCurrRange_V_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_decision_fu_237_state_ivlOffset_V_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_decision_fu_237_state_bstate_currIdx_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_decision_fu_237_state_bstate_n_bits_held_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_decision_fu_237_state_bstate_held_aligned_word_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_decision_fu_237_ctxAddr_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_decode_decision_fu_237_ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_decision_fu_237_ctxTables_ce0 : STD_LOGIC;
    signal grp_decode_decision_fu_237_ctxTables_we0 : STD_LOGIC;
    signal grp_decode_decision_fu_237_ctxTables_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_decision_fu_237_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_decision_fu_237_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_decision_fu_237_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_decision_fu_237_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_decision_fu_237_ap_return_4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_decode_decision_fu_237_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_idle : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_ready : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WLAST : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARVALID : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_RREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_BREADY : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_ce0 : STD_LOGIC;
    signal ctx_AWVALID : STD_LOGIC;
    signal ctx_AWREADY : STD_LOGIC;
    signal ctx_WVALID : STD_LOGIC;
    signal ctx_WREADY : STD_LOGIC;
    signal ctx_ARVALID : STD_LOGIC;
    signal ctx_ARREADY : STD_LOGIC;
    signal ctx_RVALID : STD_LOGIC;
    signal ctx_RREADY : STD_LOGIC;
    signal ctx_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_RLAST : STD_LOGIC;
    signal ctx_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_RFIFONUM : STD_LOGIC_VECTOR (10 downto 0);
    signal ctx_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal ctx_BVALID : STD_LOGIC;
    signal ctx_BREADY : STD_LOGIC;
    signal ctx_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal ctx_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ctxWritten_reg_183 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call15 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal streamCtxRAM_din : STD_LOGIC_VECTOR (7 downto 0);
    signal streamCtxRAM_full_n : STD_LOGIC;
    signal streamCtxRAM_write : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal streamCtxRAM_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal streamCtxRAM_empty_n : STD_LOGIC;
    signal streamCtxRAM_read : STD_LOGIC;
    signal grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tempBst_0_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempBst_1_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_decision_fu_237_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal initd_cabac_init_flag_fu_356_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal initType_1_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal initd_sType_fu_336_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln69_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln67_fu_364_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln69_1_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln67_1_fu_374_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal initType_2_fu_384_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal initType_3_fu_398_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_346_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal a_assign_fu_428_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal cmp_i1_i_i_i_i_i_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_35_fu_436_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal outVal_fu_463_p8 : STD_LOGIC_VECTOR (6 downto 0);
    signal regslice_both_bitOut_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal regslice_both_bitStream_U_apdone_blk : STD_LOGIC;
    signal bitStream_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal bitStream_TVALID_int_regslice : STD_LOGIC;
    signal bitStream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_bitStream_U_ack_in : STD_LOGIC;
    signal bitOut_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal bitOut_TVALID_int_regslice : STD_LOGIC;
    signal bitOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_bitOut_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_40_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        streamCtxRAM_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        streamCtxRAM_full_n : IN STD_LOGIC;
        streamCtxRAM_write : OUT STD_LOGIC;
        icmp_ln79 : IN STD_LOGIC_VECTOR (0 downto 0);
        icmp_ln79_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln40 : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_29_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ctx_AWVALID : OUT STD_LOGIC;
        m_axi_ctx_AWREADY : IN STD_LOGIC;
        m_axi_ctx_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WVALID : OUT STD_LOGIC;
        m_axi_ctx_WREADY : IN STD_LOGIC;
        m_axi_ctx_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WLAST : OUT STD_LOGIC;
        m_axi_ctx_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARVALID : OUT STD_LOGIC;
        m_axi_ctx_ARREADY : IN STD_LOGIC;
        m_axi_ctx_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RVALID : IN STD_LOGIC;
        m_axi_ctx_RREADY : OUT STD_LOGIC;
        m_axi_ctx_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_RLAST : IN STD_LOGIC;
        m_axi_ctx_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_ctx_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BVALID : IN STD_LOGIC;
        m_axi_ctx_BREADY : OUT STD_LOGIC;
        m_axi_ctx_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        globalCtx : IN STD_LOGIC_VECTOR (63 downto 0);
        streamCtxRAM_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        streamCtxRAM_full_n : IN STD_LOGIC;
        streamCtxRAM_write : OUT STD_LOGIC );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_7_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        streamCtxRAM_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        streamCtxRAM_empty_n : IN STD_LOGIC;
        streamCtxRAM_read : OUT STD_LOGIC;
        ctxWritten : IN STD_LOGIC_VECTOR (9 downto 0);
        ctxTables_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ctxTables_ce0 : OUT STD_LOGIC;
        ctxTables_we0 : OUT STD_LOGIC;
        ctxTables_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_40_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bitStream_TVALID : IN STD_LOGIC;
        bitStream_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        bitStream_TREADY : OUT STD_LOGIC;
        tempBst_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tempBst_0_ap_vld : OUT STD_LOGIC;
        tempBst_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tempBst_1_ap_vld : OUT STD_LOGIC;
        tempBst_3_025_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        tempBst_3_025_out_ap_vld : OUT STD_LOGIC;
        tempBst_2_024_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        tempBst_2_024_out_ap_vld : OUT STD_LOGIC );
    end component;


    component cabac_top_decode_decision IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        init_offset : IN STD_LOGIC;
        mode_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        state_ivlCurrRange_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        state_ivlOffset_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        state_bstate_currIdx_read : IN STD_LOGIC_VECTOR (31 downto 0);
        state_bstate_n_bits_held_read : IN STD_LOGIC_VECTOR (7 downto 0);
        state_bstate_held_aligned_word_read : IN STD_LOGIC_VECTOR (7 downto 0);
        bStream : IN STD_LOGIC_VECTOR (7 downto 0);
        bStream1 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctxAddr_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        ctxTables_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ctxTables_ce0 : OUT STD_LOGIC;
        ctxTables_we0 : OUT STD_LOGIC;
        ctxTables_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctxTables_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cabac_top_cabac_top_Pipeline_VITIS_LOOP_13_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ctx_AWVALID : OUT STD_LOGIC;
        m_axi_ctx_AWREADY : IN STD_LOGIC;
        m_axi_ctx_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WVALID : OUT STD_LOGIC;
        m_axi_ctx_WREADY : IN STD_LOGIC;
        m_axi_ctx_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WLAST : OUT STD_LOGIC;
        m_axi_ctx_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARVALID : OUT STD_LOGIC;
        m_axi_ctx_ARREADY : IN STD_LOGIC;
        m_axi_ctx_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ctx_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ctx_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ctx_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ctx_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RVALID : IN STD_LOGIC;
        m_axi_ctx_RREADY : OUT STD_LOGIC;
        m_axi_ctx_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ctx_RLAST : IN STD_LOGIC;
        m_axi_ctx_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_ctx_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BVALID : IN STD_LOGIC;
        m_axi_ctx_BREADY : OUT STD_LOGIC;
        m_axi_ctx_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ctx_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ctx_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        globalCtx : IN STD_LOGIC_VECTOR (63 downto 0);
        ctxWritten : IN STD_LOGIC_VECTOR (9 downto 0);
        ctxTables_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        ctxTables_ce0 : OUT STD_LOGIC;
        ctxTables_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        empty : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cabac_top_ctxTables_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cabac_top_fifo_w8_d512_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component cabac_top_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        globalCtx : OUT STD_LOGIC_VECTOR (63 downto 0);
        initd : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cabac_top_ctx_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (10 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cabac_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    ctxTables_U : component cabac_top_ctxTables_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ctxTables_address0,
        ce0 => ctxTables_ce0,
        we0 => ctxTables_we0,
        d0 => ctxTables_d0,
        q0 => ctxTables_q0);

    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_40_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_ready,
        streamCtxRAM_din => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_din,
        streamCtxRAM_full_n => streamCtxRAM_full_n,
        streamCtxRAM_write => grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_write,
        icmp_ln79 => icmp_ln79_reg_521,
        icmp_ln79_1 => icmp_ln79_1_reg_526,
        zext_ln40 => qp_assign_reg_531);

    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_29_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_ready,
        m_axi_ctx_AWVALID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWVALID,
        m_axi_ctx_AWREADY => ap_const_logic_0,
        m_axi_ctx_AWADDR => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWADDR,
        m_axi_ctx_AWID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWID,
        m_axi_ctx_AWLEN => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWLEN,
        m_axi_ctx_AWSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWSIZE,
        m_axi_ctx_AWBURST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWBURST,
        m_axi_ctx_AWLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWLOCK,
        m_axi_ctx_AWCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWCACHE,
        m_axi_ctx_AWPROT => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWPROT,
        m_axi_ctx_AWQOS => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWQOS,
        m_axi_ctx_AWREGION => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWREGION,
        m_axi_ctx_AWUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_AWUSER,
        m_axi_ctx_WVALID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WVALID,
        m_axi_ctx_WREADY => ap_const_logic_0,
        m_axi_ctx_WDATA => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WDATA,
        m_axi_ctx_WSTRB => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WSTRB,
        m_axi_ctx_WLAST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WLAST,
        m_axi_ctx_WID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WID,
        m_axi_ctx_WUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_WUSER,
        m_axi_ctx_ARVALID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARVALID,
        m_axi_ctx_ARREADY => ctx_ARREADY,
        m_axi_ctx_ARADDR => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARADDR,
        m_axi_ctx_ARID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARID,
        m_axi_ctx_ARLEN => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARLEN,
        m_axi_ctx_ARSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARSIZE,
        m_axi_ctx_ARBURST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARBURST,
        m_axi_ctx_ARLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARLOCK,
        m_axi_ctx_ARCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARCACHE,
        m_axi_ctx_ARPROT => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARPROT,
        m_axi_ctx_ARQOS => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARQOS,
        m_axi_ctx_ARREGION => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARREGION,
        m_axi_ctx_ARUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARUSER,
        m_axi_ctx_RVALID => ctx_RVALID,
        m_axi_ctx_RREADY => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_RREADY,
        m_axi_ctx_RDATA => ctx_RDATA,
        m_axi_ctx_RLAST => ctx_RLAST,
        m_axi_ctx_RID => ctx_RID,
        m_axi_ctx_RFIFONUM => ctx_RFIFONUM,
        m_axi_ctx_RUSER => ctx_RUSER,
        m_axi_ctx_RRESP => ctx_RRESP,
        m_axi_ctx_BVALID => ap_const_logic_0,
        m_axi_ctx_BREADY => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_BREADY,
        m_axi_ctx_BRESP => ap_const_lv2_0,
        m_axi_ctx_BID => ap_const_lv1_0,
        m_axi_ctx_BUSER => ap_const_lv1_0,
        globalCtx => globalCtx_read_reg_480,
        streamCtxRAM_din => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_din,
        streamCtxRAM_full_n => streamCtxRAM_full_n,
        streamCtxRAM_write => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_write);

    grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_7_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_ready,
        streamCtxRAM_dout => streamCtxRAM_dout,
        streamCtxRAM_empty_n => streamCtxRAM_empty_n,
        streamCtxRAM_read => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_streamCtxRAM_read,
        ctxWritten => ctxWritten_reg_183,
        ctxTables_address0 => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_address0,
        ctxTables_ce0 => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_ce0,
        ctxTables_we0 => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_we0,
        ctxTables_d0 => grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_d0);

    grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_40_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_ready,
        bitStream_TVALID => bitStream_TVALID_int_regslice,
        bitStream_TDATA => bitStream_TDATA_int_regslice,
        bitStream_TREADY => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_bitStream_TREADY,
        tempBst_0 => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_0,
        tempBst_0_ap_vld => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_0_ap_vld,
        tempBst_1 => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_1,
        tempBst_1_ap_vld => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_1_ap_vld,
        tempBst_3_025_out => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_3_025_out,
        tempBst_3_025_out_ap_vld => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_3_025_out_ap_vld,
        tempBst_2_024_out => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_2_024_out,
        tempBst_2_024_out_ap_vld => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_2_024_out_ap_vld);

    grp_decode_decision_fu_237 : component cabac_top_decode_decision
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_decode_decision_fu_237_ap_start,
        ap_done => grp_decode_decision_fu_237_ap_done,
        ap_idle => grp_decode_decision_fu_237_ap_idle,
        ap_ready => grp_decode_decision_fu_237_ap_ready,
        init_offset => grp_decode_decision_fu_237_init_offset,
        mode_offset => grp_decode_decision_fu_237_mode_offset,
        state_ivlCurrRange_V_read => grp_decode_decision_fu_237_state_ivlCurrRange_V_read,
        state_ivlOffset_V_read => grp_decode_decision_fu_237_state_ivlOffset_V_read,
        state_bstate_currIdx_read => grp_decode_decision_fu_237_state_bstate_currIdx_read,
        state_bstate_n_bits_held_read => grp_decode_decision_fu_237_state_bstate_n_bits_held_read,
        state_bstate_held_aligned_word_read => grp_decode_decision_fu_237_state_bstate_held_aligned_word_read,
        bStream => tempBst_0_fu_156,
        bStream1 => tempBst_1_fu_160,
        p_read => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_2_024_out,
        p_read1 => grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_3_025_out,
        ctxAddr_offset => grp_decode_decision_fu_237_ctxAddr_offset,
        ctxTables_address0 => grp_decode_decision_fu_237_ctxTables_address0,
        ctxTables_ce0 => grp_decode_decision_fu_237_ctxTables_ce0,
        ctxTables_we0 => grp_decode_decision_fu_237_ctxTables_we0,
        ctxTables_d0 => grp_decode_decision_fu_237_ctxTables_d0,
        ctxTables_q0 => ctxTables_q0,
        ap_return_0 => grp_decode_decision_fu_237_ap_return_0,
        ap_return_1 => grp_decode_decision_fu_237_ap_return_1,
        ap_return_2 => grp_decode_decision_fu_237_ap_return_2,
        ap_return_3 => grp_decode_decision_fu_237_ap_return_3,
        ap_return_4 => grp_decode_decision_fu_237_ap_return_4,
        ap_return_5 => grp_decode_decision_fu_237_ap_return_5);

    grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271 : component cabac_top_cabac_top_Pipeline_VITIS_LOOP_13_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start,
        ap_done => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done,
        ap_idle => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_idle,
        ap_ready => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_ready,
        m_axi_ctx_AWVALID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWVALID,
        m_axi_ctx_AWREADY => ctx_AWREADY,
        m_axi_ctx_AWADDR => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWADDR,
        m_axi_ctx_AWID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWID,
        m_axi_ctx_AWLEN => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWLEN,
        m_axi_ctx_AWSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWSIZE,
        m_axi_ctx_AWBURST => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWBURST,
        m_axi_ctx_AWLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWLOCK,
        m_axi_ctx_AWCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWCACHE,
        m_axi_ctx_AWPROT => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWPROT,
        m_axi_ctx_AWQOS => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWQOS,
        m_axi_ctx_AWREGION => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWREGION,
        m_axi_ctx_AWUSER => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWUSER,
        m_axi_ctx_WVALID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WVALID,
        m_axi_ctx_WREADY => ctx_WREADY,
        m_axi_ctx_WDATA => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WDATA,
        m_axi_ctx_WSTRB => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WSTRB,
        m_axi_ctx_WLAST => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WLAST,
        m_axi_ctx_WID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WID,
        m_axi_ctx_WUSER => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WUSER,
        m_axi_ctx_ARVALID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARVALID,
        m_axi_ctx_ARREADY => ap_const_logic_0,
        m_axi_ctx_ARADDR => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARADDR,
        m_axi_ctx_ARID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARID,
        m_axi_ctx_ARLEN => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARLEN,
        m_axi_ctx_ARSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARSIZE,
        m_axi_ctx_ARBURST => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARBURST,
        m_axi_ctx_ARLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARLOCK,
        m_axi_ctx_ARCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARCACHE,
        m_axi_ctx_ARPROT => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARPROT,
        m_axi_ctx_ARQOS => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARQOS,
        m_axi_ctx_ARREGION => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARREGION,
        m_axi_ctx_ARUSER => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_ARUSER,
        m_axi_ctx_RVALID => ap_const_logic_0,
        m_axi_ctx_RREADY => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_RREADY,
        m_axi_ctx_RDATA => ap_const_lv8_0,
        m_axi_ctx_RLAST => ap_const_logic_0,
        m_axi_ctx_RID => ap_const_lv1_0,
        m_axi_ctx_RFIFONUM => ap_const_lv11_0,
        m_axi_ctx_RUSER => ap_const_lv1_0,
        m_axi_ctx_RRESP => ap_const_lv2_0,
        m_axi_ctx_BVALID => ctx_BVALID,
        m_axi_ctx_BREADY => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_BREADY,
        m_axi_ctx_BRESP => ctx_BRESP,
        m_axi_ctx_BID => ctx_BID,
        m_axi_ctx_BUSER => ctx_BUSER,
        globalCtx => globalCtx_read_reg_480,
        ctxWritten => ctxWritten_reg_183,
        ctxTables_address0 => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_address0,
        ctxTables_ce0 => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_ce0,
        ctxTables_q0 => ctxTables_q0,
        empty => ctxWritten_reg_183);

    control_s_axi_U : component cabac_top_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        globalCtx => globalCtx,
        initd => initd,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    ctx_m_axi_U : component cabac_top_ctx_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 11,
        C_M_AXI_ID_WIDTH => C_M_AXI_CTX_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_CTX_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_CTX_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_CTX_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_CTX_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_CTX_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_CTX_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_CTX_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_CTX_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_CTX_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_CTX_CACHE_VALUE)
    port map (
        AWVALID => m_axi_ctx_AWVALID,
        AWREADY => m_axi_ctx_AWREADY,
        AWADDR => m_axi_ctx_AWADDR,
        AWID => m_axi_ctx_AWID,
        AWLEN => m_axi_ctx_AWLEN,
        AWSIZE => m_axi_ctx_AWSIZE,
        AWBURST => m_axi_ctx_AWBURST,
        AWLOCK => m_axi_ctx_AWLOCK,
        AWCACHE => m_axi_ctx_AWCACHE,
        AWPROT => m_axi_ctx_AWPROT,
        AWQOS => m_axi_ctx_AWQOS,
        AWREGION => m_axi_ctx_AWREGION,
        AWUSER => m_axi_ctx_AWUSER,
        WVALID => m_axi_ctx_WVALID,
        WREADY => m_axi_ctx_WREADY,
        WDATA => m_axi_ctx_WDATA,
        WSTRB => m_axi_ctx_WSTRB,
        WLAST => m_axi_ctx_WLAST,
        WID => m_axi_ctx_WID,
        WUSER => m_axi_ctx_WUSER,
        ARVALID => m_axi_ctx_ARVALID,
        ARREADY => m_axi_ctx_ARREADY,
        ARADDR => m_axi_ctx_ARADDR,
        ARID => m_axi_ctx_ARID,
        ARLEN => m_axi_ctx_ARLEN,
        ARSIZE => m_axi_ctx_ARSIZE,
        ARBURST => m_axi_ctx_ARBURST,
        ARLOCK => m_axi_ctx_ARLOCK,
        ARCACHE => m_axi_ctx_ARCACHE,
        ARPROT => m_axi_ctx_ARPROT,
        ARQOS => m_axi_ctx_ARQOS,
        ARREGION => m_axi_ctx_ARREGION,
        ARUSER => m_axi_ctx_ARUSER,
        RVALID => m_axi_ctx_RVALID,
        RREADY => m_axi_ctx_RREADY,
        RDATA => m_axi_ctx_RDATA,
        RLAST => m_axi_ctx_RLAST,
        RID => m_axi_ctx_RID,
        RUSER => m_axi_ctx_RUSER,
        RRESP => m_axi_ctx_RRESP,
        BVALID => m_axi_ctx_BVALID,
        BREADY => m_axi_ctx_BREADY,
        BRESP => m_axi_ctx_BRESP,
        BID => m_axi_ctx_BID,
        BUSER => m_axi_ctx_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ctx_ARVALID,
        I_ARREADY => ctx_ARREADY,
        I_ARADDR => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARADDR,
        I_ARID => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARID,
        I_ARLEN => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARLEN,
        I_ARSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARSIZE,
        I_ARLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARLOCK,
        I_ARCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARCACHE,
        I_ARQOS => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARQOS,
        I_ARPROT => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARPROT,
        I_ARUSER => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARUSER,
        I_ARBURST => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARBURST,
        I_ARREGION => grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARREGION,
        I_RVALID => ctx_RVALID,
        I_RREADY => ctx_RREADY,
        I_RDATA => ctx_RDATA,
        I_RFIFONUM => ctx_RFIFONUM,
        I_RID => ctx_RID,
        I_RUSER => ctx_RUSER,
        I_RRESP => ctx_RRESP,
        I_RLAST => ctx_RLAST,
        I_AWVALID => ctx_AWVALID,
        I_AWREADY => ctx_AWREADY,
        I_AWADDR => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWADDR,
        I_AWID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWID,
        I_AWLEN => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWLEN,
        I_AWSIZE => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWSIZE,
        I_AWLOCK => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWLOCK,
        I_AWCACHE => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWCACHE,
        I_AWQOS => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWQOS,
        I_AWPROT => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWPROT,
        I_AWUSER => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWUSER,
        I_AWBURST => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWBURST,
        I_AWREGION => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWREGION,
        I_WVALID => ctx_WVALID,
        I_WREADY => ctx_WREADY,
        I_WDATA => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WDATA,
        I_WID => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WID,
        I_WUSER => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WUSER,
        I_WLAST => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WLAST,
        I_WSTRB => grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WSTRB,
        I_BVALID => ctx_BVALID,
        I_BREADY => ctx_BREADY,
        I_BRESP => ctx_BRESP,
        I_BID => ctx_BID,
        I_BUSER => ctx_BUSER);

    streamCtxRAM_fifo_U : component cabac_top_fifo_w8_d512_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamCtxRAM_din,
        if_full_n => streamCtxRAM_full_n,
        if_write => streamCtxRAM_write,
        if_dout => streamCtxRAM_dout,
        if_empty_n => streamCtxRAM_empty_n,
        if_read => streamCtxRAM_read);

    regslice_both_bitStream_U : component cabac_top_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => bitStream_TDATA,
        vld_in => bitStream_TVALID,
        ack_in => regslice_both_bitStream_U_ack_in,
        data_out => bitStream_TDATA_int_regslice,
        vld_out => bitStream_TVALID_int_regslice,
        ack_out => bitStream_TREADY_int_regslice,
        apdone_blk => regslice_both_bitStream_U_apdone_blk);

    regslice_both_bitOut_U : component cabac_top_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => bitOut_TDATA_int_regslice,
        vld_in => bitOut_TVALID_int_regslice,
        ack_in => bitOut_TREADY_int_regslice,
        data_out => bitOut_TDATA,
        vld_out => regslice_both_bitOut_U_vld_out,
        ack_out => bitOut_TREADY,
        apdone_blk => regslice_both_bitOut_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((regslice_both_bitOut_U_apdone_blk = ap_const_logic_1) or (grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start_reg <= ap_const_logic_0;
            else
                if (((bitOut_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (initd_firstSlice_fu_332_p1 = ap_const_lv1_1))) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_ready = ap_const_logic_1)) then 
                    grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_decision_fu_237_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_decode_decision_fu_237_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    grp_decode_decision_fu_237_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_decision_fu_237_ap_ready = ap_const_logic_1)) then 
                    grp_decode_decision_fu_237_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    ctxWritten_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                ctxWritten_reg_183(0) <= '1';
                ctxWritten_reg_183(2) <= '1';
                ctxWritten_reg_183(9) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (initd_firstSlice_reg_517 = ap_const_lv1_0))) then 
                ctxWritten_reg_183(0) <= '0';
                ctxWritten_reg_183(2) <= '0';
                ctxWritten_reg_183(9) <= '1';
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                binVal_1_reg_547 <= grp_decode_decision_fu_237_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                binVal_2_reg_552 <= grp_decode_decision_fu_237_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                binVal_3_reg_557 <= grp_decode_decision_fu_237_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                binVal_4_reg_562 <= grp_decode_decision_fu_237_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                binVal_5_reg_567 <= grp_decode_decision_fu_237_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                binVal_reg_542 <= grp_decode_decision_fu_237_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                globalCtx_read_reg_480 <= globalCtx;
                initd_firstSlice_reg_517 <= initd_firstSlice_fu_332_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (initd_firstSlice_fu_332_p1 = ap_const_lv1_1))) then
                icmp_ln79_1_reg_526 <= icmp_ln79_1_fu_413_p2;
                icmp_ln79_reg_521 <= icmp_ln79_fu_406_p2;
                qp_assign_reg_531 <= qp_assign_fu_446_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1)))) then
                reg_307 <= grp_decode_decision_fu_237_ap_return_3;
                reg_312 <= grp_decode_decision_fu_237_ap_return_2;
                reg_317 <= grp_decode_decision_fu_237_ap_return_1;
                reg_322 <= grp_decode_decision_fu_237_ap_return_0;
                reg_327 <= grp_decode_decision_fu_237_ap_return_5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_0_ap_vld = ap_const_logic_1))) then
                tempBst_0_fu_156 <= grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_1_ap_vld = ap_const_logic_1))) then
                tempBst_1_fu_160 <= grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_tempBst_1;
            end if;
        end if;
    end process;
    ctxWritten_reg_183(1) <= '0';
    ctxWritten_reg_183(8 downto 3) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state13, grp_decode_decision_fu_237_ap_done, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, initd_firstSlice_fu_332_p1, grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_done, grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state27, regslice_both_bitOut_U_apdone_blk, bitOut_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (initd_firstSlice_fu_332_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (initd_firstSlice_fu_332_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_decode_decision_fu_237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if ((not(((bitOut_TREADY_int_regslice = ap_const_logic_0) or (grp_decode_decision_fu_237_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((bitOut_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if ((not(((regslice_both_bitOut_U_apdone_blk = ap_const_logic_1) or (grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_assign_fu_428_p3 <= 
        ap_const_lv31_0 when (tmp_fu_420_p3(0) = '1') else 
        trunc_ln_fu_346_p4;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_decode_decision_fu_237_ap_done)
    begin
        if ((grp_decode_decision_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_decode_decision_fu_237_ap_done)
    begin
        if ((grp_decode_decision_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_decode_decision_fu_237_ap_done)
    begin
        if ((grp_decode_decision_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_decode_decision_fu_237_ap_done)
    begin
        if ((grp_decode_decision_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_decode_decision_fu_237_ap_done)
    begin
        if ((grp_decode_decision_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_decode_decision_fu_237_ap_done)
    begin
        if ((grp_decode_decision_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(grp_decode_decision_fu_237_ap_done, bitOut_TREADY_int_regslice)
    begin
        if (((bitOut_TREADY_int_regslice = ap_const_logic_0) or (grp_decode_decision_fu_237_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state26_blk_assign_proc : process(bitOut_TREADY_int_regslice)
    begin
        if ((bitOut_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state27_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done, regslice_both_bitOut_U_apdone_blk)
    begin
        if (((regslice_both_bitOut_U_apdone_blk = ap_const_logic_1) or (grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_done)
    begin
        if ((grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call15_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call15 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done, ap_CS_fsm_state27, regslice_both_bitOut_U_apdone_blk)
    begin
        if ((not(((regslice_both_bitOut_U_apdone_blk = ap_const_logic_1) or (grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done, ap_CS_fsm_state27, regslice_both_bitOut_U_apdone_blk)
    begin
        if ((not(((regslice_both_bitOut_U_apdone_blk = ap_const_logic_1) or (grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bitOut_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state26, bitOut_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            bitOut_TDATA_blk_n <= bitOut_TREADY_int_regslice;
        else 
            bitOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bitOut_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(outVal_fu_463_p8),32));
    bitOut_TVALID <= regslice_both_bitOut_U_vld_out;

    bitOut_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state25, grp_decode_decision_fu_237_ap_done, bitOut_TREADY_int_regslice)
    begin
        if ((not(((bitOut_TREADY_int_regslice = ap_const_logic_0) or (grp_decode_decision_fu_237_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            bitOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            bitOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    bitStream_TREADY <= regslice_both_bitStream_U_ack_in;

    bitStream_TREADY_int_regslice_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_bitStream_TREADY, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            bitStream_TREADY_int_regslice <= grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_bitStream_TREADY;
        else 
            bitStream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i1_i_i_i_i_i_fu_440_p2 <= "1" when (unsigned(a_assign_fu_428_p3) < unsigned(ap_const_lv31_33)) else "0";

    ctxTables_address0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_address0, grp_decode_decision_fu_237_ctxTables_address0, grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_address0, ap_CS_fsm_state8, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ctxTables_address0 <= grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            ctxTables_address0 <= grp_decode_decision_fu_237_ctxTables_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_address0 <= grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_address0;
        else 
            ctxTables_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ctxTables_ce0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_ce0, grp_decode_decision_fu_237_ctxTables_ce0, grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_ce0, ap_CS_fsm_state8, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ctxTables_ce0 <= grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ctxTables_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            ctxTables_ce0 <= grp_decode_decision_fu_237_ctxTables_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_ce0 <= grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_ce0;
        else 
            ctxTables_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctxTables_d0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_d0, grp_decode_decision_fu_237_ctxTables_d0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            ctxTables_d0 <= grp_decode_decision_fu_237_ctxTables_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_d0 <= grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_d0;
        else 
            ctxTables_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctxTables_we0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_we0, grp_decode_decision_fu_237_ctxTables_we0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            ctxTables_we0 <= grp_decode_decision_fu_237_ctxTables_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ctxTables_we0 <= grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ctxTables_we0;
        else 
            ctxTables_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_ARVALID_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_ARVALID <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_ARVALID;
        else 
            ctx_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    ctx_AWVALID_assign_proc : process(ap_CS_fsm_state26, grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWVALID, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ctx_AWVALID <= grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_AWVALID;
        else 
            ctx_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    ctx_BREADY_assign_proc : process(ap_CS_fsm_state26, grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_BREADY, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ctx_BREADY <= grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_BREADY;
        else 
            ctx_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    ctx_RREADY_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_RREADY <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_m_axi_ctx_RREADY;
        else 
            ctx_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    ctx_WVALID_assign_proc : process(ap_CS_fsm_state26, grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WVALID, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ctx_WVALID <= grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_m_axi_ctx_WVALID;
        else 
            ctx_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    empty_35_fu_436_p1 <= a_assign_fu_428_p3(6 - 1 downto 0);
    grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_13_1_fu_271_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_40_11_fu_227_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_ap_start_reg;
    grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start <= grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_ap_start_reg;
    grp_decode_decision_fu_237_ap_start <= grp_decode_decision_fu_237_ap_start_reg;

    grp_decode_decision_fu_237_ctxAddr_offset_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_ctxAddr_offset <= ap_const_lv1_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_decode_decision_fu_237_ctxAddr_offset <= ap_const_lv1_1;
        else 
            grp_decode_decision_fu_237_ctxAddr_offset <= "X";
        end if; 
    end process;


    grp_decode_decision_fu_237_init_offset_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_init_offset <= ap_const_logic_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_decode_decision_fu_237_init_offset <= ap_const_logic_1;
        else 
            grp_decode_decision_fu_237_init_offset <= 'X';
        end if; 
    end process;


    grp_decode_decision_fu_237_mode_offset_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_mode_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_decode_decision_fu_237_mode_offset <= ap_const_lv1_0;
        else 
            grp_decode_decision_fu_237_mode_offset <= "X";
        end if; 
    end process;


    grp_decode_decision_fu_237_state_bstate_currIdx_read_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, reg_317)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_state_bstate_currIdx_read <= reg_317;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_decode_decision_fu_237_state_bstate_currIdx_read <= ap_const_lv32_0;
        else 
            grp_decode_decision_fu_237_state_bstate_currIdx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_decode_decision_fu_237_state_bstate_held_aligned_word_read_assign_proc : process(ap_CS_fsm_state25, reg_307, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_state_bstate_held_aligned_word_read <= reg_307;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_decode_decision_fu_237_state_bstate_held_aligned_word_read <= ap_const_lv8_0;
        else 
            grp_decode_decision_fu_237_state_bstate_held_aligned_word_read <= "XXXXXXXX";
        end if; 
    end process;


    grp_decode_decision_fu_237_state_bstate_n_bits_held_read_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, reg_312)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_state_bstate_n_bits_held_read <= reg_312;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_decode_decision_fu_237_state_bstate_n_bits_held_read <= ap_const_lv8_0;
        else 
            grp_decode_decision_fu_237_state_bstate_n_bits_held_read <= "XXXXXXXX";
        end if; 
    end process;


    grp_decode_decision_fu_237_state_ivlCurrRange_V_read_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, reg_322)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_state_ivlCurrRange_V_read <= reg_322;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_decode_decision_fu_237_state_ivlCurrRange_V_read <= ap_const_lv32_0;
        else 
            grp_decode_decision_fu_237_state_ivlCurrRange_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_decode_decision_fu_237_state_ivlOffset_V_read_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, reg_327)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_decode_decision_fu_237_state_ivlOffset_V_read <= reg_327;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_decode_decision_fu_237_state_ivlOffset_V_read <= ap_const_lv32_0;
        else 
            grp_decode_decision_fu_237_state_ivlOffset_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln69_1_fu_392_p2 <= "1" when (initd_sType_fu_336_p4 = ap_const_lv32_1) else "0";
    icmp_ln69_fu_378_p2 <= "1" when (initd_sType_fu_336_p4 = ap_const_lv32_0) else "0";
    icmp_ln79_1_fu_413_p2 <= "1" when (initType_3_fu_398_p3 = ap_const_lv2_0) else "0";
    icmp_ln79_fu_406_p2 <= "1" when (initType_3_fu_398_p3 = ap_const_lv2_1) else "0";
    initType_1_fu_368_p2 <= (initd_cabac_init_flag_fu_356_p3 xor ap_const_lv1_1);
    initType_2_fu_384_p3 <= 
        zext_ln67_fu_364_p1 when (icmp_ln69_fu_378_p2(0) = '1') else 
        ap_const_lv2_2;
    initType_3_fu_398_p3 <= 
        zext_ln67_1_fu_374_p1 when (icmp_ln69_1_fu_392_p2(0) = '1') else 
        initType_2_fu_384_p3;
    initd_cabac_init_flag_fu_356_p3 <= initd(96 downto 96);
    initd_firstSlice_fu_332_p1 <= initd(1 - 1 downto 0);
    initd_sType_fu_336_p4 <= initd(63 downto 32);
    outVal_fu_463_p8 <= ((((((binVal_reg_542 & binVal_1_reg_547) & binVal_2_reg_552) & binVal_3_reg_557) & binVal_4_reg_562) & binVal_5_reg_567) & grp_decode_decision_fu_237_ap_return_4);
    qp_assign_fu_446_p3 <= 
        empty_35_fu_436_p1 when (cmp_i1_i_i_i_i_i_fu_440_p2(0) = '1') else 
        ap_const_lv6_33;

    streamCtxRAM_din_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_din, grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_din, ap_CS_fsm_state5, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            streamCtxRAM_din <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            streamCtxRAM_din <= grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_din;
        else 
            streamCtxRAM_din <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_din;
        end if; 
    end process;


    streamCtxRAM_read_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_streamCtxRAM_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            streamCtxRAM_read <= grp_cabac_top_Pipeline_VITIS_LOOP_7_1_fu_219_streamCtxRAM_read;
        else 
            streamCtxRAM_read <= ap_const_logic_0;
        end if; 
    end process;


    streamCtxRAM_write_assign_proc : process(grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_write, grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_write, ap_CS_fsm_state5, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            streamCtxRAM_write <= grp_cabac_top_Pipeline_VITIS_LOOP_29_1_fu_211_streamCtxRAM_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            streamCtxRAM_write <= grp_cabac_top_Pipeline_VITIS_LOOP_40_1_fu_197_streamCtxRAM_write;
        else 
            streamCtxRAM_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_420_p3 <= initd(95 downto 95);
    trunc_ln_fu_346_p4 <= initd(94 downto 64);
    zext_ln67_1_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(initType_1_fu_368_p2),2));
    zext_ln67_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(initd_cabac_init_flag_fu_356_p3),2));
end behav;
